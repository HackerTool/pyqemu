#!/usr/bin/env python

from heuristic import PyQemuHeuristic
import struct

constsearch_trigger_api_calls = [
	"ExitProcess",
	"ExitThread",
	"LoadLibrary",
	"CreateProcess",
	"CreateThread",
	"CreateRemoteThread",
]

def uint32_array(x, little_endian = True):
	return pattern_padder(x, 4, little_endian)

def uint16_array(x, little_endian = True):
	return pattern_padder(x, 2, little_endian)

def pattern_padder(x, itemsize = 4, little_endian = True):
	if little_endian:
		padder = lambda item: item+"\x00"*(itemsize-1)
	else:
		padder = lambda item: "\x00"*(itemsize-1)+item
	return "".join(map(padder, x))

class PatternManager:
	patternlist = {
		"\x63\x7c\x77\x7b\xf2\x6b\x6f\xc5\x30\x01\x67\x2b\xfe\xd7\xab\x76": "Single ROW of AES forward box", 
		"\xca\x82\xc9\x7d\xfa\x59\x47\xf0\xad\xd4\xa2\xaf\x9c\xa4\x72\xc0": "Single ROW of AES forward box", 
		"\xb7\xfd\x93\x26\x36\x3f\xf7\xcc\x34\xa5\xe5\xf1\x71\xd8\x31\x15": "Single ROW of AES forward box", 
		"\x04\xc7\x23\xc3\x18\x96\x05\x9a\x07\x12\x80\xe2\xeb\x27\xb2\x75": "Single ROW of AES forward box", 
		"\x09\x83\x2c\x1a\x1b\x6e\x5a\xa0\x52\x3b\xd6\xb3\x29\xe3\x2f\x84": "Single ROW of AES forward box", 
		"\x53\xd1\x00\xed\x20\xfc\xb1\x5b\x6a\xcb\xbe\x39\x4a\x4c\x58\xcf": "Single ROW of AES forward box", 
		"\xd0\xef\xaa\xfb\x43\x4d\x33\x85\x45\xf9\x02\x7f\x50\x3c\x9f\xa8": "Single ROW of AES forward box", 
		"\x51\xa3\x40\x8f\x92\x9d\x38\xf5\xbc\xb6\xda\x21\x10\xff\xf3\xd2": "Single ROW of AES forward box", 
		"\xcd\x0c\x13\xec\x5f\x97\x44\x17\xc4\xa7\x7e\x3d\x64\x5d\x19\x73": "Single ROW of AES forward box", 
		"\x60\x81\x4f\xdc\x22\x2a\x90\x88\x46\xee\xb8\x14\xde\x5e\x0b\xdb": "Single ROW of AES forward box", 
		"\xe0\x32\x3a\x0a\x49\x06\x24\x5c\xc2\xd3\xac\x62\x91\x95\xe4\x79": "Single ROW of AES forward box", 
		"\xe7\xc8\x37\x6d\x8d\xd5\x4e\xa9\x6c\x56\xf4\xea\x65\x7a\xae\x08": "Single ROW of AES forward box", 
		"\xba\x78\x25\x2e\x1c\xa6\xb4\xc6\xe8\xdd\x74\x1f\x4b\xbd\x8b\x8a": "Single ROW of AES forward box", 
		"\x70\x3e\xb5\x66\x48\x03\xf6\x0e\x61\x35\x57\xb9\x86\xc1\x1d\x9e": "Single ROW of AES forward box", 
		"\xe1\xf8\x98\x11\x69\xd9\x8e\x94\x9b\x1e\x87\xe9\xce\x55\x28\xdf": "Single ROW of AES forward box", 
		"\x8c\xa1\x89\x0d\xbf\xe6\x42\x68\x41\x99\x2d\x0f\xb0\x54\xbb\x16": "Single ROW of AES forward box", 
		"\x52\x09\x6a\xd5\x30\x36\xa5\x38\xbf\x40\xa3\x9e\x81\xf3\xd7\xfb": "Single ROW of AES inverse box", 
		"\x7c\xe3\x39\x82\x9b\x2f\xff\x87\x34\x8e\x43\x44\xc4\xde\xe9\xcb": "Single ROW of AES inverse box", 
		"\x54\x7b\x94\x32\xa6\xc2\x23\x3d\xee\x4c\x95\x0b\x42\xfa\xc3\x4e": "Single ROW of AES inverse box", 
		"\x08\x2e\xa1\x66\x28\xd9\x24\xb2\x76\x5b\xa2\x49\x6d\x8b\xd1\x25": "Single ROW of AES inverse box", 
		"\x72\xf8\xf6\x64\x86\x68\x98\x16\xd4\xa4\x5c\xcc\x5d\x65\xb6\x92": "Single ROW of AES inverse box", 
		"\x6c\x70\x48\x50\xfd\xed\xb9\xda\x5e\x15\x46\x57\xa7\x8d\x9d\x84": "Single ROW of AES inverse box", 
		"\x90\xd8\xab\x00\x8c\xbc\xd3\x0a\xf7\xe4\x58\x05\xb8\xb3\x45\x06": "Single ROW of AES inverse box", 
		"\xd0\x2c\x1e\x8f\xca\x3f\x0f\x02\xc1\xaf\xbd\x03\x01\x13\x8a\x6b": "Single ROW of AES inverse box", 
		"\x3a\x91\x11\x41\x4f\x67\xdc\xea\x97\xf2\xcf\xce\xf0\xb4\xe6\x73": "Single ROW of AES inverse box", 
		"\x96\xac\x74\x22\xe7\xad\x35\x85\xe2\xf9\x37\xe8\x1c\x75\xdf\x6e": "Single ROW of AES inverse box", 
		"\x47\xf1\x1a\x71\x1d\x29\xc5\x89\x6f\xb7\x62\x0e\xaa\x18\xbe\x1b": "Single ROW of AES inverse box", 
		"\xfc\x56\x3e\x4b\xc6\xd2\x79\x20\x9a\xdb\xc0\xfe\x78\xcd\x5a\xf4": "Single ROW of AES inverse box", 
		"\x1f\xdd\xa8\x33\x88\x07\xc7\x31\xb1\x12\x10\x59\x27\x80\xec\x5f": "Single ROW of AES inverse box", 
		"\x60\x51\x7f\xa9\x19\xb5\x4a\x0d\x2d\xe5\x7a\x9f\x93\xc9\x9c\xef": "Single ROW of AES inverse box", 
		"\xa0\xe0\x3b\x4d\xae\x2a\xf5\xb0\xc8\xeb\xbb\x3c\x83\x53\x99\x61": "Single ROW of AES inverse box", 
		"\x17\x2b\x04\x7e\xba\x77\xd6\x26\xe1\x69\x14\x63\x55\x21\x0c\x7d": "Single ROW of AES inverse box", 
		"\x00\x04\x01\x01\x00\x00\x00\x00\x00\x00\x01\x00\x04\x04\x01\x01\x04\x00\x01\x01\x04\x04\x01\x00\x04\x00\x00\x00\x00\x00\x01\x00\x00\x04\x00\x00\x00\x04\x01\x01\x04\x04\x01\x01\x00\x04\x00\x00\x04\x04\x00\x01\x04\x00\x01\x01\x00\x00\x00\x01\x04\x00\x00\x00\x04\x04\x00\x00\x00\x04\x00\x01\x00\x04\x00\x01\x00\x04\x01\x00\x00\x04\x01\x00\x00\x00\x01\x01\x00\x00\x01\x01\x04\x04\x00\x01\x04\x00\x01\x00\x04\x00\x00\x01\x04\x00\x00\x01\x04\x00\x01\x00\x00\x00\x00\x00\x04\x04\x00\x00\x04\x04\x01\x00\x00\x00\x00\x01\x00\x00\x01\x00\x04\x04\x01\x01\x04\x00\x00\x00\x00\x00\x01\x01\x00\x04\x01\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x04\x00\x00\x04\x00\x01\x01\x00\x00\x01\x00\x00\x04\x01\x00\x04\x00\x00\x01\x00\x04\x00\x00\x04\x00\x00\x00\x04\x04\x00\x01\x04\x04\x01\x00\x04\x04\x01\x01\x04\x00\x01\x00\x00\x00\x01\x01\x04\x04\x00\x01\x04\x00\x00\x01\x04\x04\x00\x00\x04\x04\x01\x00\x00\x04\x01\x01\x04\x04\x00\x00\x00\x04\x00\x01\x00\x04\x00\x01\x00\x00\x00\x00\x04\x00\x01\x00\x00\x04\x01\x00\x00\x00\x00\x00\x04\x00\x01\x01":"DES S-BOX 1",
		"\x20\x80\x10\x80\x00\x80\x00\x80\x00\x80\x00\x00\x20\x80\x10\x00\x00\x00\x10\x00\x20\x00\x00\x00\x20\x00\x10\x80\x20\x80\x00\x80\x20\x00\x00\x80\x20\x80\x10\x80\x00\x80\x10\x80\x00\x00\x00\x80\x00\x80\x00\x80\x00\x00\x10\x00\x20\x00\x00\x00\x20\x00\x10\x80\x00\x80\x10\x00\x20\x00\x10\x00\x20\x80\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x80\x00\x00\x20\x80\x10\x00\x00\x00\x10\x80\x20\x00\x10\x00\x20\x00\x00\x80\x00\x00\x00\x00\x00\x80\x10\x00\x20\x80\x00\x00\x00\x80\x10\x80\x00\x00\x10\x80\x20\x80\x00\x00\x00\x00\x00\x00\x20\x80\x10\x00\x20\x00\x10\x80\x00\x00\x10\x00\x20\x80\x00\x80\x00\x00\x10\x80\x00\x80\x10\x80\x00\x80\x00\x00\x00\x00\x10\x80\x00\x80\x00\x80\x20\x00\x00\x00\x20\x80\x10\x80\x20\x80\x10\x00\x20\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x80\x20\x80\x00\x00\x00\x80\x10\x80\x00\x00\x10\x00\x20\x00\x00\x80\x20\x00\x10\x00\x20\x80\x00\x80\x20\x00\x00\x80\x20\x00\x10\x00\x00\x80\x10\x00\x00\x00\x00\x00\x00\x80\x00\x80\x20\x80\x00\x00\x00\x00\x00\x80\x20\x00\x10\x80\x20\x80\x10\x80\x00\x80\x10\x00":"DES S-BOX 2",
		"\x08\x02\x00\x00\x00\x02\x02\x08\x00\x00\x00\x00\x08\x00\x02\x08\x00\x02\x00\x08\x00\x00\x00\x00\x08\x02\x02\x00\x00\x02\x00\x08\x08\x00\x02\x00\x08\x00\x00\x08\x08\x00\x00\x08\x00\x00\x02\x00\x08\x02\x02\x08\x08\x00\x02\x00\x00\x00\x02\x08\x08\x02\x00\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x02\x02\x08\x00\x02\x00\x00\x00\x02\x02\x00\x00\x00\x02\x08\x08\x00\x02\x08\x08\x02\x02\x00\x08\x02\x00\x08\x00\x02\x02\x00\x00\x00\x02\x00\x08\x02\x00\x08\x08\x00\x00\x00\x08\x02\x02\x08\x00\x02\x00\x00\x00\x00\x00\x08\x00\x02\x02\x08\x00\x00\x00\x08\x08\x00\x02\x00\x08\x02\x00\x00\x00\x00\x02\x00\x00\x02\x02\x08\x00\x02\x00\x08\x00\x00\x00\x00\x00\x02\x00\x00\x08\x00\x02\x00\x08\x02\x02\x08\x00\x02\x00\x08\x08\x00\x00\x08\x00\x02\x00\x00\x00\x00\x00\x00\x08\x00\x02\x08\x08\x02\x00\x08\x00\x00\x02\x00\x00\x00\x00\x08\x08\x02\x02\x08\x08\x00\x00\x00\x08\x02\x02\x00\x00\x02\x02\x00\x08\x00\x00\x08\x00\x00\x02\x08\x08\x02\x00\x08\x08\x02\x00\x00\x00\x00\x02\x08\x08\x02\x02\x00\x08\x00\x00\x00\x08\x00\x02\x08\x00\x02\x02\x00":"DES S-BOX 3",
		"\x01\x20\x80\x00\x81\x20\x00\x00\x81\x20\x00\x00\x80\x00\x00\x00\x80\x20\x80\x00\x81\x00\x80\x00\x01\x00\x80\x00\x01\x20\x00\x00\x00\x00\x00\x00\x00\x20\x80\x00\x00\x20\x80\x00\x81\x20\x80\x00\x81\x00\x00\x00\x00\x00\x00\x00\x80\x00\x80\x00\x01\x00\x80\x00\x01\x00\x00\x00\x00\x20\x00\x00\x00\x00\x80\x00\x01\x20\x80\x00\x80\x00\x00\x00\x00\x00\x80\x00\x01\x20\x00\x00\x80\x20\x00\x00\x81\x00\x80\x00\x01\x00\x00\x00\x80\x20\x00\x00\x80\x00\x80\x00\x00\x20\x00\x00\x80\x20\x80\x00\x81\x20\x80\x00\x81\x00\x00\x00\x80\x00\x80\x00\x01\x00\x80\x00\x00\x20\x80\x00\x81\x20\x80\x00\x81\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x80\x00\x80\x20\x00\x00\x80\x00\x80\x00\x81\x00\x80\x00\x01\x00\x00\x00\x01\x20\x80\x00\x81\x20\x00\x00\x81\x20\x00\x00\x80\x00\x00\x00\x81\x20\x80\x00\x81\x00\x00\x00\x01\x00\x00\x00\x00\x20\x00\x00\x01\x00\x80\x00\x01\x20\x00\x00\x80\x20\x80\x00\x81\x00\x80\x00\x01\x20\x00\x00\x80\x20\x00\x00\x00\x00\x80\x00\x01\x20\x80\x00\x80\x00\x00\x00\x00\x00\x80\x00\x00\x20\x00\x00\x80\x20\x80\x00":"DES S-BOX 4",
		"\x00\x01\x00\x00\x00\x01\x08\x02\x00\x00\x08\x02\x00\x01\x00\x42\x00\x00\x08\x00\x00\x01\x00\x00\x00\x00\x00\x40\x00\x00\x08\x02\x00\x01\x08\x40\x00\x00\x08\x00\x00\x01\x00\x02\x00\x01\x08\x40\x00\x01\x00\x42\x00\x00\x08\x42\x00\x01\x08\x00\x00\x00\x00\x40\x00\x00\x00\x02\x00\x00\x08\x40\x00\x00\x08\x40\x00\x00\x00\x00\x00\x01\x00\x40\x00\x01\x08\x42\x00\x01\x08\x42\x00\x01\x00\x02\x00\x00\x08\x42\x00\x01\x00\x40\x00\x00\x00\x00\x00\x00\x00\x42\x00\x01\x08\x02\x00\x00\x00\x02\x00\x00\x00\x42\x00\x01\x08\x00\x00\x00\x08\x00\x00\x01\x00\x42\x00\x01\x00\x00\x00\x00\x00\x02\x00\x00\x00\x40\x00\x00\x08\x02\x00\x01\x00\x42\x00\x01\x08\x40\x00\x01\x00\x02\x00\x00\x00\x40\x00\x00\x08\x42\x00\x01\x08\x02\x00\x01\x08\x40\x00\x01\x00\x00\x00\x00\x00\x02\x00\x00\x08\x42\x00\x01\x08\x42\x00\x01\x08\x00\x00\x00\x00\x42\x00\x01\x08\x42\x00\x00\x08\x02\x00\x00\x00\x00\x00\x00\x08\x40\x00\x00\x00\x42\x00\x01\x08\x00\x00\x01\x00\x02\x00\x01\x00\x40\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x08\x40\x00\x01\x08\x02\x00\x01\x00\x40":"DES S-BOX 5",
		"\x10\x00\x00\x20\x00\x00\x40\x20\x00\x40\x00\x00\x10\x40\x40\x20\x00\x00\x40\x20\x10\x00\x00\x00\x10\x40\x40\x20\x00\x00\x40\x00\x00\x40\x00\x20\x10\x40\x40\x00\x00\x00\x40\x00\x10\x00\x00\x20\x10\x00\x40\x00\x00\x40\x00\x20\x00\x00\x00\x20\x10\x40\x00\x00\x00\x00\x00\x00\x10\x00\x40\x00\x10\x40\x00\x20\x00\x40\x00\x00\x00\x40\x40\x00\x10\x40\x00\x20\x10\x00\x00\x00\x10\x00\x40\x20\x10\x00\x40\x20\x00\x00\x00\x00\x10\x40\x40\x00\x00\x40\x40\x20\x10\x40\x00\x00\x00\x40\x40\x00\x00\x40\x40\x20\x00\x00\x00\x20\x00\x40\x00\x20\x10\x00\x00\x00\x10\x00\x40\x20\x00\x40\x40\x00\x10\x40\x40\x20\x00\x00\x40\x00\x10\x40\x00\x00\x10\x00\x00\x20\x00\x00\x40\x00\x00\x40\x00\x20\x00\x00\x00\x20\x10\x40\x00\x00\x10\x00\x00\x20\x10\x40\x40\x20\x00\x40\x40\x00\x00\x00\x40\x20\x10\x40\x40\x00\x00\x40\x40\x20\x00\x00\x00\x00\x10\x00\x40\x20\x10\x00\x00\x00\x00\x40\x00\x00\x00\x00\x40\x20\x10\x40\x40\x00\x00\x40\x00\x00\x10\x00\x40\x00\x10\x40\x00\x20\x00\x00\x00\x00\x00\x40\x40\x20\x00\x00\x00\x20\x10\x00\x40\x00\x10\x40\x00\x20":"DES S-BOX 6",
		"\x00\x00\x20\x00\x02\x00\x20\x04\x02\x08\x00\x04\x00\x00\x00\x00\x00\x08\x00\x00\x02\x08\x00\x04\x02\x08\x20\x00\x00\x08\x20\x04\x02\x08\x20\x04\x00\x00\x20\x00\x00\x00\x00\x00\x02\x00\x00\x04\x02\x00\x00\x00\x00\x00\x00\x04\x02\x00\x20\x04\x02\x08\x00\x00\x00\x08\x00\x04\x02\x08\x20\x00\x02\x00\x20\x00\x00\x08\x00\x04\x02\x00\x00\x04\x00\x00\x20\x04\x00\x08\x20\x04\x02\x00\x20\x00\x00\x00\x20\x04\x00\x08\x00\x00\x02\x08\x00\x00\x02\x08\x20\x04\x00\x08\x20\x00\x02\x00\x00\x00\x00\x00\x00\x04\x00\x08\x20\x00\x00\x00\x00\x04\x00\x08\x20\x00\x00\x00\x20\x00\x02\x08\x00\x04\x02\x08\x00\x04\x02\x00\x20\x04\x02\x00\x20\x04\x02\x00\x00\x00\x02\x00\x20\x00\x00\x00\x00\x04\x00\x08\x00\x04\x00\x00\x20\x00\x00\x08\x20\x04\x02\x08\x00\x00\x02\x08\x20\x00\x00\x08\x20\x04\x02\x08\x00\x00\x02\x00\x00\x04\x02\x08\x20\x04\x00\x00\x20\x04\x00\x08\x20\x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x08\x20\x04\x00\x00\x00\x00\x02\x08\x20\x00\x00\x00\x20\x04\x00\x08\x00\x00\x02\x00\x00\x04\x00\x08\x00\x04\x00\x08\x00\x00\x02\x00\x20\x00":"DES S-BOX 7",
		"\x40\x10\x00\x10\x00\x10\x00\x00\x00\x00\x04\x00\x40\x10\x04\x10\x00\x00\x00\x10\x40\x10\x00\x10\x40\x00\x00\x00\x00\x00\x00\x10\x40\x00\x04\x00\x00\x00\x04\x10\x40\x10\x04\x10\x00\x10\x04\x00\x00\x10\x04\x10\x40\x10\x04\x00\x00\x10\x00\x00\x40\x00\x00\x00\x00\x00\x04\x10\x40\x00\x00\x10\x00\x10\x00\x10\x40\x10\x00\x00\x00\x10\x04\x00\x40\x00\x04\x00\x40\x00\x04\x10\x00\x10\x04\x10\x40\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x04\x10\x40\x00\x00\x10\x00\x10\x00\x10\x40\x10\x04\x00\x00\x00\x04\x00\x40\x10\x04\x00\x00\x00\x04\x00\x00\x10\x04\x10\x00\x10\x00\x00\x40\x00\x00\x00\x40\x00\x04\x10\x00\x10\x00\x00\x40\x10\x04\x00\x00\x10\x00\x10\x40\x00\x00\x00\x40\x00\x00\x10\x00\x00\x04\x10\x40\x00\x04\x10\x00\x00\x00\x10\x00\x00\x04\x00\x40\x10\x00\x10\x00\x00\x00\x00\x40\x10\x04\x10\x40\x00\x04\x00\x40\x00\x00\x10\x00\x00\x04\x10\x00\x10\x00\x10\x40\x10\x00\x10\x00\x00\x00\x00\x40\x10\x04\x10\x00\x10\x04\x00\x00\x10\x04\x00\x40\x10\x00\x00\x40\x10\x00\x00\x40\x00\x04\x00\x00\x00\x00\x10\x00\x10\x04\x10":"DES S-BOX 8",
		struct.pack("<I",0x67452301):"MD5 initial value",
		struct.pack("<I",0xefcdab89):"MD5 initial value",
		struct.pack("<I",0x98badcfe):"MD5 initial value",
		struct.pack("<I",0x10325476):"MD5 initial value",
		struct.pack("<I",0xd76aa478):"MD5 round constant",
		struct.pack("<I",0xe8c7b756):"MD5 round constant",
		struct.pack("<I",0x242070db):"MD5 round constant",
		struct.pack("<I",0xc1bdceee):"MD5 round constant",
		struct.pack("<I",0xf57c0faf):"MD5 round constant",
		struct.pack("<I",0x4787c62a):"MD5 round constant",
		struct.pack("<I",0xa8304613):"MD5 round constant",
		struct.pack("<I",0xfd469501):"MD5 round constant",
		struct.pack("<I",0x698098d8):"MD5 round constant",
		struct.pack("<I",0x8b44f7af):"MD5 round constant",
		struct.pack("<I",0xffff5bb1):"MD5 round constant",
		struct.pack("<I",0x895cd7be):"MD5 round constant",
		struct.pack("<I",0x6b901122):"MD5 round constant",
		struct.pack("<I",0xfd987193):"MD5 round constant",
		struct.pack("<I",0xa679438e):"MD5 round constant",
		struct.pack("<I",0x49b40821):"MD5 round constant",
		struct.pack("<I",0xf61e2562):"MD5 round constant",
		struct.pack("<I",0xc040b340):"MD5 round constant",
		struct.pack("<I",0x265e5a51):"MD5 round constant",
		struct.pack("<I",0xe9b6c7aa):"MD5 round constant",
		struct.pack("<I",0xd62f105d):"MD5 round constant",
		struct.pack("<I",0x2441453):"MD5 round constant",
		struct.pack("<I",0xd8a1e681):"MD5 round constant",
		struct.pack("<I",0xe7d3fbc8):"MD5 round constant",
		struct.pack("<I",0x21e1cde6):"MD5 round constant",
		struct.pack("<I",0xc33707d6):"MD5 round constant",
		struct.pack("<I",0xf4d50d87):"MD5 round constant",
		struct.pack("<I",0x455a14ed):"MD5 round constant",
		struct.pack("<I",0xa9e3e905):"MD5 round constant",
		struct.pack("<I",0xfcefa3f8):"MD5 round constant",
		struct.pack("<I",0x676f02d9):"MD5 round constant",
		struct.pack("<I",0x8d2a4c8a):"MD5 round constant",
		struct.pack("<I",0xfffa3942):"MD5 round constant",
		struct.pack("<I",0x8771f681):"MD5 round constant",
		struct.pack("<I",0x6d9d6122):"MD5 round constant",
		struct.pack("<I",0xfde5380c):"MD5 round constant",
		struct.pack("<I",0xa4beea44):"MD5 round constant",
		struct.pack("<I",0x4bdecfa9):"MD5 round constant",
		struct.pack("<I",0xf6bb4b60):"MD5 round constant",
		struct.pack("<I",0xbebfbc70):"MD5 round constant",
		struct.pack("<I",0x289b7ec6):"MD5 round constant",
		struct.pack("<I",0xeaa127fa):"MD5 round constant",
		struct.pack("<I",0xd4ef3085):"MD5 round constant",
		struct.pack("<I",0x4881d05):"MD5 round constant",
		struct.pack("<I",0xd9d4d039):"MD5 round constant",
		struct.pack("<I",0xe6db99e5):"MD5 round constant",
		struct.pack("<I",0x1fa27cf8):"MD5 round constant",
		struct.pack("<I",0xc4ac5665):"MD5 round constant",
		struct.pack("<I",0xf4292244):"MD5 round constant",
		struct.pack("<I",0x432aff97):"MD5 round constant",
		struct.pack("<I",0xab9423a7):"MD5 round constant",
		struct.pack("<I",0xfc93a039):"MD5 round constant",
		struct.pack("<I",0x655b59c3):"MD5 round constant",
		struct.pack("<I",0x8f0ccc92):"MD5 round constant",
		struct.pack("<I",0xffeff47d):"MD5 round constant",
		struct.pack("<I",0x85845dd1):"MD5 round constant",
		struct.pack("<I",0x6fa87e4f):"MD5 round constant",
		struct.pack("<I",0xfe2ce6e0):"MD5 round constant",
		struct.pack("<I",0xa3014314):"MD5 round constant",
		struct.pack("<I",0x4e0811a1):"MD5 round constant",
		struct.pack("<I",0xf7537e82):"MD5 round constant",
		struct.pack("<I",0xbd3af235):"MD5 round constant",
		struct.pack("<I",0x2ad7d2bb):"MD5 round constant",
		struct.pack("<I",0xeb86d391):"MD5 round constant",
		struct.pack("<I",0x67452301):"SHA1 initial value",
		struct.pack("<I",0xEFCDAB89):"SHA1 initial value",
		struct.pack("<I",0x98BADCFE):"SHA1 initial value",
		struct.pack("<I",0x10325476):"SHA1 initial value",
		struct.pack("<I",0xC3D2E1F0):"SHA1 initial value",
		struct.pack("<I",0x5A827999):"SHA1 preparation value",
		struct.pack("<I",0x6ED9EBA1):"SHA1 preparation value",
		struct.pack("<I",0x8F1BBCDC):"SHA1 preparation value",
		struct.pack("<I",0xCA62C1D6):"SHA1 preparation value",
		struct.pack("<I",0x6a09e667):"SHA512 initial value",
		struct.pack("<I",0xf3bcc908):"SHA512 initial value",
		struct.pack("<I",0xbb67ae85):"SHA512 initial value",
		struct.pack("<I",0x84caa73b):"SHA512 initial value",
		struct.pack("<I",0x3c6ef372):"SHA512 initial value",
		struct.pack("<I",0xfe94f82b):"SHA512 initial value",
		struct.pack("<I",0xa54ff53a):"SHA512 initial value",
		struct.pack("<I",0x5f1d36f1):"SHA512 initial value",
		struct.pack("<I",0x510e527f):"SHA512 initial value",
		struct.pack("<I",0xade682d1):"SHA512 initial value",
		struct.pack("<I",0x9b05688c):"SHA512 initial value",
		struct.pack("<I",0x2b3e6c1f):"SHA512 initial value",
		struct.pack("<I",0x1f83d9ab):"SHA512 initial value",
		struct.pack("<I",0xfb41bd6b):"SHA512 initial value",
		struct.pack("<I",0x5be0cd19):"SHA512 initial value",
		struct.pack("<I",0x137e2179):"SHA512 initial value",
		struct.pack("<I",0xCBBB9D5D):"SHA384 initial value",
		struct.pack("<I",0xC1059ED8):"SHA384 initial value",
		struct.pack("<I",0x629A292A):"SHA384 initial value",
		struct.pack("<I",0x367CD507):"SHA384 initial value",
		struct.pack("<I",0x9159015A):"SHA384 initial value",
		struct.pack("<I",0x3070DD17):"SHA384 initial value",
		struct.pack("<I",0x152FECD8):"SHA384 initial value",
		struct.pack("<I",0xF70E5939):"SHA384 initial value",
		struct.pack("<I",0x67332667):"SHA384 initial value",
		struct.pack("<I",0xFFC00B31):"SHA384 initial value",
		struct.pack("<I",0x8EB44A87):"SHA384 initial value",
		struct.pack("<I",0x68581511):"SHA384 initial value",
		struct.pack("<I",0xDB0C2E0D):"SHA384 initial value",
		struct.pack("<I",0x64F98FA7):"SHA384 initial value",
		struct.pack("<I",0x47B5481D):"SHA384 initial value",
		struct.pack("<I",0xBEFA4FA4):"SHA384 initial value",
		struct.pack("<I",0x428A2F98):"SHA256 permutation box",
		struct.pack("<I",0x71374491):"SHA256 permutation box",
		struct.pack("<I",0xB5C0FBCF):"SHA256 permutation box",
		struct.pack("<I",0xE9B5DBA5):"SHA256 permutation box",
		struct.pack("<I",0x3956C25B):"SHA256 permutation box",
		struct.pack("<I",0x59F111F1):"SHA256 permutation box",
		struct.pack("<I",0x923F82A4):"SHA256 permutation box",
		struct.pack("<I",0xAB1C5ED5):"SHA256 permutation box",
		struct.pack("<I",0xD807AA98):"SHA256 permutation box",
		struct.pack("<I",0x12835B01):"SHA256 permutation box",
		struct.pack("<I",0x243185BE):"SHA256 permutation box",
		struct.pack("<I",0x550C7DC3):"SHA256 permutation box",
		struct.pack("<I",0x72BE5D74):"SHA256 permutation box",
		struct.pack("<I",0x80DEB1FE):"SHA256 permutation box",
		struct.pack("<I",0x9BDC06A7):"SHA256 permutation box",
		struct.pack("<I",0xC19BF174):"SHA256 permutation box",
		struct.pack("<I",0xE49B69C1):"SHA256 permutation box",
		struct.pack("<I",0xEFBE4786):"SHA256 permutation box",
		struct.pack("<I",0x0FC19DC6):"SHA256 permutation box",
		struct.pack("<I",0x240CA1CC):"SHA256 permutation box",
		struct.pack("<I",0x2DE92C6F):"SHA256 permutation box",
		struct.pack("<I",0x4A7484AA):"SHA256 permutation box",
		struct.pack("<I",0x5CB0A9DC):"SHA256 permutation box",
		struct.pack("<I",0x76F988DA):"SHA256 permutation box",
		struct.pack("<I",0x983E5152):"SHA256 permutation box",
		struct.pack("<I",0xA831C66D):"SHA256 permutation box",
		struct.pack("<I",0xB00327C8):"SHA256 permutation box",
		struct.pack("<I",0xBF597FC7):"SHA256 permutation box",
		struct.pack("<I",0xC6E00BF3):"SHA256 permutation box",
		struct.pack("<I",0xD5A79147):"SHA256 permutation box",
		struct.pack("<I",0x06CA6351):"SHA256 permutation box",
		struct.pack("<I",0x14292967):"SHA256 permutation box",
		struct.pack("<I",0x27B70A85):"SHA256 permutation box",
		struct.pack("<I",0x2E1B2138):"SHA256 permutation box",
		struct.pack("<I",0x4D2C6DFC):"SHA256 permutation box",
		struct.pack("<I",0x53380D13):"SHA256 permutation box",
		struct.pack("<I",0x650A7354):"SHA256 permutation box",
		struct.pack("<I",0x766A0ABB):"SHA256 permutation box",
		struct.pack("<I",0x81C2C92E):"SHA256 permutation box",
		struct.pack("<I",0x92722C85):"SHA256 permutation box",
		struct.pack("<I",0xA2BFE8A1):"SHA256 permutation box",
		struct.pack("<I",0xA81A664B):"SHA256 permutation box",
		struct.pack("<I",0xC24B8B70):"SHA256 permutation box",
		struct.pack("<I",0xC76C51A3):"SHA256 permutation box",
		struct.pack("<I",0xD192E819):"SHA256 permutation box",
		struct.pack("<I",0xD6990624):"SHA256 permutation box",
		struct.pack("<I",0xF40E3585):"SHA256 permutation box",
		struct.pack("<I",0x106AA070):"SHA256 permutation box",
		struct.pack("<I",0x19A4C116):"SHA256 permutation box",
		struct.pack("<I",0x1E376C08):"SHA256 permutation box",
		struct.pack("<I",0x2748774C):"SHA256 permutation box",
		struct.pack("<I",0x34B0BCB5):"SHA256 permutation box",
		struct.pack("<I",0x391C0CB3):"SHA256 permutation box",
		struct.pack("<I",0x4ED8AA4A):"SHA256 permutation box",
		struct.pack("<I",0x5B9CCA4F):"SHA256 permutation box",
		struct.pack("<I",0x682E6FF3):"SHA256 permutation box",
		struct.pack("<I",0x748F82EE):"SHA256 permutation box",
		struct.pack("<I",0x78A5636F):"SHA256 permutation box",
		struct.pack("<I",0x84C87814):"SHA256 permutation box",
		struct.pack("<I",0x8CC70208):"SHA256 permutation box",
		struct.pack("<I",0x90BEFFFA):"SHA256 permutation box",
		struct.pack("<I",0xA4506CEB):"SHA256 permutation box",
		struct.pack("<I",0xBEF9A3F7):"SHA256 permutation box",
		struct.pack("<I",0xC67178F2):"SHA256 permutation box",
	}
	def __init__(self, heuristic):
		self.heuristic = heuristic
		for key,value in self.patternlist.items():
			for mutation in self.mutate(key):
				self.patternlist[mutation] = value

	def mutate(self, pattern):
		mutators = [uint32_array, uint16_array]
		mutations = []
		for mutator in mutators:
			mutations.append(mutator(pattern))
		return mutations

	def __call__(self):
		self.heuristic.process.hardware.instrumentation.constsearch_enable()
		for pattern,index in map(lambda x,y: (x,y), self.patternlist.keys(), range(len(self.patternlist))):
			self.heuristic.process.hardware.instrumentation.constsearch_pattern(pattern)

class ConstSearchHeuristic(PyQemuHeuristic):
	PREFIX = "Memory constant search"
	def setupCallbacks(self):
		self.patterns = PatternManager(self)
		self.process.onInstrumentationInit(self.patterns)
		self.process.onInstrumentationInit(lambda: self.registerApiHooks(self.process))
		self.attach("constsearch", self.onPatternFound)

	def onPatternFound(self, process, event):
		self.log("Pattern(0x%x, '%s'"%(event.eip, self.patterns.patternlist[event.pattern]))

	def registerApiHooks(self, process):
		for function in constsearch_trigger_api_calls:
			process.installHookByName(self.onApiCallEvent, function)

	def onApiCallEvent(self, process, dll, function, addr):
		process.hardware.instrumentation.constsearch_search()

heuristic = ConstSearchHeuristic
