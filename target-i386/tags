!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AC_MASK	cpu.h	118;"	d
ADC	pyemu/PyCPU.py	/^    def ADC(self, instruction):$/;"	m	class:PyCPU
ADD	pyemu/PyCPU.py	/^    def ADD(self, instruction):$/;"	m	class:PyCPU
AND	pyemu/PyCPU.py	/^    def AND(self, instruction):$/;"	m	class:PyCPU
AllocateEvent	event.py	/^class AllocateEvent(Event):$/;"	c
Analyzer	analyze/graphauswertung.py	/^class Analyzer:$/;"	c
Argument	test/memobj.py	/^class Argument:$/;"	c
B	ops_sse.h	2071;"	d
B	ops_sse.h	23;"	d
B	ops_sse.h	31;"	d
BIASEXPONENT	exec.h	161;"	d
BIASEXPONENT	exec.h	194;"	d
BSWAP	pyemu/PyCPU.py	/^    def BSWAP(self, instruction):$/;"	m	class:PyCPU
BUGGY_64	translate.c	51;"	d	file:
Backend	Structures.py	/^class Backend( object):$/;"	c
BaseDllName	processinfo.py	/^    BaseDllName = property( get_basedllname)$/;"	v	class:Image
BaseRelocationData	pefile.py	/^class BaseRelocationData(DataContainer):$/;"	c
BoundImportDescData	pefile.py	/^class BoundImportDescData(DataContainer):$/;"	c
BoundImportRefData	pefile.py	/^class BoundImportRefData(DataContainer):$/;"	c
Breakpoint	PyQEMU.py	/^class Breakpoint:$/;"	c
Buffer	PyQEMU.py	/^class Buffer:$/;"	c
CALL	pyemu/PyCPU.py	/^    def CALL(self, instruction):$/;"	m	class:PyCPU
CCTable	cpu.h	/^typedef struct CCTable {$/;"	s
CCTable	cpu.h	/^} CCTable;$/;"	t	typeref:struct:CCTable
CC_A	cpu.h	102;"	d
CC_C	cpu.h	100;"	d
CC_DST	exec.h	57;"	d
CC_O	cpu.h	105;"	d
CC_OP	exec.h	58;"	d
CC_OP_ADCB	cpu.h	/^    CC_OP_ADCB, \/* modify all flags, CC_DST = res, CC_SRC = src1 *\/$/;"	e	enum:__anon1
CC_OP_ADCL	cpu.h	/^    CC_OP_ADCL,$/;"	e	enum:__anon1
CC_OP_ADCQ	cpu.h	/^    CC_OP_ADCQ,$/;"	e	enum:__anon1
CC_OP_ADCW	cpu.h	/^    CC_OP_ADCW,$/;"	e	enum:__anon1
CC_OP_ADDB	cpu.h	/^    CC_OP_ADDB, \/* modify all flags, CC_DST = res, CC_SRC = src1 *\/$/;"	e	enum:__anon1
CC_OP_ADDL	cpu.h	/^    CC_OP_ADDL,$/;"	e	enum:__anon1
CC_OP_ADDQ	cpu.h	/^    CC_OP_ADDQ,$/;"	e	enum:__anon1
CC_OP_ADDW	cpu.h	/^    CC_OP_ADDW,$/;"	e	enum:__anon1
CC_OP_DECB	cpu.h	/^    CC_OP_DECB, \/* modify all flags except, CC_DST = res, CC_SRC = C  *\/$/;"	e	enum:__anon1
CC_OP_DECL	cpu.h	/^    CC_OP_DECL,$/;"	e	enum:__anon1
CC_OP_DECQ	cpu.h	/^    CC_OP_DECQ,$/;"	e	enum:__anon1
CC_OP_DECW	cpu.h	/^    CC_OP_DECW,$/;"	e	enum:__anon1
CC_OP_DYNAMIC	cpu.h	/^    CC_OP_DYNAMIC, \/* must use dynamic code to get cc_op *\/$/;"	e	enum:__anon1
CC_OP_EFLAGS	cpu.h	/^    CC_OP_EFLAGS,  \/* all cc are explicitly computed, CC_SRC = flags *\/$/;"	e	enum:__anon1
CC_OP_INCB	cpu.h	/^    CC_OP_INCB, \/* modify all flags except, CC_DST = res, CC_SRC = C *\/$/;"	e	enum:__anon1
CC_OP_INCL	cpu.h	/^    CC_OP_INCL,$/;"	e	enum:__anon1
CC_OP_INCQ	cpu.h	/^    CC_OP_INCQ,$/;"	e	enum:__anon1
CC_OP_INCW	cpu.h	/^    CC_OP_INCW,$/;"	e	enum:__anon1
CC_OP_LOGICB	cpu.h	/^    CC_OP_LOGICB, \/* modify all flags, CC_DST = res *\/$/;"	e	enum:__anon1
CC_OP_LOGICL	cpu.h	/^    CC_OP_LOGICL,$/;"	e	enum:__anon1
CC_OP_LOGICQ	cpu.h	/^    CC_OP_LOGICQ,$/;"	e	enum:__anon1
CC_OP_LOGICW	cpu.h	/^    CC_OP_LOGICW,$/;"	e	enum:__anon1
CC_OP_MULB	cpu.h	/^    CC_OP_MULB, \/* modify all flags, C, O = (CC_SRC != 0) *\/$/;"	e	enum:__anon1
CC_OP_MULL	cpu.h	/^    CC_OP_MULL,$/;"	e	enum:__anon1
CC_OP_MULQ	cpu.h	/^    CC_OP_MULQ,$/;"	e	enum:__anon1
CC_OP_MULW	cpu.h	/^    CC_OP_MULW,$/;"	e	enum:__anon1
CC_OP_NB	cpu.h	/^    CC_OP_NB,$/;"	e	enum:__anon1
CC_OP_SARB	cpu.h	/^    CC_OP_SARB, \/* modify all flags, CC_DST = res, CC_SRC.lsb = C *\/$/;"	e	enum:__anon1
CC_OP_SARL	cpu.h	/^    CC_OP_SARL,$/;"	e	enum:__anon1
CC_OP_SARQ	cpu.h	/^    CC_OP_SARQ,$/;"	e	enum:__anon1
CC_OP_SARW	cpu.h	/^    CC_OP_SARW,$/;"	e	enum:__anon1
CC_OP_SBBB	cpu.h	/^    CC_OP_SBBB, \/* modify all flags, CC_DST = res, CC_SRC = src1 *\/$/;"	e	enum:__anon1
CC_OP_SBBL	cpu.h	/^    CC_OP_SBBL,$/;"	e	enum:__anon1
CC_OP_SBBQ	cpu.h	/^    CC_OP_SBBQ,$/;"	e	enum:__anon1
CC_OP_SBBW	cpu.h	/^    CC_OP_SBBW,$/;"	e	enum:__anon1
CC_OP_SHLB	cpu.h	/^    CC_OP_SHLB, \/* modify all flags, CC_DST = res, CC_SRC.msb = C *\/$/;"	e	enum:__anon1
CC_OP_SHLL	cpu.h	/^    CC_OP_SHLL,$/;"	e	enum:__anon1
CC_OP_SHLQ	cpu.h	/^    CC_OP_SHLQ,$/;"	e	enum:__anon1
CC_OP_SHLW	cpu.h	/^    CC_OP_SHLW,$/;"	e	enum:__anon1
CC_OP_SUBB	cpu.h	/^    CC_OP_SUBB, \/* modify all flags, CC_DST = res, CC_SRC = src1 *\/$/;"	e	enum:__anon1
CC_OP_SUBL	cpu.h	/^    CC_OP_SUBL,$/;"	e	enum:__anon1
CC_OP_SUBQ	cpu.h	/^    CC_OP_SUBQ,$/;"	e	enum:__anon1
CC_OP_SUBW	cpu.h	/^    CC_OP_SUBW,$/;"	e	enum:__anon1
CC_P	cpu.h	101;"	d
CC_S	cpu.h	104;"	d
CC_SRC	exec.h	56;"	d
CC_Z	cpu.h	103;"	d
CDQ	pyemu/PyCPU.py	/^    def CDQ(self, instruction):$/;"	m	class:PyCPU
CLC	pyemu/PyCPU.py	/^    def CLC(self, instruction):$/;"	m	class:PyCPU
CLD	pyemu/PyCPU.py	/^    def CLD(self, instruction):$/;"	m	class:PyCPU
CLIENT_ID	Structures.py	/^class CLIENT_ID( StructuredData):$/;"	c
CMP	pyemu/PyCPU.py	/^    def CMP(self, instruction):$/;"	m	class:PyCPU
CMPS	pyemu/PyCPU.py	/^    def CMPS(self, instruction):$/;"	m	class:PyCPU
CMPSB	pyemu/PyCPU.py	/^    def CMPSB(self, instruction):$/;"	m	class:PyCPU
CMPSD	pyemu/PyCPU.py	/^    def CMPSD(self, instruction):$/;"	m	class:PyCPU
CMPSW	pyemu/PyCPU.py	/^    def CMPSW(self, instruction):$/;"	m	class:PyCPU
CODE64	translate.c	46;"	d	file:
CODE64	translate.c	56;"	d	file:
COFFFileHeader	Structures.py	/^class COFFFileHeader( PEHeaderSubstructure):$/;"	c
CONTROL_AREA	Structures.py	/^class CONTROL_AREA( StructuredData):$/;"	c
CPU86_LDouble	cpu.h	/^typedef float64 CPU86_LDouble;$/;"	t
CPU86_LDouble	cpu.h	/^typedef floatx80 CPU86_LDouble;$/;"	t
CPU86_LDoubleU	exec.h	/^} CPU86_LDoubleU;$/;"	t	typeref:union:__anon7
CPU86_LDoubleU	exec.h	/^} CPU86_LDoubleU;$/;"	t	typeref:union:__anon9
CPUID_ACPI	cpu.h	350;"	d
CPUID_APIC	cpu.h	339;"	d
CPUID_CLFLUSH	cpu.h	348;"	d
CPUID_CMOV	cpu.h	344;"	d
CPUID_CX8	cpu.h	338;"	d
CPUID_DE	cpu.h	332;"	d
CPUID_DTS	cpu.h	349;"	d
CPUID_EXT2_3DNOW	cpu.h	393;"	d
CPUID_EXT2_3DNOWEXT	cpu.h	392;"	d
CPUID_EXT2_FFXSR	cpu.h	388;"	d
CPUID_EXT2_LM	cpu.h	391;"	d
CPUID_EXT2_MMXEXT	cpu.h	387;"	d
CPUID_EXT2_MP	cpu.h	385;"	d
CPUID_EXT2_NX	cpu.h	386;"	d
CPUID_EXT2_PDPE1GB	cpu.h	389;"	d
CPUID_EXT2_RDTSCP	cpu.h	390;"	d
CPUID_EXT2_SYSCALL	cpu.h	384;"	d
CPUID_EXT3_3DNOWPREFETCH	cpu.h	403;"	d
CPUID_EXT3_ABM	cpu.h	400;"	d
CPUID_EXT3_CMP_LEG	cpu.h	396;"	d
CPUID_EXT3_CR8LEG	cpu.h	399;"	d
CPUID_EXT3_EXTAPIC	cpu.h	398;"	d
CPUID_EXT3_IBS	cpu.h	405;"	d
CPUID_EXT3_LAHF_LM	cpu.h	395;"	d
CPUID_EXT3_MISALIGNSSE	cpu.h	402;"	d
CPUID_EXT3_OSVW	cpu.h	404;"	d
CPUID_EXT3_SKINIT	cpu.h	406;"	d
CPUID_EXT3_SSE4A	cpu.h	401;"	d
CPUID_EXT3_SVM	cpu.h	397;"	d
CPUID_EXT_CID	cpu.h	370;"	d
CPUID_EXT_CX16	cpu.h	371;"	d
CPUID_EXT_DCA	cpu.h	374;"	d
CPUID_EXT_DSCPL	cpu.h	364;"	d
CPUID_EXT_DTES64	cpu.h	362;"	d
CPUID_EXT_EST	cpu.h	367;"	d
CPUID_EXT_HYPERVISOR	cpu.h	382;"	d
CPUID_EXT_MONITOR	cpu.h	363;"	d
CPUID_EXT_MOVBE	cpu.h	378;"	d
CPUID_EXT_OSXSAVE	cpu.h	381;"	d
CPUID_EXT_PDCM	cpu.h	373;"	d
CPUID_EXT_POPCNT	cpu.h	379;"	d
CPUID_EXT_SMX	cpu.h	366;"	d
CPUID_EXT_SSE3	cpu.h	361;"	d
CPUID_EXT_SSE41	cpu.h	375;"	d
CPUID_EXT_SSE42	cpu.h	376;"	d
CPUID_EXT_SSSE3	cpu.h	369;"	d
CPUID_EXT_TM2	cpu.h	368;"	d
CPUID_EXT_VMX	cpu.h	365;"	d
CPUID_EXT_X2APIC	cpu.h	377;"	d
CPUID_EXT_XSAVE	cpu.h	380;"	d
CPUID_EXT_XTPR	cpu.h	372;"	d
CPUID_FP87	cpu.h	330;"	d
CPUID_FXSR	cpu.h	352;"	d
CPUID_HT	cpu.h	356;"	d
CPUID_IA64	cpu.h	358;"	d
CPUID_MCA	cpu.h	343;"	d
CPUID_MCE	cpu.h	337;"	d
CPUID_MMX	cpu.h	351;"	d
CPUID_MSR	cpu.h	335;"	d
CPUID_MTRR	cpu.h	341;"	d
CPUID_MWAIT_EMX	cpu.h	417;"	d
CPUID_MWAIT_IBE	cpu.h	416;"	d
CPUID_PAE	cpu.h	336;"	d
CPUID_PAT	cpu.h	345;"	d
CPUID_PBE	cpu.h	359;"	d
CPUID_PGE	cpu.h	342;"	d
CPUID_PN	cpu.h	347;"	d
CPUID_PSE	cpu.h	333;"	d
CPUID_PSE36	cpu.h	346;"	d
CPUID_SEP	cpu.h	340;"	d
CPUID_SS	cpu.h	355;"	d
CPUID_SSE	cpu.h	353;"	d
CPUID_SSE2	cpu.h	354;"	d
CPUID_TM	cpu.h	357;"	d
CPUID_TSC	cpu.h	334;"	d
CPUID_VENDOR_AMD_1	cpu.h	412;"	d
CPUID_VENDOR_AMD_2	cpu.h	413;"	d
CPUID_VENDOR_AMD_3	cpu.h	414;"	d
CPUID_VENDOR_INTEL_1	cpu.h	408;"	d
CPUID_VENDOR_INTEL_2	cpu.h	409;"	d
CPUID_VENDOR_INTEL_3	cpu.h	410;"	d
CPUID_VME	cpu.h	331;"	d
CPUState	cpu.h	44;"	d
CPUX86State	cpu.h	/^typedef struct CPUX86State {$/;"	s
CPUX86State	cpu.h	/^} CPUX86State;$/;"	t	typeref:struct:CPUX86State
CPU_I386_H	cpu.h	20;"	d
CPU_NB_REGS	cpu.h	577;"	d
CPU_NB_REGS	cpu.h	579;"	d
CPU_NB_REGS32	cpu.h	574;"	d
CPU_NB_REGS64	cpu.h	573;"	d
CPU_SAVE_VERSION	cpu.h	907;"	d
CR0_AM_MASK	cpu.h	197;"	d
CR0_EM_MASK	cpu.h	192;"	d
CR0_ET_MASK	cpu.h	194;"	d
CR0_MP_MASK	cpu.h	191;"	d
CR0_MP_SHIFT	cpu.h	188;"	d
CR0_NE_MASK	cpu.h	195;"	d
CR0_PE_MASK	cpu.h	190;"	d
CR0_PE_SHIFT	cpu.h	187;"	d
CR0_PG_MASK	cpu.h	198;"	d
CR0_TS_MASK	cpu.h	193;"	d
CR0_WP_MASK	cpu.h	196;"	d
CR4_DE_MASK	cpu.h	203;"	d
CR4_MCE_MASK	cpu.h	206;"	d
CR4_OSFXSR_MASK	cpu.h	210;"	d
CR4_OSFXSR_SHIFT	cpu.h	209;"	d
CR4_OSXMMEXCPT_MASK	cpu.h	211;"	d
CR4_PAE_MASK	cpu.h	205;"	d
CR4_PCE_MASK	cpu.h	208;"	d
CR4_PGE_MASK	cpu.h	207;"	d
CR4_PSE_MASK	cpu.h	204;"	d
CR4_PVI_MASK	cpu.h	201;"	d
CR4_TSD_MASK	cpu.h	202;"	d
CR4_VME_MASK	cpu.h	200;"	d
CRCPOLY	ops_sse.h	2030;"	d
CRCPOLY_BITREV	ops_sse.h	2031;"	d
CallEvent	event.py	/^class CallEvent(Event):$/;"	c
CallGraphAnalyzer	analyze/callgraph.py	/^class CallGraphAnalyzer:$/;"	c
CallGraphBuilder	analyze/analyze.py	/^class CallGraphBuilder(PyQemuDumpAnalyzer):$/;"	c
CalledFunction	PyQEMU.py	/^class CalledFunction:$/;"	c
CallocFunctionHandler	fhandle.py	/^class CallocFunctionHandler(FunctionHandler):$/;"	c
ConnectFunctionHandler	fhandle.py	/^class ConnectFunctionHandler(FunctionHandler):$/;"	c
CopyEvent	event.py	/^class CopyEvent(Event):$/;"	c
CopyingStringBackend	Structures.py	/^class CopyingStringBackend( Backend):$/;"	c
CpyFunctionHandler	fhandle.py	/^class CpyFunctionHandler(FunctionHandler):$/;"	c
CreateThreadFunctionHandler	fhandle.py	/^class CreateThreadFunctionHandler(FunctionHandler):$/;"	c
DATA_BITS	helper_template.h	19;"	d
DATA_BITS	helper_template.h	327;"	d
DATA_MASK	helper_template.h	32;"	d
DATA_MASK	helper_template.h	333;"	d
DATA_MASK	helper_template.h	37;"	d
DATA_MASK	helper_template.h	42;"	d
DATA_MASK	helper_template.h	47;"	d
DATA_STYPE	helper_template.h	31;"	d
DATA_STYPE	helper_template.h	332;"	d
DATA_STYPE	helper_template.h	36;"	d
DATA_STYPE	helper_template.h	41;"	d
DATA_STYPE	helper_template.h	46;"	d
DATA_TYPE	helper_template.h	30;"	d
DATA_TYPE	helper_template.h	331;"	d
DATA_TYPE	helper_template.h	35;"	d
DATA_TYPE	helper_template.h	40;"	d
DATA_TYPE	helper_template.h	45;"	d
DEBUG	PyQEMU.py	/^DEBUG = True$/;"	v
DEBUG	flx_instrument.c	793;"	d	file:
DEBUG	pyemu/PyCPU.py	/^    DEBUG = 0$/;"	v	class:PyCPU
DEBUG	pyemu/PyEmu.py	/^    DEBUG = 0$/;"	v	class:PyEmu
DEBUG	pyemu/PyMemory.py	/^    DEBUG = 0$/;"	v	class:PyMemory
DEBUG	pyemu/PyMemory.py	/^    DEBUG = 0$/;"	v	class:PyMemoryPage
DEBUG	pyemu/PyOS.py	/^    DEBUG = 0$/;"	v	class:PyLinux
DEBUG	pyemu/PyOS.py	/^    DEBUG = 0$/;"	v	class:PyWindows
DEBUG_SWITCHED_ON	flx_instrument.c	794;"	d	file:
DEBUG_TYPE	pefile.py	/^DEBUG_TYPE = dict([(e[1], e[0]) for e in debug_types]+debug_types)$/;"	v
DEC	pyemu/PyCPU.py	/^    def DEC(self, instruction):$/;"	m	class:PyCPU
DESC_AVL_MASK	cpu.h	81;"	d
DESC_A_MASK	cpu.h	88;"	d
DESC_B_MASK	cpu.h	78;"	d
DESC_B_SHIFT	cpu.h	77;"	d
DESC_CS_MASK	cpu.h	90;"	d
DESC_C_MASK	cpu.h	91;"	d
DESC_DPL_MASK	cpu.h	84;"	d
DESC_DPL_SHIFT	cpu.h	83;"	d
DESC_E_MASK	cpu.h	94;"	d
DESC_G_MASK	cpu.h	76;"	d
DESC_L_MASK	cpu.h	80;"	d
DESC_L_SHIFT	cpu.h	79;"	d
DESC_P_MASK	cpu.h	82;"	d
DESC_R_MASK	cpu.h	92;"	d
DESC_S_MASK	cpu.h	85;"	d
DESC_TSS_BUSY_MASK	cpu.h	97;"	d
DESC_TYPE_MASK	cpu.h	87;"	d
DESC_TYPE_SHIFT	cpu.h	86;"	d
DESC_W_MASK	cpu.h	95;"	d
DF	exec.h	54;"	d
DF_MASK	cpu.h	113;"	d
DIRECTORY_ENTRY	pefile.py	/^DIRECTORY_ENTRY = dict([(e[1], e[0]) for e in directory_entry_types]+directory_entry_types)$/;"	v
DIV	pyemu/PyCPU.py	/^    def DIV(self, instruction):$/;"	m	class:PyCPU
DLLFile	dllhandling.py	/^class DLLFile(dict):$/;"	c
DLLHandler	dllhandling.py	/^class DLLHandler:$/;"	c
DLL_CHARACTERISTICS	pefile.py	/^DLL_CHARACTERISTICS = dict([(e[1], e[0]) for e in dll_characteristics]+dll_characteristics)$/;"	v
DPRINTF	kvm.c	38;"	d	file:
DPRINTF	kvm.c	41;"	d	file:
DR6_BD	cpu.h	213;"	d
DR6_BS	cpu.h	214;"	d
DR6_BT	cpu.h	215;"	d
DR6_FIXED_1	cpu.h	216;"	d
DR7_FIXED_1	cpu.h	221;"	d
DR7_GD	cpu.h	218;"	d
DR7_LEN_SHIFT	cpu.h	220;"	d
DR7_TYPE_SHIFT	cpu.h	219;"	d
DUMP_FULL	Helpers.py	/^DUMP_FULL = 4$/;"	v
DUMP_IMAGE	Helpers.py	/^DUMP_IMAGE = 1$/;"	v
DUMP_INITIAL	Helpers.py	/^DUMP_INITIAL = 8$/;"	v
DUMP_PARTIAL	Helpers.py	/^DUMP_PARTIAL = 2$/;"	v
DUMP_UNSPECIFIED	Helpers.py	/^DUMP_UNSPECIFIED = 0$/;"	v
DataContainer	pefile.py	/^class DataContainer:$/;"	c
DataDirectory	Structures.py	/^class DataDirectory( PEHeaderSubstructure):$/;"	c
DataMemoryTracer	PyQEMU.py	/^class DataMemoryTracer:$/;"	c
DataflowRecorder	pyemu/FlxPyEmu.py	/^class DataflowRecorder:$/;"	c
DataflowRecorder	pyemu/flxanalyze.py	/^class DataflowRecorder:$/;"	c
DeallocateEvent	event.py	/^class DeallocateEvent(Event):$/;"	c
DebugData	pefile.py	/^class DebugData(DataContainer):$/;"	c
DebugDumpFlags	pyemu/PyDebug.py	/^def DebugDumpFlags(flags):$/;"	f
DebugInstruction	pyemu/PyDebug.py	/^def DebugInstruction(instruction):$/;"	f
DebugOperand	pyemu/PyDebug.py	/^def DebugOperand(operand):$/;"	f
DisasContext	translate.c	/^typedef struct DisasContext {$/;"	s	file:
DisasContext	translate.c	/^} DisasContext;$/;"	t	typeref:struct:DisasContext	file:
DllBase	processinfo.py	/^    DllBase =     property( get_dllbase)$/;"	v	class:Image
Dump	pefile.py	/^class Dump:$/;"	c
EAX	exec.h	36;"	d
EAX	exec.h	37;"	d
EBP	exec.h	46;"	d
EBP	exec.h	47;"	d
EBX	exec.h	42;"	d
EBX	exec.h	43;"	d
ECX	exec.h	38;"	d
ECX	exec.h	39;"	d
EDI	exec.h	50;"	d
EDI	exec.h	51;"	d
EDX	exec.h	40;"	d
EDX	exec.h	41;"	d
EIP	exec.h	52;"	d
EIP	exec.h	53;"	d
ELF_MACHINE	cpu.h	39;"	d
ELF_MACHINE	cpu.h	41;"	d
EPROCESS	Structures.py	/^class EPROCESS( StructuredData):$/;"	c
ESI	exec.h	48;"	d
ESI	exec.h	49;"	d
ESP	exec.h	44;"	d
ESP	exec.h	45;"	d
EXCP00_DIVZ	cpu.h	419;"	d
EXCP01_DB	cpu.h	420;"	d
EXCP02_NMI	cpu.h	421;"	d
EXCP03_INT3	cpu.h	422;"	d
EXCP04_INTO	cpu.h	423;"	d
EXCP05_BOUND	cpu.h	424;"	d
EXCP06_ILLOP	cpu.h	425;"	d
EXCP07_PREX	cpu.h	426;"	d
EXCP08_DBLE	cpu.h	427;"	d
EXCP09_XERR	cpu.h	428;"	d
EXCP0A_TSS	cpu.h	429;"	d
EXCP0B_NOSEG	cpu.h	430;"	d
EXCP0C_STACK	cpu.h	431;"	d
EXCP0D_GPF	cpu.h	432;"	d
EXCP0E_PAGE	cpu.h	433;"	d
EXCP10_COPR	cpu.h	434;"	d
EXCP11_ALGN	cpu.h	435;"	d
EXCP12_MCHK	cpu.h	436;"	d
EXCP_SYSCALL	cpu.h	438;"	d
EXECUTE	pyemu/PyMemory.py	/^    EXECUTE = 0x4$/;"	v	class:PyMemoryPage
EXEHeader	Structures.py	/^class EXEHeader( PEHeaderSubstructure):$/;"	c
EXPBIAS	exec.h	157;"	d
EXPBIAS	exec.h	186;"	d
EXPBIAS1	machine.c	95;"	d	file:
EXPD	exec.h	158;"	d
EXPD	exec.h	187;"	d
EXPD1	machine.c	96;"	d	file:
EXT2_FEATURE_MASK	cpuid.c	231;"	d	file:
EntryPoint	processinfo.py	/^    EntryPoint =  property( get_entrypoint)$/;"	v	class:Image
Event	event.py	/^class Event:$/;"	c
EventLogger	PyQEMU.py	/^class EventLogger(pickle.Pickler):$/;"	c
ExecutionError	pyemu/FlxPyEmu.py	/^class ExecutionError(Exception):$/;"	c
ExecutionError	pyemu/flxanalyze.py	/^class ExecutionError(Exception):$/;"	c
ExportData	pefile.py	/^class ExportData(DataContainer):$/;"	c
ExportDirData	pefile.py	/^class ExportDirData(DataContainer):$/;"	c
ExportDirectoryTable	Structures.py	/^class ExportDirectoryTable( PEHeaderSubstructure):$/;"	c
Exports	Structures.py	/^class Exports( object):$/;"	c
FABSB	ops_sse.h	1406;"	d
FABSL	ops_sse.h	1408;"	d
FABSW	ops_sse.h	1407;"	d
FADD	ops_sse.h	327;"	d
FADDSB	ops_sse.h	330;"	d
FADDSW	ops_sse.h	331;"	d
FADDUB	ops_sse.h	328;"	d
FADDUW	ops_sse.h	329;"	d
FAND	ops_sse.h	343;"	d
FANDN	ops_sse.h	344;"	d
FAVG	ops_sse.h	358;"	d
FBLENDP	ops_sse.h	1754;"	d
FBLENDVB	ops_sse.h	1511;"	d
FBLENDVPD	ops_sse.h	1513;"	d
FBLENDVPS	ops_sse.h	1512;"	d
FCMPEQ	ops_sse.h	351;"	d
FCMPEQQ	ops_sse.h	1562;"	d
FCMPGTB	ops_sse.h	348;"	d
FCMPGTL	ops_sse.h	350;"	d
FCMPGTQ	ops_sse.h	1821;"	d
FCMPGTW	ops_sse.h	349;"	d
FILE_OBJECT	Structures.py	/^class FILE_OBJECT( StructuredData):$/;"	c
FLXTEST	helper.c	496;"	d	file:
FLX_BLACKLIST_SIZE	flx_instrument.h	6;"	d
FLX_SLOT_EMPTY	flx_instrument.h	8;"	d
FLX_SLOT_ISCALL	flx_instrument.h	9;"	d
FLX_SLOT_ISJMP	flx_instrument.h	10;"	d
FMAXSB	ops_sse.h	1579;"	d
FMAXSD	ops_sse.h	1580;"	d
FMAXSW	ops_sse.h	341;"	d
FMAXUB	ops_sse.h	340;"	d
FMINSB	ops_sse.h	1577;"	d
FMINSD	ops_sse.h	1578;"	d
FMINSW	ops_sse.h	339;"	d
FMINUB	ops_sse.h	338;"	d
FMULHRSW	ops_sse.h	1413;"	d
FMULHRW	ops_sse.h	354;"	d
FMULHUW	ops_sse.h	355;"	d
FMULHW	ops_sse.h	356;"	d
FMULLD	ops_sse.h	1590;"	d
FMULLW	ops_sse.h	353;"	d
FOR	ops_sse.h	345;"	d
FPReg	cpu.h	/^} FPReg;$/;"	t	typeref:union:__anon4
FPUC_EM	exec.h	278;"	d
FPUS_B	exec.h	276;"	d
FPUS_DE	exec.h	269;"	d
FPUS_IE	exec.h	268;"	d
FPUS_OE	exec.h	271;"	d
FPUS_PE	exec.h	273;"	d
FPUS_SE	exec.h	275;"	d
FPUS_SF	exec.h	274;"	d
FPUS_UE	exec.h	272;"	d
FPUS_ZE	exec.h	270;"	d
FPU_ADD	ops_sse.h	583;"	d
FPU_CMPEQ	ops_sse.h	924;"	d
FPU_CMPLE	ops_sse.h	926;"	d
FPU_CMPLT	ops_sse.h	925;"	d
FPU_CMPNEQ	ops_sse.h	928;"	d
FPU_CMPNLE	ops_sse.h	930;"	d
FPU_CMPNLT	ops_sse.h	929;"	d
FPU_CMPORD	ops_sse.h	931;"	d
FPU_CMPUNORD	ops_sse.h	927;"	d
FPU_DIV	ops_sse.h	586;"	d
FPU_MAX	ops_sse.h	588;"	d
FPU_MIN	ops_sse.h	587;"	d
FPU_MUL	ops_sse.h	585;"	d
FPU_SQRT	ops_sse.h	589;"	d
FPU_SUB	ops_sse.h	584;"	d
FSIGNB	ops_sse.h	1416;"	d
FSIGNL	ops_sse.h	1418;"	d
FSIGNW	ops_sse.h	1417;"	d
FSUB	ops_sse.h	333;"	d
FSUBSB	ops_sse.h	336;"	d
FSUBSW	ops_sse.h	337;"	d
FSUBUB	ops_sse.h	334;"	d
FSUBUW	ops_sse.h	335;"	d
FT0	exec.h	61;"	d
FXOR	ops_sse.h	346;"	d
FlowGraph	pyemu/FlxPyEmu.py	/^class FlowGraph:$/;"	c
FlxFunctionAnalysis	analyze/graphauswertung.py	/^class FlxFunctionAnalysis(dict):$/;"	c
FlxLogAnalyzer	analyze/graphauswertung.py	/^class FlxLogAnalyzer:$/;"	c
FlxLogParser	flxstats.py	/^class FlxLogParser:$/;"	c
FullDllName	processinfo.py	/^    FullDllName = property( get_fulldllname)$/;"	v	class:Image
Function	flxstats.py	/^class Function:$/;"	c
FunctionEmulator	pyemu/FlxPyEmu.py	/^class FunctionEmulator(PEPyEmu):$/;"	c
FunctionEmulator	pyemu/flxanalyze.py	/^class FunctionEmulator(PEPyEmu):$/;"	c
FunctionHandler	fhandle.py	/^class FunctionHandler:$/;"	c
G	analyze/analyze.py	/^G = pgv.AGraph()$/;"	v
GEN_HELPER	translate.c	34;"	d	file:
GEN_HELPER	translate.c	7754;"	d	file:
GEN_REPZ	translate.c	1245;"	d	file:
GEN_REPZ2	translate.c	1261;"	d	file:
GenericStruct	Structures.py	/^class GenericStruct( object):$/;"	c
GraphAnalyzer	analyze/graphauswertung.py	/^class GraphAnalyzer:$/;"	c
HF2_GIF_MASK	cpu.h	182;"	d
HF2_GIF_SHIFT	cpu.h	177;"	d
HF2_HIF_MASK	cpu.h	183;"	d
HF2_HIF_SHIFT	cpu.h	178;"	d
HF2_NMI_MASK	cpu.h	184;"	d
HF2_NMI_SHIFT	cpu.h	179;"	d
HF2_VINTR_MASK	cpu.h	185;"	d
HF2_VINTR_SHIFT	cpu.h	180;"	d
HFLAG_COPY_MASK	kvm.c	795;"	d	file:
HF_ADDSEG_MASK	cpu.h	159;"	d
HF_ADDSEG_SHIFT	cpu.h	137;"	d
HF_CPL_MASK	cpu.h	154;"	d
HF_CPL_SHIFT	cpu.h	128;"	d
HF_CS32_MASK	cpu.h	157;"	d
HF_CS32_SHIFT	cpu.h	134;"	d
HF_CS64_MASK	cpu.h	167;"	d
HF_CS64_SHIFT	cpu.h	146;"	d
HF_EM_MASK	cpu.h	163;"	d
HF_EM_SHIFT	cpu.h	142;"	d
HF_INHIBIT_IRQ_MASK	cpu.h	156;"	d
HF_INHIBIT_IRQ_SHIFT	cpu.h	132;"	d
HF_IOPL_MASK	cpu.h	165;"	d
HF_IOPL_SHIFT	cpu.h	144;"	d
HF_LMA_MASK	cpu.h	166;"	d
HF_LMA_SHIFT	cpu.h	145;"	d
HF_MP_MASK	cpu.h	162;"	d
HF_MP_SHIFT	cpu.h	141;"	d
HF_OSFXSR_MASK	cpu.h	173;"	d
HF_OSFXSR_SHIFT	cpu.h	152;"	d
HF_PE_MASK	cpu.h	160;"	d
HF_PE_SHIFT	cpu.h	139;"	d
HF_RF_MASK	cpu.h	168;"	d
HF_RF_SHIFT	cpu.h	147;"	d
HF_SMM_MASK	cpu.h	170;"	d
HF_SMM_SHIFT	cpu.h	149;"	d
HF_SOFTMMU_MASK	cpu.h	155;"	d
HF_SOFTMMU_SHIFT	cpu.h	130;"	d
HF_SS32_MASK	cpu.h	158;"	d
HF_SS32_SHIFT	cpu.h	135;"	d
HF_SVME_MASK	cpu.h	171;"	d
HF_SVME_SHIFT	cpu.h	150;"	d
HF_SVMI_MASK	cpu.h	172;"	d
HF_SVMI_SHIFT	cpu.h	151;"	d
HF_TF_MASK	cpu.h	161;"	d
HF_TF_SHIFT	cpu.h	140;"	d
HF_TS_MASK	cpu.h	164;"	d
HF_TS_SHIFT	cpu.h	143;"	d
HF_VM_MASK	cpu.h	169;"	d
HF_VM_SHIFT	cpu.h	148;"	d
HOOKS	fhandle.py	/^HOOKS = [$/;"	v
HeapAllocationFunctionHandler	fhandle.py	/^class HeapAllocationFunctionHandler(FunctionHandler):$/;"	c
HeapFreeFunctionHandler	fhandle.py	/^class HeapFreeFunctionHandler(FunctionHandler):$/;"	c
HeapMemoryTracer	PyQEMU.py	/^class HeapMemoryTracer:$/;"	c
I486_FEATURES	cpuid.c	220;"	d	file:
IDAMemory	pyemu/PyMemory.py	/^class IDAMemory(PyMemory):$/;"	c
IDAPyEmu	pyemu/PyEmu.py	/^class IDAPyEmu(PyEmu):$/;"	c
IDIV	pyemu/PyCPU.py	/^    def IDIV(self, instruction):$/;"	m	class:PyCPU
ID_MASK	cpu.h	121;"	d
IF_MASK	cpu.h	112;"	d
IMAGE_CHARACTERISTICS	pefile.py	/^IMAGE_CHARACTERISTICS = dict([(e[1], e[0]) for e in$/;"	v
IMAGE_DOS_SIGNATURE	pefile.py	/^IMAGE_DOS_SIGNATURE             = 0x5A4D$/;"	v
IMAGE_NT_SIGNATURE	pefile.py	/^IMAGE_NT_SIGNATURE              = 0x00004550$/;"	v
IMAGE_NUMBEROF_DIRECTORY_ENTRIES	pefile.py	/^IMAGE_NUMBEROF_DIRECTORY_ENTRIES= 16$/;"	v
IMAGE_ORDINAL_FLAG	pefile.py	/^IMAGE_ORDINAL_FLAG              = 0x80000000L$/;"	v
IMAGE_ORDINAL_FLAG64	pefile.py	/^IMAGE_ORDINAL_FLAG64            = 0x8000000000000000L$/;"	v
IMAGE_OS2_SIGNATURE	pefile.py	/^IMAGE_OS2_SIGNATURE             = 0x454E$/;"	v
IMAGE_OS2_SIGNATURE_LE	pefile.py	/^IMAGE_OS2_SIGNATURE_LE          = 0x454C$/;"	v
IMAGE_SCN_CNT_CODE	Structures.py	/^IMAGE_SCN_CNT_CODE =0x00000020$/;"	v
IMAGE_SCN_CNT_INITIALIZED_DATA	Structures.py	/^IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040$/;"	v
IMAGE_SCN_CNT_UNINITIALIZED_DATA	Structures.py	/^IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080$/;"	v
IMAGE_SCN_MEM_EXECUTE	Structures.py	/^IMAGE_SCN_MEM_EXECUTE = 0x20000000$/;"	v
IMAGE_SCN_MEM_READ	Structures.py	/^IMAGE_SCN_MEM_READ = 0x40000000$/;"	v
IMAGE_SCN_MEM_WRITE	Structures.py	/^IMAGE_SCN_MEM_WRITE = 0x80000000$/;"	v
IMAGE_TYPE_DLL	Helpers.py	/^IMAGE_TYPE_DLL = 1$/;"	v
IMAGE_TYPE_EXE	Helpers.py	/^IMAGE_TYPE_EXE = 2$/;"	v
IMAGE_TYPE_UNKNOWN	Helpers.py	/^IMAGE_TYPE_UNKNOWN = 0$/;"	v
IMAGE_VXD_SIGNATURE	pefile.py	/^IMAGE_VXD_SIGNATURE             = 0x454C$/;"	v
IMUL	pyemu/PyCPU.py	/^    def IMUL(self, instruction):$/;"	m	class:PyCPU
INC	pyemu/PyCPU.py	/^    def INC(self, instruction):$/;"	m	class:PyCPU
INSTRUMENT_DATA	helper.c	/^} INSTRUMENT_DATA, * PINSTRUMENT_DATA;$/;"	t	typeref:struct:_instrument_data	file:
INT	pyemu/PyCPU.py	/^    def INT(self, instruction):$/;"	m	class:PyCPU
IOPL_MASK	cpu.h	114;"	d
IOPL_SHIFT	cpu.h	108;"	d
Image	processinfo.py	/^class Image( object):$/;"	c
ImageFileName	helper.c	/^  char ImageFileName[16];$/;"	m	struct:_instrument_data	file:
ImageFileName	processinfo.py	/^    ImageFileName = property( get_imagefilename)$/;"	v	class:Process
ImportAddressTableEntry	Structures.py	/^ImportAddressTableEntry = ImportLookupTableEntry$/;"	v
ImportData	pefile.py	/^class ImportData(DataContainer):$/;"	c
ImportDescData	pefile.py	/^class ImportDescData(DataContainer):$/;"	c
ImportDirectoryEntry	Structures.py	/^class ImportDirectoryEntry( PEHeaderSubstructure):$/;"	c
ImportLookupTableEntry	Structures.py	/^class ImportLookupTableEntry( PEHeaderSubstructure):$/;"	c
Imports	Structures.py	/^class Imports( object):$/;"	c
InMemModList	helper.c	/^  uint32_t InMemModList; \/\/ldr + 0x14$/;"	m	struct:_instrument_data	file:
JA	pyemu/PyCPU.py	/^    def JA(self, instruction):$/;"	m	class:PyCPU
JB	pyemu/PyCPU.py	/^    def JB(self, instruction):$/;"	m	class:PyCPU
JBE	pyemu/PyCPU.py	/^    def JBE(self, instruction):$/;"	m	class:PyCPU
JC	pyemu/PyCPU.py	/^    def JC(self, instruction):$/;"	m	class:PyCPU
JCC_B	translate.c	/^    JCC_B,$/;"	e	enum:__anon19	file:
JCC_BE	translate.c	/^    JCC_BE,$/;"	e	enum:__anon19	file:
JCC_L	translate.c	/^    JCC_L,$/;"	e	enum:__anon19	file:
JCC_LE	translate.c	/^    JCC_LE,$/;"	e	enum:__anon19	file:
JCC_O	translate.c	/^    JCC_O,$/;"	e	enum:__anon19	file:
JCC_P	translate.c	/^    JCC_P,$/;"	e	enum:__anon19	file:
JCC_S	translate.c	/^    JCC_S,$/;"	e	enum:__anon19	file:
JCC_Z	translate.c	/^    JCC_Z,$/;"	e	enum:__anon19	file:
JG	pyemu/PyCPU.py	/^    def JG(self, instruction):$/;"	m	class:PyCPU
JGE	pyemu/PyCPU.py	/^    def JGE(self, instruction):$/;"	m	class:PyCPU
JL	pyemu/PyCPU.py	/^    def JL(self, instruction):$/;"	m	class:PyCPU
JLE	pyemu/PyCPU.py	/^    def JLE(self, instruction):$/;"	m	class:PyCPU
JMP	pyemu/PyCPU.py	/^    def JMP(self, instruction):$/;"	m	class:PyCPU
JNA	pyemu/PyCPU.py	/^    def JNA(self, instruction):$/;"	m	class:PyCPU
JNB	pyemu/PyCPU.py	/^    def JNB(self, instruction):$/;"	m	class:PyCPU
JNC	pyemu/PyCPU.py	/^    def JNC(self, instruction):$/;"	m	class:PyCPU
JNG	pyemu/PyCPU.py	/^    def JNG(self, instruction):$/;"	m	class:PyCPU
JNL	pyemu/PyCPU.py	/^    def JNL(self, instruction):$/;"	m	class:PyCPU
JNP	pyemu/PyCPU.py	/^    def JNP(self, instruction):$/;"	m	class:PyCPU
JNS	pyemu/PyCPU.py	/^    def JNS(self, instruction):$/;"	m	class:PyCPU
JNZ	pyemu/PyCPU.py	/^    def JNZ(self, instruction):$/;"	m	class:PyCPU
JP	pyemu/PyCPU.py	/^    def JP(self, instruction):$/;"	m	class:PyCPU
JPO	pyemu/PyCPU.py	/^    def JPO(self, instruction):$/;"	m	class:PyCPU
JS	pyemu/PyCPU.py	/^    def JS(self, instruction):$/;"	m	class:PyCPU
JZ	pyemu/PyCPU.py	/^    def JZ(self, instruction):$/;"	m	class:PyCPU
KAPC_STATE	Structures.py	/^class KAPC_STATE( StructuredData):$/;"	c
KNOWN_Processes	PyQEMU.py	/^KNOWN_Processes = {}$/;"	v
KPCR	Structures.py	/^class KPCR( StructuredData):$/;"	c
KPRCB	Structures.py	/^class KPRCB( StructuredData):$/;"	c
KPROCESS	Structures.py	/^class KPROCESS( StructuredData):$/;"	c
KTHREAD	Structures.py	/^class KTHREAD( StructuredData):$/;"	c
L	ops_sse.h	2073;"	d
L	ops_sse.h	25;"	d
L	ops_sse.h	33;"	d
LANG	pefile.py	/^LANG = dict(lang+[(e[1], e[0]) for e in lang])$/;"	v
LDR_DATA_TABLE_ENTRY	Structures.py	/^class LDR_DATA_TABLE_ENTRY( StructuredData):$/;"	c
LEA	pyemu/PyCPU.py	/^    def LEA(self, instruction):$/;"	m	class:PyCPU
LEAVE	pyemu/PyCPU.py	/^    def LEAVE(self, instruction):$/;"	m	class:PyCPU
LIST	Structures.py	/^def LIST( sometype, le_member):$/;"	f
LIST_ENTRY	Structures.py	/^class LIST_ENTRY( object):$/;"	c
LOG_PCALL	op_helper.c	37;"	d	file:
LOG_PCALL	op_helper.c	41;"	d	file:
LOG_PCALL_STATE	op_helper.c	38;"	d	file:
LOG_PCALL_STATE	op_helper.c	42;"	d	file:
LOG_THIS	flx_instrument.c	55;"	d	file:
LOOP	pyemu/PyCPU.py	/^    def LOOP(self, instruction):$/;"	m	class:PyCPU
LOOPE	pyemu/PyCPU.py	/^    def LOOPE(self, instruction):$/;"	m	class:PyCPU
LOOPNE	pyemu/PyCPU.py	/^    def LOOPNE(self, instruction):$/;"	m	class:PyCPU
LateRetEvent	event.py	/^class LateRetEvent(Event):$/;"	c
LoadConfigData	pefile.py	/^class LoadConfigData(DataContainer):$/;"	c
LoadLibraryAFunctionHandler	fhandle.py	/^class LoadLibraryAFunctionHandler(FunctionHandler):$/;"	c
LoadLibraryExAFunctionHandler	fhandle.py	/^class LoadLibraryExAFunctionHandler(LoadLibraryAFunctionHandler):$/;"	c
LoadLibraryExWFunctionHandler	fhandle.py	/^class LoadLibraryExWFunctionHandler(LoadLibraryWFunctionHandler):$/;"	c
LoadLibraryFunctionHandler	fhandle.py	/^class LoadLibraryFunctionHandler(FunctionHandler):$/;"	c
LoadLibraryWFunctionHandler	fhandle.py	/^class LoadLibraryWFunctionHandler(FunctionHandler):$/;"	c
LocalAllocFunctionHandler	fhandle.py	/^class LocalAllocFunctionHandler(FunctionHandler):$/;"	c
MACHINE_TYPE	pefile.py	/^MACHINE_TYPE = dict([(e[1], e[0]) for e in machine_types]+machine_types)$/;"	v
MAGIC_PE32	Structures.py	/^MAGIC_PE32 = 0x010b$/;"	v
MAGIC_PE32plus	Structures.py	/^MAGIC_PE32plus = 0x020b$/;"	v
MANTD	exec.h	160;"	d
MANTD	exec.h	190;"	d
MANTD	exec.h	192;"	d
MANTD1	machine.c	94;"	d	file:
MAXEXPD	exec.h	156;"	d
MAXEXPD	exec.h	185;"	d
MAXTAN	exec.h	142;"	d
MCE_BANKS_DEF	cpu.h	256;"	d
MCE_CAP_DEF	cpu.h	255;"	d
MCG_CTL_P	cpu.h	253;"	d
MCG_STATUS_MCIP	cpu.h	258;"	d
MCI_STATUS_OVER	cpu.h	261;"	d
MCI_STATUS_UC	cpu.h	262;"	d
MCI_STATUS_VAL	cpu.h	260;"	d
MMUSUFFIX	op_helper.c	5017;"	d	file:
MMU_MODE0_SUFFIX	cpu.h	910;"	d
MMU_MODE1_SUFFIX	cpu.h	911;"	d
MMU_USER_IDX	cpu.h	912;"	d
MMVAD	Structures.py	/^class MMVAD( StructuredData):$/;"	c
MMXReg	cpu.h	/^} MMXReg;$/;"	t	typeref:union:__anon3
MMX_B	cpu.h	540;"	d
MMX_B	cpu.h	552;"	d
MMX_L	cpu.h	542;"	d
MMX_L	cpu.h	554;"	d
MMX_OP2	translate.c	2813;"	d	file:
MMX_Q	cpu.h	557;"	d
MMX_S	cpu.h	543;"	d
MMX_S	cpu.h	555;"	d
MMX_W	cpu.h	541;"	d
MMX_W	cpu.h	553;"	d
MOV	pyemu/PyCPU.py	/^    def MOV(self, instruction):$/;"	m	class:PyCPU
MOVS	pyemu/PyCPU.py	/^    def MOVS(self, instruction):$/;"	m	class:PyCPU
MOVSB	pyemu/PyCPU.py	/^    def MOVSB(self, instruction):$/;"	m	class:PyCPU
MOVSD	pyemu/PyCPU.py	/^    def MOVSD(self, instruction):$/;"	m	class:PyCPU
MOVSW	pyemu/PyCPU.py	/^    def MOVSW(self, instruction):$/;"	m	class:PyCPU
MOVSX	pyemu/PyCPU.py	/^    def MOVSX(self, instruction):$/;"	m	class:PyCPU
MOVZX	pyemu/PyCPU.py	/^    def MOVZX(self, instruction):$/;"	m	class:PyCPU
MSR_CSTAR	cpu.h	320;"	d
MSR_EFER	cpu.h	309;"	d
MSR_EFER_FFXSR	cpu.h	316;"	d
MSR_EFER_LMA	cpu.h	313;"	d
MSR_EFER_LME	cpu.h	312;"	d
MSR_EFER_NXE	cpu.h	314;"	d
MSR_EFER_SCE	cpu.h	311;"	d
MSR_EFER_SVME	cpu.h	315;"	d
MSR_FMASK	cpu.h	321;"	d
MSR_FSBASE	cpu.h	322;"	d
MSR_GSBASE	cpu.h	323;"	d
MSR_IA32_APICBASE	cpu.h	265;"	d
MSR_IA32_APICBASE_BASE	cpu.h	268;"	d
MSR_IA32_APICBASE_BSP	cpu.h	266;"	d
MSR_IA32_APICBASE_ENABLE	cpu.h	267;"	d
MSR_IA32_PERF_STATUS	cpu.h	283;"	d
MSR_IA32_SYSENTER_CS	cpu.h	275;"	d
MSR_IA32_SYSENTER_EIP	cpu.h	277;"	d
MSR_IA32_SYSENTER_ESP	cpu.h	276;"	d
MSR_IA32_TSC	cpu.h	264;"	d
MSR_KERNELGSBASE	cpu.h	324;"	d
MSR_KVM_SYSTEM_TIME	kvm.c	46;"	d	file:
MSR_KVM_WALL_CLOCK	kvm.c	45;"	d	file:
MSR_LSTAR	cpu.h	319;"	d
MSR_MC0_ADDR	cpu.h	306;"	d
MSR_MC0_CTL	cpu.h	304;"	d
MSR_MC0_MISC	cpu.h	307;"	d
MSR_MC0_STATUS	cpu.h	305;"	d
MSR_MCG_CAP	cpu.h	279;"	d
MSR_MCG_CTL	cpu.h	281;"	d
MSR_MCG_STATUS	cpu.h	280;"	d
MSR_MTRRcap	cpu.h	270;"	d
MSR_MTRRcap_FIXRANGE_SUPPORT	cpu.h	272;"	d
MSR_MTRRcap_VCNT	cpu.h	271;"	d
MSR_MTRRcap_WC_SUPPORTED	cpu.h	273;"	d
MSR_MTRRdefType	cpu.h	302;"	d
MSR_MTRRfix16K_80000	cpu.h	289;"	d
MSR_MTRRfix16K_A0000	cpu.h	290;"	d
MSR_MTRRfix4K_C0000	cpu.h	291;"	d
MSR_MTRRfix4K_C8000	cpu.h	292;"	d
MSR_MTRRfix4K_D0000	cpu.h	293;"	d
MSR_MTRRfix4K_D8000	cpu.h	294;"	d
MSR_MTRRfix4K_E0000	cpu.h	295;"	d
MSR_MTRRfix4K_E8000	cpu.h	296;"	d
MSR_MTRRfix4K_F0000	cpu.h	297;"	d
MSR_MTRRfix4K_F8000	cpu.h	298;"	d
MSR_MTRRfix64K_00000	cpu.h	288;"	d
MSR_MTRRphysBase	cpu.h	285;"	d
MSR_MTRRphysMask	cpu.h	286;"	d
MSR_PAT	cpu.h	300;"	d
MSR_STAR	cpu.h	318;"	d
MSR_TSC_AUX	cpu.h	325;"	d
MSR_VM_HSAVE_PA	cpu.h	327;"	d
MTRRVar	cpu.h	/^} MTRRVar;$/;"	t	typeref:struct:__anon5
MUL	pyemu/PyCPU.py	/^    def MUL(self, instruction):$/;"	m	class:PyCPU
MemoryManager	PyQEMU.py	/^class MemoryManager:$/;"	c
MyFasterGraph	analyze/graphauswertung.py	/^class MyFasterGraph:$/;"	c
NB_MMU_MODES	cpu.h	582;"	d
NB_OP_SIZES	translate.c	261;"	d	file:
NB_OP_SIZES	translate.c	265;"	d	file:
NCpyFunctionHandler	fhandle.py	/^class NCpyFunctionHandler(CpyFunctionHandler):$/;"	c
NEG	pyemu/PyCPU.py	/^    def NEG(self, instruction):$/;"	m	class:PyCPU
NOP	pyemu/PyCPU.py	/^    def NOP(self, instruction):$/;"	m	class:PyCPU
NOT	pyemu/PyCPU.py	/^    def NOT(self, instruction):$/;"	m	class:PyCPU
NT_MASK	cpu.h	115;"	d
NULL	Helpers.py	/^NULL = 0$/;"	v
NULL	PyQEMU.py	/^NULL = 0$/;"	v
Name	processinfo.py	/^    Name =        property( get_basedllname) # for compatibility with a yet-to-be-implemented general memory range class$/;"	v	class:Image
OPTIONAL_HEADER_MAGIC_PE	pefile.py	/^OPTIONAL_HEADER_MAGIC_PE        = 0x10b$/;"	v
OPTIONAL_HEADER_MAGIC_PE_PLUS	pefile.py	/^OPTIONAL_HEADER_MAGIC_PE_PLUS   = 0x20b$/;"	v
OP_ADCL	translate.c	/^    OP_ADCL,$/;"	e	enum:__anon17	file:
OP_ADDL	translate.c	/^    OP_ADDL,$/;"	e	enum:__anon17	file:
OP_ANDL	translate.c	/^    OP_ANDL,$/;"	e	enum:__anon17	file:
OP_CMPL	translate.c	/^    OP_CMPL,$/;"	e	enum:__anon17	file:
OP_ORL	translate.c	/^    OP_ORL,$/;"	e	enum:__anon17	file:
OP_RCL	translate.c	/^    OP_RCL,$/;"	e	enum:__anon18	file:
OP_RCR	translate.c	/^    OP_RCR,$/;"	e	enum:__anon18	file:
OP_ROL	translate.c	/^    OP_ROL,$/;"	e	enum:__anon18	file:
OP_ROR	translate.c	/^    OP_ROR,$/;"	e	enum:__anon18	file:
OP_SAR	translate.c	/^    OP_SAR = 7,$/;"	e	enum:__anon18	file:
OP_SBBL	translate.c	/^    OP_SBBL,$/;"	e	enum:__anon17	file:
OP_SHL	translate.c	/^    OP_SHL,$/;"	e	enum:__anon18	file:
OP_SHL1	translate.c	/^    OP_SHL1, \/* undocumented *\/$/;"	e	enum:__anon18	file:
OP_SHR	translate.c	/^    OP_SHR,$/;"	e	enum:__anon18	file:
OP_SUBL	translate.c	/^    OP_SUBL,$/;"	e	enum:__anon17	file:
OP_XORL	translate.c	/^    OP_XORL,$/;"	e	enum:__anon17	file:
OR	pyemu/PyCPU.py	/^    def OR(self, instruction):$/;"	m	class:PyCPU
OR_A0	translate.c	/^    OR_A0, \/* temporary register used when doing address evaluation *\/$/;"	e	enum:__anon21	file:
OR_EAX	translate.c	/^    OR_EAX,   \/* MUST be even numbered *\/$/;"	e	enum:__anon21	file:
OR_EBP	translate.c	/^    OR_EBP,$/;"	e	enum:__anon21	file:
OR_EBX	translate.c	/^    OR_EBX,$/;"	e	enum:__anon21	file:
OR_ECX	translate.c	/^    OR_ECX,$/;"	e	enum:__anon21	file:
OR_EDI	translate.c	/^    OR_EDI,$/;"	e	enum:__anon21	file:
OR_EDX	translate.c	/^    OR_EDX,$/;"	e	enum:__anon21	file:
OR_ESI	translate.c	/^    OR_ESI,$/;"	e	enum:__anon21	file:
OR_ESP	translate.c	/^    OR_ESP,$/;"	e	enum:__anon21	file:
OR_TMP0	translate.c	/^    OR_TMP0 = 16,    \/* temporary operand register *\/$/;"	e	enum:__anon21	file:
OR_TMP1	translate.c	/^    OR_TMP1,$/;"	e	enum:__anon21	file:
OT_BYTE	translate.c	/^    OT_BYTE = 0,$/;"	e	enum:__anon20	file:
OT_LONG	translate.c	/^    OT_LONG,$/;"	e	enum:__anon20	file:
OT_QUAD	translate.c	/^    OT_QUAD,$/;"	e	enum:__anon20	file:
OT_WORD	translate.c	/^    OT_WORD,$/;"	e	enum:__anon20	file:
ObjectBackend	Structures.py	/^class ObjectBackend( Backend):$/;"	c
OptionalHeaderDataDirectories	Structures.py	/^class OptionalHeaderDataDirectories( object):$/;"	c
OptionalHeaderStandardFields	Structures.py	/^class OptionalHeaderStandardFields( PEHeaderSubstructure):$/;"	c
OptionalHeaderWindowsSpecificFields	Structures.py	/^class OptionalHeaderWindowsSpecificFields( PEHeaderSubstructure):$/;"	c
P	Structures.py	/^def P( sometype, ignore_null = False):$/;"	f
PAGESIZE	Helpers.py	/^PAGESIZE = 4096$/;"	v
PAGESIZE	pyemu/PyMemory.py	/^    PAGESIZE = 4096$/;"	v	class:PyMemory
PAGESIZE	pyemu/PyMemory.py	/^    PAGESIZE = 4096$/;"	v	class:PyMemoryPage
PCONTROL_AREA	Structures.py	/^class PCONTROL_AREA( Pointer):$/;"	c
PE	Structures.py	/^class PE( object):$/;"	c
PE	pefile.py	/^class PE:$/;"	c
PEB	Structures.py	/^class PEB( StructuredData):$/;"	c
PEB_LDR_DATA	Structures.py	/^class PEB_LDR_DATA( StructuredData):$/;"	c
PEFileFormatException	Structures.py	/^class PEFileFormatException( Exception):$/;"	c
PEFormatError	pefile.py	/^class PEFormatError(Exception):$/;"	c
PEHeaderSubstructure	Structures.py	/^class PEHeaderSubstructure( StructuredData):$/;"	c
PEList	Structures.py	/^class PEList( object):$/;"	c
PEMemory	pyemu/PyMemory.py	/^class PEMemory(PyMemory):$/;"	c
PENTIUM2_FEATURES	cpuid.c	223;"	d	file:
PENTIUM3_FEATURES	cpuid.c	226;"	d	file:
PENTIUM_FEATURES	cpuid.c	221;"	d	file:
PEPyEmu	pyemu/PyEmu.py	/^class PEPyEmu(PyEmu):$/;"	c
PFILE_OBJECT	Structures.py	/^class PFILE_OBJECT( Pointer):$/;"	c
PG_ACCESSED_BIT	cpu.h	228;"	d
PG_ACCESSED_MASK	cpu.h	239;"	d
PG_DIRTY_BIT	cpu.h	229;"	d
PG_DIRTY_MASK	cpu.h	240;"	d
PG_ERROR_I_D_MASK	cpu.h	251;"	d
PG_ERROR_P_MASK	cpu.h	247;"	d
PG_ERROR_RSVD_MASK	cpu.h	250;"	d
PG_ERROR_U_MASK	cpu.h	249;"	d
PG_ERROR_W_BIT	cpu.h	245;"	d
PG_ERROR_W_MASK	cpu.h	248;"	d
PG_GLOBAL_BIT	cpu.h	231;"	d
PG_GLOBAL_MASK	cpu.h	242;"	d
PG_NX_BIT	cpu.h	232;"	d
PG_NX_MASK	cpu.h	243;"	d
PG_PCD_BIT	cpu.h	227;"	d
PG_PCD_MASK	cpu.h	238;"	d
PG_PRESENT_BIT	cpu.h	223;"	d
PG_PRESENT_MASK	cpu.h	234;"	d
PG_PSE_BIT	cpu.h	230;"	d
PG_PSE_MASK	cpu.h	241;"	d
PG_PWT_BIT	cpu.h	226;"	d
PG_PWT_MASK	cpu.h	237;"	d
PG_RW_BIT	cpu.h	224;"	d
PG_RW_MASK	cpu.h	235;"	d
PG_USER_BIT	cpu.h	225;"	d
PG_USER_MASK	cpu.h	236;"	d
PHYS_ADDR_MASK	helper.c	567;"	d	file:
PHYS_ADDR_MASK	helper.c	569;"	d	file:
PINSTRUMENT_DATA	helper.c	/^} INSTRUMENT_DATA, * PINSTRUMENT_DATA;$/;"	t	typeref:struct:_instrument_data	file:
PMMVAD	Structures.py	/^class PMMVAD( Pointer):$/;"	c
POP	pyemu/PyCPU.py	/^    def POP(self, instruction):$/;"	m	class:PyCPU
POPA	pyemu/PyCPU.py	/^    def POPA(self, instruction):$/;"	m	class:PyCPU
POPCOUNT	ops_sse.h	2044;"	d
POPL	op_helper.c	658;"	d	file:
POPMASK	ops_sse.h	2043;"	d
POPQ	op_helper.c	866;"	d	file:
POPW	op_helper.c	652;"	d	file:
PPRO_FEATURES	cpuid.c	227;"	d	file:
PREFIX_ADR	translate.c	41;"	d	file:
PREFIX_DATA	translate.c	40;"	d	file:
PREFIX_LOCK	translate.c	39;"	d	file:
PREFIX_REPNZ	translate.c	38;"	d	file:
PREFIX_REPZ	translate.c	37;"	d	file:
PSEGMENT	Structures.py	/^class PSEGMENT( Pointer):$/;"	c
PUSH	pyemu/PyCPU.py	/^    def PUSH(self, instruction):$/;"	m	class:PyCPU
PUSHA	pyemu/PyCPU.py	/^    def PUSHA(self, instruction):$/;"	m	class:PyCPU
PUSHL	op_helper.c	646;"	d	file:
PUSHQ	op_helper.c	860;"	d	file:
PUSHW	op_helper.c	640;"	d	file:
PageFaultException	Helpers.py	/^class PageFaultException( Exception):$/;"	c
Pointer	Structures.py	/^class Pointer( object):$/;"	c
Pointer	test/test.py	/^class Pointer:$/;"	c
Process	processinfo.py	/^class Process( object):$/;"	c
PyCPU	pyemu/PyCPU.py	/^class PyCPU:$/;"	c
PyCPU	pyemu/PyEmu.py	/^from PyCPU import PyCPU$/;"	i
PyContext	pyemu/PyCPU.py	/^from PyContext import PyContext$/;"	i
PyContext	pyemu/PyContext.py	/^class PyContext:$/;"	c
PyContext	pyemu/PyEmu.py	/^from PyContext import PyContext$/;"	i
PyDbgMemory	pyemu/PyMemory.py	/^class PyDbgMemory(PyMemory):$/;"	c
PyDbgPyEmu	pyemu/PyEmu.py	/^class PyDbgPyEmu(PyEmu):$/;"	c
PyEmu	pyemu/PyEmu.py	/^class PyEmu:$/;"	c
PyFlags	pyemu/PyCPU.py	/^from PyFlags import PyFlags$/;"	i
PyFlags	pyemu/PyFlags.py	/^class PyFlags:$/;"	c
PyFlxC_blacklist	flx_instrument.c	/^static PyObject* PyFlxC_blacklist(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxC_blacklist_cleanup	flx_instrument.c	/^static PyObject* PyFlxC_blacklist_cleanup(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxC_breakpoint_delete	flx_instrument.c	/^static PyObject* PyFlxC_breakpoint_delete(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxC_breakpoint_insert	flx_instrument.c	/^static PyObject* PyFlxC_breakpoint_insert(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxC_creg	flx_instrument.c	/^static PyObject* PyFlxC_creg(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxC_eip	flx_instrument.c	/^static PyObject* PyFlxC_eip(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxC_genreg	flx_instrument.c	/^static PyObject* PyFlxC_genreg(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxC_methods	flx_instrument.c	/^static PyMethodDef PyFlxC_methods[] = {$/;"	v	file:
PyFlxC_registers	flx_instrument.c	/^static PyObject* PyFlxC_registers(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxC_set_instrumentation_active	flx_instrument.c	/^static PyObject* PyFlxC_set_instrumentation_active(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxC_vmem_read	flx_instrument.c	/^static PyObject* PyFlxC_vmem_read(PyObject *self, PyObject *args) {$/;"	f	file:
PyFlxInstrument	Helpers.py	/^import PyFlxInstrument$/;"	i
PyFlxInstrument	PyQEMU.py	/^import PyFlxInstrument$/;"	i
PyFlxInstrument	fhandle.py	/^import PyFlxInstrument$/;"	i
PyFlxInstrument	processinfo.py	/^import PyFlxInstrument$/;"	i
PyFlx_C_Module	flx_instrument.c	/^static PyObject *PyFlx_C_Module;$/;"	v	file:
PyFlx_ISCALL	flx_instrument.c	/^static PyObject *PyFlx_ISCALL;$/;"	v	file:
PyFlx_ISEMPTY	flx_instrument.c	/^static PyObject *PyFlx_ISEMPTY;$/;"	v	file:
PyFlx_ISJMP	flx_instrument.c	/^static PyObject *PyFlx_ISJMP;$/;"	v	file:
PyFlx_REG_EAX	flx_instrument.c	/^static PyObject *PyFlx_REG_EAX;$/;"	v	file:
PyFlx_REG_EBP	flx_instrument.c	/^static PyObject *PyFlx_REG_EBP;$/;"	v	file:
PyFlx_REG_EBX	flx_instrument.c	/^static PyObject *PyFlx_REG_EBX;$/;"	v	file:
PyFlx_REG_ECX	flx_instrument.c	/^static PyObject *PyFlx_REG_ECX;$/;"	v	file:
PyFlx_REG_EDI	flx_instrument.c	/^static PyObject *PyFlx_REG_EDI;$/;"	v	file:
PyFlx_REG_EDX	flx_instrument.c	/^static PyObject *PyFlx_REG_EDX;$/;"	v	file:
PyFlx_REG_ESI	flx_instrument.c	/^static PyObject *PyFlx_REG_ESI;$/;"	v	file:
PyFlx_REG_ESP	flx_instrument.c	/^static PyObject *PyFlx_REG_ESP;$/;"	v	file:
PyFlx_ev_bp	flx_instrument.c	/^PyObject *PyFlx_ev_bp = NULL;$/;"	v
PyFlx_ev_call	flx_instrument.c	/^PyObject *PyFlx_ev_call = NULL;$/;"	v
PyFlx_ev_jmp	flx_instrument.c	/^PyObject *PyFlx_ev_jmp = NULL;$/;"	v
PyFlx_ev_ret	flx_instrument.c	/^PyObject *PyFlx_ev_ret = NULL;$/;"	v
PyFlx_ev_syscall	flx_instrument.c	/^PyObject *PyFlx_ev_syscall = NULL;$/;"	v
PyFlx_ev_update_cr3	flx_instrument.c	/^PyObject *PyFlx_ev_update_cr3 = NULL;$/;"	v
PyInstruction	pyemu/PyInstruction.py	/^class PyInstruction:$/;"	c
PyLinux	pyemu/PyOS.py	/^class PyLinux:$/;"	c
PyMODINIT_FUNC	flx_instrument.c	437;"	d	file:
PyMemory	pyemu/PyMemory.py	/^class PyMemory:$/;"	c
PyMemoryPage	pyemu/PyMemory.py	/^class PyMemoryPage:$/;"	c
PyOperand	pyemu/PyInstruction.py	/^class PyOperand:$/;"	c
PyQEMU_Interface	pyemu/FlxPyEmu.py	/^class PyQEMU_Interface:$/;"	c
PyQEMU_Interface	pyemu/flxanalyze.py	/^class PyQEMU_Interface:$/;"	c
PyQemuDumpAnalyzer	analyze/analyze.py	/^class PyQemuDumpAnalyzer:$/;"	c
PyQemuEmulationInterface	PyQEMU.py	/^class PyQemuEmulationInterface:$/;"	c
PyWindows	pyemu/PyOS.py	/^class PyWindows:$/;"	c
Py_Python_Module	flx_instrument.c	/^static PyObject *Py_Python_Module;$/;"	v	file:
Q	ops_sse.h	2074;"	d
Q	ops_sse.h	26;"	d
Q	ops_sse.h	34;"	d
Queue	PyQEMU.py	/^import Queue$/;"	i
Queue	fhandle.py	/^import Queue$/;"	i
RCL	pyemu/PyCPU.py	/^    def RCL(self, instruction):$/;"	m	class:PyCPU
RCR	pyemu/PyCPU.py	/^    def RCR(self, instruction):$/;"	m	class:PyCPU
RC_CHOP	exec.h	140;"	d
RC_DOWN	exec.h	138;"	d
RC_MASK	exec.h	136;"	d
RC_NEAR	exec.h	137;"	d
RC_UP	exec.h	139;"	d
READ	pyemu/PyMemory.py	/^    READ = 0x1$/;"	v	class:PyMemoryPage
REG_B_OFFSET	translate.c	270;"	d	file:
REG_B_OFFSET	translate.c	276;"	d	file:
REG_H_OFFSET	translate.c	271;"	d	file:
REG_H_OFFSET	translate.c	277;"	d	file:
REG_LH_OFFSET	translate.c	274;"	d	file:
REG_LH_OFFSET	translate.c	280;"	d	file:
REG_L_OFFSET	translate.c	273;"	d	file:
REG_L_OFFSET	translate.c	279;"	d	file:
REG_W_OFFSET	translate.c	272;"	d	file:
REG_W_OFFSET	translate.c	278;"	d	file:
RELOCATION_TYPE	pefile.py	/^RELOCATION_TYPE = dict([(e[1], e[0]) for e in relocation_types]+relocation_types)$/;"	v
RESOURCE_TYPE	pefile.py	/^RESOURCE_TYPE = dict([(e[1], e[0]) for e in resource_type]+resource_type)$/;"	v
RET	pyemu/PyCPU.py	/^    def RET(self, instruction):$/;"	m	class:PyCPU
REX_B	translate.c	48;"	d	file:
REX_B	translate.c	58;"	d	file:
REX_X	translate.c	47;"	d	file:
REX_X	translate.c	57;"	d	file:
RF_MASK	cpu.h	116;"	d
ROL	pyemu/PyCPU.py	/^    def ROL(self, instruction):$/;"	m	class:PyCPU
ROR	pyemu/PyCPU.py	/^    def ROR(self, instruction):$/;"	m	class:PyCPU
RVAException	Structures.py	/^    class RVAException(Exception):$/;"	c	class:PE
R_AH	cpu.h	63;"	d
R_AL	cpu.h	59;"	d
R_BH	cpu.h	66;"	d
R_BL	cpu.h	62;"	d
R_CH	cpu.h	64;"	d
R_CL	cpu.h	60;"	d
R_CS	PyQEMU.py	/^R_CS = 1$/;"	v
R_CS	cpu.h	69;"	d
R_DH	cpu.h	65;"	d
R_DL	cpu.h	61;"	d
R_DS	PyQEMU.py	/^R_DS = 3$/;"	v
R_DS	cpu.h	71;"	d
R_EAX	PyQEMU.py	/^R_EAX = 0$/;"	v
R_EAX	cpu.h	50;"	d
R_EBP	PyQEMU.py	/^R_EBP = 5$/;"	v
R_EBP	cpu.h	55;"	d
R_EBX	PyQEMU.py	/^R_EBX = 3$/;"	v
R_EBX	cpu.h	53;"	d
R_ECX	PyQEMU.py	/^R_ECX = 1$/;"	v
R_ECX	cpu.h	51;"	d
R_EDI	PyQEMU.py	/^R_EDI = 7$/;"	v
R_EDI	cpu.h	57;"	d
R_EDX	PyQEMU.py	/^R_EDX = 2$/;"	v
R_EDX	cpu.h	52;"	d
R_ES	PyQEMU.py	/^R_ES = 0$/;"	v
R_ES	cpu.h	68;"	d
R_ESI	PyQEMU.py	/^R_ESI = 6$/;"	v
R_ESI	cpu.h	56;"	d
R_ESP	PyQEMU.py	/^R_ESP = 4$/;"	v
R_ESP	cpu.h	54;"	d
R_FS	PyQEMU.py	/^R_FS = 4$/;"	v
R_FS	cpu.h	72;"	d
R_GS	PyQEMU.py	/^R_GS = 5$/;"	v
R_GS	cpu.h	73;"	d
R_SS	PyQEMU.py	/^R_SS = 2$/;"	v
R_SS	cpu.h	70;"	d
RaiseFunctionHandler	fhandle.py	/^class RaiseFunctionHandler(FunctionHandler):$/;"	c
ReallocFunctionHandler	fhandle.py	/^class ReallocFunctionHandler(FunctionHandler):$/;"	c
RecvEvent	event.py	/^class RecvEvent(Event):$/;"	c
RecvFunctionHandler	fhandle.py	/^class RecvFunctionHandler(FunctionHandler):$/;"	c
Reg	ops_sse.h	2070;"	d
Reg	ops_sse.h	21;"	d
Reg	ops_sse.h	29;"	d
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(blendvpd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(blendvps, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(movl_mm_T0, SUFFIX), void, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(movq_mm_T0, SUFFIX), void, Reg, i64)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pabsb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pabsd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pabsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(packssdw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(packsswb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(packusdw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(packuswb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pblendvb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pcmpeqq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pcmpgtq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phaddd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phaddsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phaddw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phminposuw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phsubd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phsubsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phsubw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaddubsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaddwd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaxsb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaxsd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaxud, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaxuw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pminsb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pminsd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pminud, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pminuw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxbd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxbq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxbw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxdq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxwd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxwq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxbd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxbq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxbw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxdq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxwd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxwq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmuldq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmulhrsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmulld, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmuludq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psadbw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pshufb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psignb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psignd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psignw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pslld, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pslldq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psllq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psllw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrad, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psraw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrld, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrldq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrlq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrlw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(ptest, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(punpckhqdq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(punpcklqdq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(blendpd, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(blendps, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(dppd, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(dpps, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(maskmov, SUFFIX), void, Reg, Reg, tl)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(mpsadbw, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(palignr, SUFFIX), void, Reg, Reg, s32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pblendw, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pcmpestri, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pcmpestrm, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pcmpistri, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pcmpistrm, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pshufw, SUFFIX), void, Reg, Reg, int)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(roundpd, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(roundps, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(roundsd, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(roundss, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	20;"	d
Reg	ops_sse_header.h	23;"	d
Reg	ops_sse_header.h	340;"	d
RegisteredCallback	PyQEMU.py	/^class RegisteredCallback:$/;"	c
RelocationData	pefile.py	/^class RelocationData(DataContainer):$/;"	c
ResourceDataEntryData	pefile.py	/^class ResourceDataEntryData(DataContainer):$/;"	c
ResourceDirData	pefile.py	/^class ResourceDirData(DataContainer):$/;"	c
ResourceDirEntryData	pefile.py	/^class ResourceDirEntryData(DataContainer):$/;"	c
RetEvent	event.py	/^class RetEvent(Event):$/;"	c
RtlAllocateHeapFunctionHandler	fhandle.py	/^class RtlAllocateHeapFunctionHandler(FunctionHandler):$/;"	c
RtlFreeHeapFunctionHandler	fhandle.py	/^class RtlFreeHeapFunctionHandler(FunctionHandler):$/;"	c
SAL	pyemu/PyCPU.py	/^    def SAL(self, instruction):$/;"	m	class:PyCPU
SAR	pyemu/PyCPU.py	/^    def SAR(self, instruction):$/;"	m	class:PyCPU
SBB	pyemu/PyCPU.py	/^    def SBB(self, instruction):$/;"	m	class:PyCPU
SCAS	pyemu/PyCPU.py	/^    def SCAS(self, instruction):$/;"	m	class:PyCPU
SCASB	pyemu/PyCPU.py	/^    def SCASB(self, instruction):$/;"	m	class:PyCPU
SCASD	pyemu/PyCPU.py	/^    def SCASD(self, instruction):$/;"	m	class:PyCPU
SCASW	pyemu/PyCPU.py	/^    def SCASW(self, instruction):$/;"	m	class:PyCPU
SECTION_CHARACTERISTICS	pefile.py	/^SECTION_CHARACTERISTICS = dict([(e[1], e[0]) for e in$/;"	v
SEGMENT	Structures.py	/^class SEGMENT( StructuredData):$/;"	c
SEG_ADDL	op_helper.c	637;"	d	file:
SETA	pyemu/PyCPU.py	/^    def SETA(self, instruction):$/;"	m	class:PyCPU
SETAE	pyemu/PyCPU.py	/^    def SETAE(self, instruction):$/;"	m	class:PyCPU
SETB	pyemu/PyCPU.py	/^    def SETB(self, instruction):$/;"	m	class:PyCPU
SETBE	pyemu/PyCPU.py	/^    def SETBE(self, instruction):$/;"	m	class:PyCPU
SETC	pyemu/PyCPU.py	/^    def SETC(self, instruction):$/;"	m	class:PyCPU
SETE	pyemu/PyCPU.py	/^    def SETE(self, instruction):$/;"	m	class:PyCPU
SETG	pyemu/PyCPU.py	/^    def SETG(self, instruction):$/;"	m	class:PyCPU
SETGE	pyemu/PyCPU.py	/^    def SETGE(self, instruction):$/;"	m	class:PyCPU
SETL	pyemu/PyCPU.py	/^    def SETL(self, instruction):$/;"	m	class:PyCPU
SETLE	pyemu/PyCPU.py	/^    def SETLE(self, instruction):$/;"	m	class:PyCPU
SETNA	pyemu/PyCPU.py	/^    def SETNA(self, instruction):$/;"	m	class:PyCPU
SETNAE	pyemu/PyCPU.py	/^    def SETNAE(self, instruction):$/;"	m	class:PyCPU
SETNB	pyemu/PyCPU.py	/^    def SETNB(self, instruction):$/;"	m	class:PyCPU
SETNBE	pyemu/PyCPU.py	/^    def SETNBE(self, instruction):$/;"	m	class:PyCPU
SETNC	pyemu/PyCPU.py	/^    def SETNC(self, instruction):$/;"	m	class:PyCPU
SETNE	pyemu/PyCPU.py	/^    def SETNE(self, instruction):$/;"	m	class:PyCPU
SETNG	pyemu/PyCPU.py	/^    def SETNG(self, instruction):$/;"	m	class:PyCPU
SETNGE	pyemu/PyCPU.py	/^    def SETNGE(self, instruction):$/;"	m	class:PyCPU
SETNL	pyemu/PyCPU.py	/^    def SETNL(self, instruction):$/;"	m	class:PyCPU
SETNLE	pyemu/PyCPU.py	/^    def SETNLE(self, instruction):$/;"	m	class:PyCPU
SETNO	pyemu/PyCPU.py	/^    def SETNO(self, instruction):$/;"	m	class:PyCPU
SETNP	pyemu/PyCPU.py	/^    def SETNP(self, instruction):$/;"	m	class:PyCPU
SETNS	pyemu/PyCPU.py	/^    def SETNS(self, instruction):$/;"	m	class:PyCPU
SETNZ	pyemu/PyCPU.py	/^    def SETNZ(self, instruction):$/;"	m	class:PyCPU
SETO	pyemu/PyCPU.py	/^    def SETO(self, instruction):$/;"	m	class:PyCPU
SETP	pyemu/PyCPU.py	/^    def SETP(self, instruction):$/;"	m	class:PyCPU
SETPE	pyemu/PyCPU.py	/^    def SETPE(self, instruction):$/;"	m	class:PyCPU
SETPO	pyemu/PyCPU.py	/^    def SETPO(self, instruction):$/;"	m	class:PyCPU
SETPS	pyemu/PyCPU.py	/^    def SETPS(self, instruction):$/;"	m	class:PyCPU
SETZ	pyemu/PyCPU.py	/^    def SETZ(self, instruction):$/;"	m	class:PyCPU
SET_ESP	op_helper.c	622;"	d	file:
SET_ESP	op_helper.c	632;"	d	file:
SHIFT	helper.h	216;"	d
SHIFT	helper.h	218;"	d
SHIFT	op_helper.c	5019;"	d	file:
SHIFT	op_helper.c	5022;"	d	file:
SHIFT	op_helper.c	5025;"	d	file:
SHIFT	op_helper.c	5028;"	d	file:
SHIFT	op_helper.c	5671;"	d	file:
SHIFT	op_helper.c	5674;"	d	file:
SHIFT	op_helper.c	5677;"	d	file:
SHIFT	op_helper.c	5679;"	d	file:
SHIFT	op_helper.c	5681;"	d	file:
SHIFT	op_helper.c	5683;"	d	file:
SHIFT	op_helper.c	5685;"	d	file:
SHIFT	op_helper.c	5687;"	d	file:
SHIFT	op_helper.c	5691;"	d	file:
SHIFT	op_helper.c	5693;"	d	file:
SHIFT	ops_sse.h	2068;"	d
SHIFT	ops_sse_header.h	339;"	d
SHIFT1_MASK	helper_template.h	23;"	d
SHIFT1_MASK	helper_template.h	25;"	d
SHIFT1_MASK	helper_template.h	329;"	d
SHIFT_MASK	helper_template.h	20;"	d
SHIFT_MASK	helper_template.h	328;"	d
SHL	pyemu/PyCPU.py	/^    def SHL(self, instruction):$/;"	m	class:PyCPU
SHR	ops_sse.h	1433;"	d
SHR	ops_sse.h	1447;"	d
SHR	pyemu/PyCPU.py	/^    def SHR(self, instruction):$/;"	m	class:PyCPU
SIGND	exec.h	159;"	d
SIGND	exec.h	188;"	d
SIGND1	machine.c	97;"	d	file:
SIGN_MASK	helper_template.h	21;"	d
SIGN_MASK	helper_template.h	330;"	d
SMM_REVISION_ID	op_helper.c	1383;"	d	file:
SMM_REVISION_ID	op_helper.c	1385;"	d	file:
SSE41_OP	translate.c	3020;"	d	file:
SSE41_SPECIAL	translate.c	3022;"	d	file:
SSE42_OP	translate.c	3021;"	d	file:
SSE_DUMMY	translate.c	2811;"	d	file:
SSE_FOP	translate.c	2814;"	d	file:
SSE_HELPER_B	ops_sse.h	228;"	d
SSE_HELPER_B	ops_sse_header.h	343;"	d
SSE_HELPER_B	ops_sse_header.h	51;"	d
SSE_HELPER_CMP	ops_sse.h	900;"	d
SSE_HELPER_CMP	ops_sse_header.h	204;"	d
SSE_HELPER_CMP	ops_sse_header.h	348;"	d
SSE_HELPER_F	ops_sse.h	1526;"	d
SSE_HELPER_I	ops_sse.h	1483;"	d
SSE_HELPER_L	ops_sse.h	266;"	d
SSE_HELPER_L	ops_sse_header.h	345;"	d
SSE_HELPER_L	ops_sse_header.h	57;"	d
SSE_HELPER_Q	ops_sse.h	277;"	d
SSE_HELPER_Q	ops_sse_header.h	346;"	d
SSE_HELPER_Q	ops_sse_header.h	60;"	d
SSE_HELPER_S	ops_sse.h	559;"	d
SSE_HELPER_S	ops_sse_header.h	136;"	d
SSE_HELPER_S	ops_sse_header.h	347;"	d
SSE_HELPER_V	ops_sse.h	1456;"	d
SSE_HELPER_W	ops_sse.h	251;"	d
SSE_HELPER_W	ops_sse_header.h	344;"	d
SSE_HELPER_W	ops_sse_header.h	54;"	d
SSE_SPECIAL	translate.c	2810;"	d	file:
SSSE3_OP	translate.c	3019;"	d	file:
ST	exec.h	63;"	d
ST0	exec.h	62;"	d
ST1	exec.h	64;"	d
STOS	pyemu/PyCPU.py	/^    def STOS(self, instruction):$/;"	m	class:PyCPU
STOSB	pyemu/PyCPU.py	/^    def STOSB(self, instruction):$/;"	m	class:PyCPU
STOSD	pyemu/PyCPU.py	/^    def STOSD(self, instruction):$/;"	m	class:PyCPU
STOSW	pyemu/PyCPU.py	/^    def STOSW(self, instruction):$/;"	m	class:PyCPU
STR	Structures.py	/^class STR( object):$/;"	c
SUB	pyemu/PyCPU.py	/^    def SUB(self, instruction):$/;"	m	class:PyCPU
SUBLANG	pefile.py	/^SUBLANG = dict(sublang+[(e[1], e[0]) for e in sublang])$/;"	v
SUBSYSTEM_TYPE	pefile.py	/^SUBSYSTEM_TYPE = dict([(e[1], e[0]) for e in subsystem_types]+subsystem_types)$/;"	v
SUFFIX	helper_template.h	29;"	d
SUFFIX	helper_template.h	334;"	d
SUFFIX	helper_template.h	34;"	d
SUFFIX	helper_template.h	39;"	d
SUFFIX	helper_template.h	44;"	d
SUFFIX	ops_sse.h	2075;"	d
SUFFIX	ops_sse.h	27;"	d
SUFFIX	ops_sse.h	35;"	d
SUFFIX	ops_sse_header.h	21;"	d
SUFFIX	ops_sse_header.h	24;"	d
SUFFIX	ops_sse_header.h	341;"	d
SVM_CR0_SELECTIVE_MASK	svm.h	131;"	d
SVM_EVTINJ_TYPE_EXEPT	svm.h	41;"	d
SVM_EVTINJ_TYPE_INTR	svm.h	39;"	d
SVM_EVTINJ_TYPE_MASK	svm.h	37;"	d
SVM_EVTINJ_TYPE_NMI	svm.h	40;"	d
SVM_EVTINJ_TYPE_SHIFT	svm.h	36;"	d
SVM_EVTINJ_TYPE_SOFT	svm.h	42;"	d
SVM_EVTINJ_VALID	svm.h	44;"	d
SVM_EVTINJ_VALID_ERR	svm.h	45;"	d
SVM_EVTINJ_VEC_MASK	svm.h	34;"	d
SVM_EXITINTINFO_TYPE_EXEPT	svm.h	51;"	d
SVM_EXITINTINFO_TYPE_INTR	svm.h	49;"	d
SVM_EXITINTINFO_TYPE_NMI	svm.h	50;"	d
SVM_EXITINTINFO_TYPE_SOFT	svm.h	52;"	d
SVM_EXITINTINFO_VALID	svm.h	54;"	d
SVM_EXITINTINFO_VALID_ERR	svm.h	55;"	d
SVM_EXITINTINFO_VEC_MASK	svm.h	47;"	d
SVM_EXIT_CLGI	svm.h	119;"	d
SVM_EXIT_CPUID	svm.h	100;"	d
SVM_EXIT_CR0_SEL_WRITE	svm.h	87;"	d
SVM_EXIT_ERR	svm.h	129;"	d
SVM_EXIT_EXCP_BASE	svm.h	81;"	d
SVM_EXIT_FERR_FREEZE	svm.h	112;"	d
SVM_EXIT_GDTR_READ	svm.h	89;"	d
SVM_EXIT_GDTR_WRITE	svm.h	93;"	d
SVM_EXIT_HLT	svm.h	106;"	d
SVM_EXIT_ICEBP	svm.h	122;"	d
SVM_EXIT_IDTR_READ	svm.h	88;"	d
SVM_EXIT_IDTR_WRITE	svm.h	92;"	d
SVM_EXIT_INIT	svm.h	85;"	d
SVM_EXIT_INTR	svm.h	82;"	d
SVM_EXIT_INVD	svm.h	104;"	d
SVM_EXIT_INVLPG	svm.h	107;"	d
SVM_EXIT_INVLPGA	svm.h	108;"	d
SVM_EXIT_IOIO	svm.h	109;"	d
SVM_EXIT_IRET	svm.h	102;"	d
SVM_EXIT_LDTR_READ	svm.h	90;"	d
SVM_EXIT_LDTR_WRITE	svm.h	94;"	d
SVM_EXIT_MONITOR	svm.h	125;"	d
SVM_EXIT_MSR	svm.h	110;"	d
SVM_EXIT_MWAIT	svm.h	126;"	d
SVM_EXIT_NMI	svm.h	83;"	d
SVM_EXIT_NPF	svm.h	127;"	d
SVM_EXIT_PAUSE	svm.h	105;"	d
SVM_EXIT_POPF	svm.h	99;"	d
SVM_EXIT_PUSHF	svm.h	98;"	d
SVM_EXIT_RDPMC	svm.h	97;"	d
SVM_EXIT_RDTSC	svm.h	96;"	d
SVM_EXIT_RDTSCP	svm.h	121;"	d
SVM_EXIT_READ_CR0	svm.h	57;"	d
SVM_EXIT_READ_CR3	svm.h	58;"	d
SVM_EXIT_READ_CR4	svm.h	59;"	d
SVM_EXIT_READ_CR8	svm.h	60;"	d
SVM_EXIT_READ_DR0	svm.h	65;"	d
SVM_EXIT_READ_DR1	svm.h	66;"	d
SVM_EXIT_READ_DR2	svm.h	67;"	d
SVM_EXIT_READ_DR3	svm.h	68;"	d
SVM_EXIT_READ_DR4	svm.h	69;"	d
SVM_EXIT_READ_DR5	svm.h	70;"	d
SVM_EXIT_READ_DR6	svm.h	71;"	d
SVM_EXIT_READ_DR7	svm.h	72;"	d
SVM_EXIT_RSM	svm.h	101;"	d
SVM_EXIT_SHUTDOWN	svm.h	113;"	d
SVM_EXIT_SKINIT	svm.h	120;"	d
SVM_EXIT_SMI	svm.h	84;"	d
SVM_EXIT_STGI	svm.h	118;"	d
SVM_EXIT_SWINT	svm.h	103;"	d
SVM_EXIT_TASK_SWITCH	svm.h	111;"	d
SVM_EXIT_TR_READ	svm.h	91;"	d
SVM_EXIT_TR_WRITE	svm.h	95;"	d
SVM_EXIT_VINTR	svm.h	86;"	d
SVM_EXIT_VMLOAD	svm.h	116;"	d
SVM_EXIT_VMMCALL	svm.h	115;"	d
SVM_EXIT_VMRUN	svm.h	114;"	d
SVM_EXIT_VMSAVE	svm.h	117;"	d
SVM_EXIT_WBINVD	svm.h	123;"	d
SVM_EXIT_WRITE_CR0	svm.h	61;"	d
SVM_EXIT_WRITE_CR3	svm.h	62;"	d
SVM_EXIT_WRITE_CR4	svm.h	63;"	d
SVM_EXIT_WRITE_CR8	svm.h	64;"	d
SVM_EXIT_WRITE_DR0	svm.h	73;"	d
SVM_EXIT_WRITE_DR1	svm.h	74;"	d
SVM_EXIT_WRITE_DR2	svm.h	75;"	d
SVM_EXIT_WRITE_DR3	svm.h	76;"	d
SVM_EXIT_WRITE_DR4	svm.h	77;"	d
SVM_EXIT_WRITE_DR5	svm.h	78;"	d
SVM_EXIT_WRITE_DR6	svm.h	79;"	d
SVM_EXIT_WRITE_DR7	svm.h	80;"	d
SVM_INTERRUPT_SHADOW_MASK	svm.h	21;"	d
SVM_IOIO_ASIZE_MASK	svm.h	32;"	d
SVM_IOIO_ASIZE_SHIFT	svm.h	26;"	d
SVM_IOIO_REP_MASK	svm.h	30;"	d
SVM_IOIO_REP_SHIFT	svm.h	24;"	d
SVM_IOIO_SIZE_MASK	svm.h	31;"	d
SVM_IOIO_SIZE_SHIFT	svm.h	25;"	d
SVM_IOIO_STR_MASK	svm.h	29;"	d
SVM_IOIO_STR_SHIFT	svm.h	23;"	d
SVM_IOIO_TYPE_MASK	svm.h	28;"	d
SWITCH_TSS_CALL	op_helper.c	281;"	d	file:
SWITCH_TSS_IRET	op_helper.c	280;"	d	file:
SWITCH_TSS_JMP	op_helper.c	279;"	d	file:
SectionHeader	Structures.py	/^class SectionHeader( PEHeaderSubstructure):$/;"	c
SectionHeaders	Structures.py	/^class SectionHeaders( list):$/;"	c
SectionStructure	pefile.py	/^class SectionStructure(Structure):$/;"	c
SegmentCache	cpu.h	/^typedef struct SegmentCache {$/;"	s
SegmentCache	cpu.h	/^} SegmentCache;$/;"	t	typeref:struct:SegmentCache
SendEvent	event.py	/^class SendEvent(Event):$/;"	c
SendFunctionHandler	fhandle.py	/^class SendFunctionHandler(FunctionHandler):$/;"	c
SizeOfImage	processinfo.py	/^    SizeOfImage = property( get_sizeofimage)$/;"	v	class:Image
Stack	PyQEMU.py	/^class Stack(list):$/;"	c
StackMemoryTracer	PyQEMU.py	/^class StackMemoryTracer:$/;"	c
StdoutEventLogger	PyQEMU.py	/^class StdoutEventLogger:$/;"	c
StrCatFunctionHandler	fhandle.py	/^class StrCatFunctionHandler(FunctionHandler):$/;"	c
StrCpyFunctionHandler	fhandle.py	/^class StrCpyFunctionHandler(CpyFunctionHandler):$/;"	c
StrDupFunctionHandler	fhandle.py	/^class StrDupFunctionHandler(FunctionHandler):$/;"	c
StrLenFunctionHandler	fhandle.py	/^class StrLenFunctionHandler(FunctionHandler):$/;"	c
StrNCpyFunctionHandler	fhandle.py	/^class StrNCpyFunctionHandler(CpyFunctionHandler):$/;"	c
Struct	test/test.py	/^class Struct:$/;"	c
Structure	pefile.py	/^class Structure:$/;"	c
StructuredData	Structures.py	/^class StructuredData( object):$/;"	c
Structures	PyQEMU.py	/^import Structures$/;"	i
Structures	fhandle.py	/^import Structures$/;"	i
SyscallEvent	event.py	/^class SyscallEvent(Event):$/;"	c
TARGET_HAS_ICE	cpu.h	36;"	d
TARGET_HAS_PRECISE_SMC	cpu.h	34;"	d
TARGET_HAS_SMC	cpu.h	31;"	d
TARGET_LONG_BITS	cpu.h	25;"	d
TARGET_LONG_BITS	cpu.h	27;"	d
TARGET_LONG_BITS	exec.h	24;"	d
TARGET_LONG_BITS	exec.h	26;"	d
TARGET_PAGE_BITS	cpu.h	887;"	d
TARGET_PHYS_ADDR_SPACE_BITS	cpu.h	890;"	d
TARGET_PHYS_ADDR_SPACE_BITS	cpu.h	896;"	d
TARGET_VIRT_ADDR_SPACE_BITS	cpu.h	894;"	d
TARGET_VIRT_ADDR_SPACE_BITS	cpu.h	897;"	d
TCG_EXT2_FEATURES	cpuid.c	249;"	d	file:
TCG_EXT3_FEATURES	cpuid.c	254;"	d	file:
TCG_EXT_FEATURES	cpuid.c	243;"	d	file:
TCG_FEATURES	cpuid.c	233;"	d	file:
TEB	Structures.py	/^class TEB( StructuredData):$/;"	c
TEST	pyemu/PyCPU.py	/^    def TEST(self, instruction):$/;"	m	class:PyCPU
TF_MASK	cpu.h	111;"	d
TF_SHIFT	cpu.h	107;"	d
TLB_CONTROL_DO_NOTHING	svm.h	4;"	d
TLB_CONTROL_FLUSH_ALL_ASID	svm.h	5;"	d
TestPyQEMU_Interface	pyemu/FlxPyEmu.py	/^class TestPyQEMU_Interface:$/;"	c
TestPyQEMU_Interface	pyemu/flxanalyze.py	/^class TestPyQEMU_Interface:$/;"	c
Thread	PyQEMU.py	/^class Thread:$/;"	c
TlsData	pefile.py	/^class TlsData(DataContainer):$/;"	c
TracedProcess	PyQEMU.py	/^class TracedProcess(processinfo.Process):$/;"	c
UNICODE_STRING	Structures.py	/^class UNICODE_STRING( StructuredData):$/;"	c
UNPCK_OP	ops_sse.h	1106;"	d
UNPCK_OP	ops_sse_header.h	231;"	d
UNPCK_OP	ops_sse_header.h	349;"	d
USER_KERNEL_SPLIT	Helpers.py	/^USER_KERNEL_SPLIT = 0x80000000$/;"	v
USE_X86LDOUBLE	cpu.h	499;"	d
UnicodeStringWrapperPostProcessor	pefile.py	/^class UnicodeStringWrapperPostProcessor:$/;"	c
UnknownMemoryTracer	PyQEMU.py	/^class UnknownMemoryTracer:$/;"	c
UntracedProcess	PyQEMU.py	/^class UntracedProcess(processinfo.Process):$/;"	c
VIF_MASK	cpu.h	119;"	d
VIP_MASK	cpu.h	120;"	d
VMSTATE_FP_REGS	machine.c	200;"	d	file:
VMSTATE_FP_REGS	machine.c	294;"	d	file:
VMSTATE_HACK_UINT32	machine.c	331;"	d	file:
VMSTATE_MTRR_VARS	machine.c	78;"	d	file:
VMSTATE_SEGMENT	machine.c	23;"	d	file:
VMSTATE_SEGMENT_ARRAY	machine.c	32;"	d	file:
VMSTATE_XMM_REGS	machine.c	47;"	d	file:
VMSTATE_YMMH_REGS_VARS	machine.c	63;"	d	file:
VM_MASK	cpu.h	117;"	d
VM_SHIFT	cpu.h	109;"	d
VMemBackend	Structures.py	/^class VMemBackend( Backend):$/;"	c
V_IGN_TPR_MASK	svm.h	16;"	d
V_IGN_TPR_SHIFT	svm.h	15;"	d
V_INTR_MASKING_MASK	svm.h	19;"	d
V_INTR_MASKING_SHIFT	svm.h	18;"	d
V_INTR_PRIO_MASK	svm.h	13;"	d
V_INTR_PRIO_SHIFT	svm.h	12;"	d
V_IRQ_MASK	svm.h	10;"	d
V_IRQ_SHIFT	svm.h	9;"	d
V_TPR_MASK	svm.h	7;"	d
VadTree	Structures.py	/^class VadTree( object):$/;"	c
W	ops_sse.h	2072;"	d
W	ops_sse.h	24;"	d
W	ops_sse.h	32;"	d
WRITE	pyemu/PyMemory.py	/^    WRITE = 0x2$/;"	v	class:PyMemoryPage
WSAGetLastErrorFunctionHandler	fhandle.py	/^class WSAGetLastErrorFunctionHandler(FunctionHandler):$/;"	c
WSARecvFunctionHandler	fhandle.py	/^class WSARecvFunctionHandler(FunctionHandler):$/;"	c
WSTR	Structures.py	/^class WSTR( object):$/;"	c
WcsCatFunctionHandler	fhandle.py	/^class WcsCatFunctionHandler(StrCatFunctionHandler):$/;"	c
WcsCpyFunctionHandler	fhandle.py	/^class WcsCpyFunctionHandler(StrCpyFunctionHandler):$/;"	c
WcsLenFunctionHandler	fhandle.py	/^class WcsLenFunctionHandler(FunctionHandler):$/;"	c
WcsNCpyFunctionHandler	fhandle.py	/^class WcsNCpyFunctionHandler(StrNCpyFunctionHandler):$/;"	c
WinAPIFunction	test/windecl.py	/^class WinAPIFunction:$/;"	c
WindowsHeader	test/windecl.py	/^class WindowsHeader:$/;"	c
X86_64_DEF	translate.c	45;"	d	file:
X86_64_DEF	translate.c	55;"	d	file:
X86_64_ONLY	translate.c	44;"	d	file:
X86_64_ONLY	translate.c	54;"	d	file:
X86_DUMP_CCOP	cpu.h	885;"	d
X86_DUMP_FPU	cpu.h	884;"	d
XCHG	pyemu/PyCPU.py	/^    def XCHG(self, instruction):$/;"	m	class:PyCPU
XMM0	ops_sse.h	1453;"	d
XMMReg	cpu.h	/^} XMMReg;$/;"	t	typeref:union:__anon2
XMM_B	cpu.h	533;"	d
XMM_B	cpu.h	545;"	d
XMM_D	cpu.h	538;"	d
XMM_D	cpu.h	550;"	d
XMM_L	cpu.h	535;"	d
XMM_L	cpu.h	547;"	d
XMM_ONLY	ops_sse.h	2069;"	d
XMM_ONLY	ops_sse.h	22;"	d
XMM_ONLY	ops_sse.h	30;"	d
XMM_Q	cpu.h	537;"	d
XMM_Q	cpu.h	549;"	d
XMM_S	cpu.h	536;"	d
XMM_S	cpu.h	548;"	d
XMM_W	cpu.h	534;"	d
XMM_W	cpu.h	546;"	d
XOR	pyemu/PyCPU.py	/^    def XOR(self, instruction):$/;"	m	class:PyCPU
XSAVE_CWD_RDP	kvm.c	509;"	d	file:
XSAVE_CWD_RIP	kvm.c	508;"	d	file:
XSAVE_MXCSR	kvm.c	510;"	d	file:
XSAVE_ST_SPACE	kvm.c	511;"	d	file:
XSAVE_XMM_SPACE	kvm.c	512;"	d	file:
XSAVE_XSTATE_BV	kvm.c	513;"	d	file:
XSAVE_YMMH_SPACE	kvm.c	514;"	d	file:
_FLX_BREAKPOINT_H	flx_breakpoint.h	2;"	d
_FLX_INSTRUMENT_	flx_instrument.h	2;"	d
__EXCEPTION_RECORD	pyemu/PyOS.py	/^                class __EXCEPTION_RECORD:$/;"	c	class:PyWindows.__THREAD.__TEB.__TIB
__IMAGE_BASE_RELOCATION_format__	pefile.py	/^    __IMAGE_BASE_RELOCATION_format__ = ('IMAGE_BASE_RELOCATION',$/;"	v	class:PE
__IMAGE_BOUND_FORWARDER_REF_format__	pefile.py	/^    __IMAGE_BOUND_FORWARDER_REF_format__ = ('IMAGE_BOUND_FORWARDER_REF',$/;"	v	class:PE
__IMAGE_BOUND_IMPORT_DESCRIPTOR_format__	pefile.py	/^    __IMAGE_BOUND_IMPORT_DESCRIPTOR_format__ = ('IMAGE_BOUND_IMPORT_DESCRIPTOR',$/;"	v	class:PE
__IMAGE_DATA_DIRECTORY_format__	pefile.py	/^    __IMAGE_DATA_DIRECTORY_format__ = ('IMAGE_DATA_DIRECTORY',$/;"	v	class:PE
__IMAGE_DEBUG_DIRECTORY_format__	pefile.py	/^    __IMAGE_DEBUG_DIRECTORY_format__ = ('IMAGE_DEBUG_DIRECTORY',$/;"	v	class:PE
__IMAGE_DELAY_IMPORT_DESCRIPTOR_format__	pefile.py	/^    __IMAGE_DELAY_IMPORT_DESCRIPTOR_format__ = ('IMAGE_DELAY_IMPORT_DESCRIPTOR',$/;"	v	class:PE
__IMAGE_DOS_HEADER_format__	pefile.py	/^    __IMAGE_DOS_HEADER_format__ = ('IMAGE_DOS_HEADER',$/;"	v	class:PE
__IMAGE_EXPORT_DIRECTORY_format__	pefile.py	/^    __IMAGE_EXPORT_DIRECTORY_format__ =  ('IMAGE_EXPORT_DIRECTORY',$/;"	v	class:PE
__IMAGE_FILE_HEADER_format__	pefile.py	/^    __IMAGE_FILE_HEADER_format__ = ('IMAGE_FILE_HEADER',$/;"	v	class:PE
__IMAGE_IMPORT_DESCRIPTOR_format__	pefile.py	/^    __IMAGE_IMPORT_DESCRIPTOR_format__ =  ('IMAGE_IMPORT_DESCRIPTOR',$/;"	v	class:PE
__IMAGE_LOAD_CONFIG_DIRECTORY64_format__	pefile.py	/^    __IMAGE_LOAD_CONFIG_DIRECTORY64_format__ = ('IMAGE_LOAD_CONFIG_DIRECTORY',$/;"	v	class:PE
__IMAGE_LOAD_CONFIG_DIRECTORY_format__	pefile.py	/^    __IMAGE_LOAD_CONFIG_DIRECTORY_format__ = ('IMAGE_LOAD_CONFIG_DIRECTORY',$/;"	v	class:PE
__IMAGE_NT_HEADERS_format__	pefile.py	/^    __IMAGE_NT_HEADERS_format__ = ('IMAGE_NT_HEADERS', ('I,Signature',))$/;"	v	class:PE
__IMAGE_OPTIONAL_HEADER64_format__	pefile.py	/^    __IMAGE_OPTIONAL_HEADER64_format__ = ('IMAGE_OPTIONAL_HEADER64',$/;"	v	class:PE
__IMAGE_OPTIONAL_HEADER_format__	pefile.py	/^    __IMAGE_OPTIONAL_HEADER_format__ = ('IMAGE_OPTIONAL_HEADER',$/;"	v	class:PE
__IMAGE_RESOURCE_DATA_ENTRY_format__	pefile.py	/^    __IMAGE_RESOURCE_DATA_ENTRY_format__ = ('IMAGE_RESOURCE_DATA_ENTRY',$/;"	v	class:PE
__IMAGE_RESOURCE_DIRECTORY_ENTRY_format__	pefile.py	/^    __IMAGE_RESOURCE_DIRECTORY_ENTRY_format__ = ('IMAGE_RESOURCE_DIRECTORY_ENTRY',$/;"	v	class:PE
__IMAGE_RESOURCE_DIRECTORY_format__	pefile.py	/^    __IMAGE_RESOURCE_DIRECTORY_format__ = ('IMAGE_RESOURCE_DIRECTORY',$/;"	v	class:PE
__IMAGE_SECTION_HEADER_format__	pefile.py	/^    __IMAGE_SECTION_HEADER_format__ = ('IMAGE_SECTION_HEADER',$/;"	v	class:PE
__IMAGE_THUNK_DATA64_format__	pefile.py	/^    __IMAGE_THUNK_DATA64_format__ = ('IMAGE_THUNK_DATA',$/;"	v	class:PE
__IMAGE_THUNK_DATA_format__	pefile.py	/^    __IMAGE_THUNK_DATA_format__ = ('IMAGE_THUNK_DATA',$/;"	v	class:PE
__IMAGE_TLS_DIRECTORY64_format__	pefile.py	/^    __IMAGE_TLS_DIRECTORY64_format__ = ('IMAGE_TLS_DIRECTORY',$/;"	v	class:PE
__IMAGE_TLS_DIRECTORY_format__	pefile.py	/^    __IMAGE_TLS_DIRECTORY_format__ = ('IMAGE_TLS_DIRECTORY',$/;"	v	class:PE
__LDR	pyemu/PyOS.py	/^        class __LDR:$/;"	c	class:PyWindows.__PEB
__LDT	pyemu/PyOS.py	/^        class __LDT:$/;"	c	class:PyWindows.__THREAD
__LDT_ENTRY	pyemu/PyOS.py	/^            class __LDT_ENTRY:$/;"	c	class:PyWindows.__THREAD.__LDT
__PEB	pyemu/PyOS.py	/^    class __PEB:$/;"	c	class:PyWindows
__SVM_H	svm.h	2;"	d
__StringFileInfo_format__	pefile.py	/^    __StringFileInfo_format__ = ( 'StringFileInfo',$/;"	v	class:PE
__StringTable_format__	pefile.py	/^    __StringTable_format__ = ( 'StringTable',$/;"	v	class:PE
__String_format__	pefile.py	/^    __String_format__ = ( 'String',$/;"	v	class:PE
__TEB	pyemu/PyOS.py	/^        class __TEB:$/;"	c	class:PyWindows.__THREAD
__THREAD	pyemu/PyOS.py	/^    class __THREAD:$/;"	c	class:PyWindows
__TIB	pyemu/PyOS.py	/^            class __TIB:$/;"	c	class:PyWindows.__THREAD.__TEB
__VS_FIXEDFILEINFO_format__	pefile.py	/^    __VS_FIXEDFILEINFO_format__ = ( 'VS_FIXEDFILEINFO',$/;"	v	class:PE
__VS_VERSIONINFO_format__	pefile.py	/^    __VS_VERSIONINFO_format__ = ( 'VS_VERSIONINFO',$/;"	v	class:PE
__Var_format__	pefile.py	/^    __Var_format__ = ( 'Var', ('H,Length', 'H,ValueLength', 'H,Type' ))$/;"	v	class:PE
__author__	pefile.py	/^__author__ = 'Ero Carrera'$/;"	v
__call__	PyQEMU.py	/^	def __call__(self, *args):$/;"	m	class:RegisteredCallback	file:
__contact__	pefile.py	/^__contact__ = 'ero@dkbza.org'$/;"	v
__deepcopy__	PyQEMU.py	/^	def __deepcopy__(self, memo):$/;"	m	class:CalledFunction	file:
__deepcopy__	PyQEMU.py	/^	def __deepcopy__(self, memo):$/;"	m	class:Stack	file:
__deepcopy__	PyQEMU.py	/^	def __deepcopy__(self, memo):$/;"	m	class:StackMemoryTracer	file:
__del__	PyQEMU.py	/^	def __del__(self):$/;"	m	class:Breakpoint	file:
__del__	PyQEMU.py	/^	def __del__(self):$/;"	m	class:TracedProcess	file:
__eq__	PyQEMU.py	/^	def __eq__(self, other):$/;"	m	class:Buffer	file:
__eq__	PyQEMU.py	/^	def __eq__(self, other):$/;"	m	class:CalledFunction	file:
__eq__	dllhandling.py	/^	def __eq__(self, other):$/;"	m	class:DLLFile	file:
__ge__	PyQEMU.py	/^	def __ge__(self, other):$/;"	m	class:Buffer	file:
__ge__	dllhandling.py	/^	def __ge__(self, other):$/;"	m	class:DLLFile	file:
__get_format__	pefile.py	/^    def __get_format__(self):$/;"	m	class:Structure	file:
__get_pascal_16_length	pefile.py	/^    def __get_pascal_16_length(self):$/;"	m	class:UnicodeStringWrapperPostProcessor	file:
__get_word_value_at_rva	pefile.py	/^    def __get_word_value_at_rva(self, rva):$/;"	m	class:UnicodeStringWrapperPostProcessor	file:
__getitem__	Structures.py	/^    def __getitem__( self, index):$/;"	m	class:PEList	file:
__getitem__	analyze/graphauswertung.py	/^	def __getitem__(self, key):$/;"	m	class:FlxFunctionAnalysis	file:
__gt__	PyQEMU.py	/^	def __gt__(self, other):$/;"	m	class:Buffer	file:
__gt__	dllhandling.py	/^	def __gt__(self, other):$/;"	m	class:DLLFile	file:
__hash__	PyQEMU.py	/^	def __hash__(self):$/;"	m	class:CalledFunction	file:
__init__	Helpers.py	/^    def __init__( self, value):$/;"	m	class:PageFaultException
__init__	PyQEMU.py	/^	def __init__(self, *args):$/;"	m	class:Stack
__init__	PyQEMU.py	/^	def __init__(self, address, callback):$/;"	m	class:Breakpoint
__init__	PyQEMU.py	/^	def __init__(self, callhandler = []):$/;"	m	class:TracedProcess
__init__	PyQEMU.py	/^	def __init__(self, callhandler):$/;"	m	class:UntracedProcess
__init__	PyQEMU.py	/^	def __init__(self, directory, dumpfile):$/;"	m	class:EventLogger
__init__	PyQEMU.py	/^	def __init__(self, dumpfile):$/;"	m	class:StdoutEventLogger
__init__	PyQEMU.py	/^	def __init__(self, fromaddr, toaddr, nextaddr, process):$/;"	m	class:CalledFunction
__init__	PyQEMU.py	/^	def __init__(self, func):$/;"	m	class:RegisteredCallback
__init__	PyQEMU.py	/^	def __init__(self, process):$/;"	m	class:DataMemoryTracer
__init__	PyQEMU.py	/^	def __init__(self, process):$/;"	m	class:HeapMemoryTracer
__init__	PyQEMU.py	/^	def __init__(self, process):$/;"	m	class:PyQemuEmulationInterface
__init__	PyQEMU.py	/^	def __init__(self, process):$/;"	m	class:StackMemoryTracer
__init__	PyQEMU.py	/^	def __init__(self, process):$/;"	m	class:UnknownMemoryTracer
__init__	PyQEMU.py	/^	def __init__(self, process, heap = None, stack = None, data = None, unknown = None):$/;"	m	class:MemoryManager
__init__	PyQEMU.py	/^	def __init__(self, process, heap = None, stack = None, data = None, unknown = None, callstack = None):$/;"	m	class:Thread
__init__	PyQEMU.py	/^	def __init__(self, startaddr, size, origin = None, segment = None):$/;"	m	class:Buffer
__init__	Structures.py	/^    def __init__( self):$/;"	m	class:Backend
__init__	Structures.py	/^    def __init__( self, backend, name, is_image = False):$/;"	m	class:PE
__init__	Structures.py	/^    def __init__( self, backend, offset):$/;"	m	class:LIST_ENTRY
__init__	Structures.py	/^    def __init__( self, backend, offset):$/;"	m	class:PCONTROL_AREA
__init__	Structures.py	/^    def __init__( self, backend, offset):$/;"	m	class:PFILE_OBJECT
__init__	Structures.py	/^    def __init__( self, backend, offset):$/;"	m	class:PMMVAD
__init__	Structures.py	/^    def __init__( self, backend, offset):$/;"	m	class:PSEGMENT
__init__	Structures.py	/^    def __init__( self, backend, offset):$/;"	m	class:Pointer
__init__	Structures.py	/^    def __init__( self, backend, offset):$/;"	m	class:STR
__init__	Structures.py	/^    def __init__( self, backend, offset):$/;"	m	class:StructuredData
__init__	Structures.py	/^    def __init__( self, backend, offset):$/;"	m	class:WSTR
__init__	Structures.py	/^    def __init__( self, base = 0, limit = 0x100000000):$/;"	m	class:VMemBackend
__init__	Structures.py	/^    def __init__( self, buf, base = 0):$/;"	m	class:CopyingStringBackend
__init__	Structures.py	/^    def __init__( self, obj, base = 0, membername = "buf"):$/;"	m	class:ObjectBackend
__init__	Structures.py	/^    def __init__( self, pe_obj):$/;"	m	class:Exports
__init__	Structures.py	/^    def __init__( self, pe_obj):$/;"	m	class:Imports
__init__	Structures.py	/^    def __init__( self, pe_obj):$/;"	m	class:OptionalHeaderDataDirectories
__init__	Structures.py	/^    def __init__( self, pe_obj):$/;"	m	class:SectionHeaders
__init__	Structures.py	/^    def __init__( self, pe_obj, offset):$/;"	m	class:ImportLookupTableEntry
__init__	Structures.py	/^    def __init__( self, pe_obj, offset):$/;"	m	class:OptionalHeaderWindowsSpecificFields
__init__	Structures.py	/^    def __init__( self, pe_obj, offset):$/;"	m	class:PEHeaderSubstructure
__init__	Structures.py	/^    def __init__( self, pe_obj, offset, format = None, len = None):$/;"	m	class:PEList
__init__	Structures.py	/^    def __init__( self, process):$/;"	m	class:VadTree
__init__	Structures.py	/^    def __init__(self, value):$/;"	m	class:PEFileFormatException
__init__	Structures.py	/^   def __init__( self, pe_obj, offset):$/;"	m	class:OptionalHeaderStandardFields
__init__	analyze/analyze.py	/^	def __init__(self, filename):$/;"	m	class:PyQemuDumpAnalyzer
__init__	analyze/analyze.py	/^	def __init__(self, filename, graphfile):$/;"	m	class:CallGraphBuilder
__init__	analyze/callgraph.py	/^	def __init__(self, dumpfile):$/;"	m	class:CallGraphAnalyzer
__init__	analyze/graphauswertung.py	/^	def __init__(self):$/;"	m	class:FlxLogAnalyzer
__init__	analyze/graphauswertung.py	/^	def __init__(self, graph = None):$/;"	m	class:MyFasterGraph
__init__	analyze/graphauswertung.py	/^	def __init__(self, graph):$/;"	m	class:GraphAnalyzer
__init__	analyze/graphauswertung.py	/^	def __init__(self, name):$/;"	m	class:FlxFunctionAnalysis
__init__	dllhandling.py	/^	def __init__(self, dlldir):$/;"	m	class:DLLHandler
__init__	dllhandling.py	/^	def __init__(self, filename, imagebase):$/;"	m	class:DLLFile
__init__	event.py	/^	def __init__(self, buffer):$/;"	m	class:AllocateEvent
__init__	event.py	/^	def __init__(self, buffer):$/;"	m	class:DeallocateEvent
__init__	event.py	/^	def __init__(self, buffer, addr, requested_len, sent_len):$/;"	m	class:SendEvent
__init__	event.py	/^	def __init__(self, buffer, startptr, bytes_received):$/;"	m	class:RecvEvent
__init__	event.py	/^	def __init__(self, dst_buffer, src_buffer, len, dst_addr = 0, src_addr = 0):$/;"	m	class:CopyEvent
__init__	event.py	/^	def __init__(self, function):$/;"	m	class:LateRetEvent
__init__	event.py	/^	def __init__(self, function):$/;"	m	class:RetEvent
__init__	event.py	/^	def __init__(self, function, fromfunction = None):$/;"	m	class:CallEvent
__init__	event.py	/^	def __init__(self, syscall):$/;"	m	class:SyscallEvent
__init__	fhandle.py	/^	def __init__(self, process):$/;"	m	class:FunctionHandler
__init__	flxstats.py	/^	def __init__(self, logfile, imagename):$/;"	m	class:FlxLogParser
__init__	flxstats.py	/^	def __init__(self, name):$/;"	m	class:Function
__init__	pefile.py	/^    def __init__(self):$/;"	m	class:Dump
__init__	pefile.py	/^    def __init__(self, **args):$/;"	m	class:DataContainer
__init__	pefile.py	/^    def __init__(self, format, name=None, file_offset=None):$/;"	m	class:Structure
__init__	pefile.py	/^    def __init__(self, name=None, data=None, fast_load=None):$/;"	m	class:PE
__init__	pefile.py	/^    def __init__(self, pe, rva_ptr):$/;"	m	class:UnicodeStringWrapperPostProcessor
__init__	pefile.py	/^    def __init__(self, value):$/;"	m	class:PEFormatError
__init__	processinfo.py	/^    def __init__( self):$/;"	m	class:Process
__init__	processinfo.py	/^    def __init__( self, ldr_data_table_entry, process):$/;"	m	class:Image
__init__	pyemu/FlxPyEmu.py	/^	def __init__(self):$/;"	m	class:DataflowRecorder
__init__	pyemu/FlxPyEmu.py	/^	def __init__(self):$/;"	m	class:ExecutionError
__init__	pyemu/FlxPyEmu.py	/^	def __init__(self):$/;"	m	class:FlowGraph
__init__	pyemu/FlxPyEmu.py	/^	def __init__(self, qemu_interface, flow_rec, debug_level = 0):$/;"	m	class:FunctionEmulator
__init__	pyemu/PyCPU.py	/^    def __init__(self, emu):$/;"	m	class:PyCPU
__init__	pyemu/PyContext.py	/^    def __init__(self):$/;"	m	class:PyContext
__init__	pyemu/PyEmu.py	/^    def __init__(self):$/;"	m	class:PyEmu
__init__	pyemu/PyEmu.py	/^    def __init__(self, dbg):$/;"	m	class:PyDbgPyEmu
__init__	pyemu/PyEmu.py	/^    def __init__(self, stack_base=0x0095f000, stack_size=0x1000, heap_base=0x000a0000, heap_size=0x2000, frame_pointer=True):$/;"	m	class:IDAPyEmu
__init__	pyemu/PyEmu.py	/^    def __init__(self, stack_base=0x0095f000, stack_size=0x1000, heap_base=0x000a0000, heap_size=0x2000, frame_pointer=True, membackend = None):$/;"	m	class:PEPyEmu
__init__	pyemu/PyFlags.py	/^    def __init__(self, mnemonic, op1, op2, result, size):$/;"	m	class:PyFlags
__init__	pyemu/PyInstruction.py	/^    def __init__(self, instruction):$/;"	m	class:PyInstruction
__init__	pyemu/PyInstruction.py	/^    def __init__(self, operand):$/;"	m	class:PyOperand
__init__	pyemu/PyMemory.py	/^    def __init__(self, address, data="", permissions=0x0):$/;"	m	class:PyMemoryPage
__init__	pyemu/PyMemory.py	/^    def __init__(self, emu):$/;"	m	class:IDAMemory
__init__	pyemu/PyMemory.py	/^    def __init__(self, emu, backend):$/;"	m	class:PEMemory
__init__	pyemu/PyMemory.py	/^    def __init__(self, emu, dbg):$/;"	m	class:PyDbgMemory
__init__	pyemu/PyMemory.py	/^    def __init__(self, emu, membackend):$/;"	m	class:PyMemory
__init__	pyemu/PyOS.py	/^                    def __init__(self):$/;"	m	class:PyWindows.__THREAD.__TEB.__TIB.__EXCEPTION_RECORD
__init__	pyemu/PyOS.py	/^                def __init__(self):$/;"	m	class:PyWindows.__THREAD.__TEB.__TIB
__init__	pyemu/PyOS.py	/^                def __init__(self, selector, base, limit):$/;"	m	class:PyWindows.__THREAD.__LDT.__LDT_ENTRY
__init__	pyemu/PyOS.py	/^            def __init__(self):$/;"	m	class:PyWindows.__PEB.__LDR
__init__	pyemu/PyOS.py	/^            def __init__(self):$/;"	m	class:PyWindows.__THREAD.__LDT
__init__	pyemu/PyOS.py	/^            def __init__(self):$/;"	m	class:PyWindows.__THREAD.__TEB
__init__	pyemu/PyOS.py	/^        def __init__(self):$/;"	m	class:PyWindows.__PEB
__init__	pyemu/PyOS.py	/^        def __init__(self):$/;"	m	class:PyWindows.__THREAD
__init__	pyemu/PyOS.py	/^    def __init__(self):$/;"	m	class:PyLinux
__init__	pyemu/PyOS.py	/^    def __init__(self):$/;"	m	class:PyWindows
__init__	pyemu/flxanalyze.py	/^	def __init__(self):$/;"	m	class:DataflowRecorder
__init__	pyemu/flxanalyze.py	/^	def __init__(self):$/;"	m	class:ExecutionError
__init__	pyemu/flxanalyze.py	/^	def __init__(self, qemu_interface, flow_rec):$/;"	m	class:FunctionEmulator
__init__	test/memobj.py	/^	def __init__(self, declaration, address, conditions = None):$/;"	m	class:Argument
__init__	test/test.py	/^	def __init__(self, members):$/;"	m	class:Struct
__init__	test/test.py	/^	def __init__(self, obj):$/;"	m	class:Pointer
__init__	test/windecl.py	/^	def __init__(self, dllname, fname, *arguments):$/;"	m	class:WinAPIFunction
__init__	test/windecl.py	/^	def __init__(self, headerfiles = [], define_symbols = None, undefine_symbols = None, header_paths = [], namespace = "", gccxml_version = 'v09'):$/;"	m	class:WindowsHeader
__int__	PyQEMU.py	/^	def __int__(self):$/;"	m	class:Buffer	file:
__int__	dllhandling.py	/^	def __int__(self):$/;"	m	class:DLLFile	file:
__le__	PyQEMU.py	/^	def __le__(self, other):$/;"	m	class:Buffer	file:
__le__	dllhandling.py	/^	def __le__(self, other):$/;"	m	class:DLLFile	file:
__len__	PyQEMU.py	/^	def __len__(self):$/;"	m	class:Buffer	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:CopyingStringBackend	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:GenericStruct	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:LIST_ENTRY	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:ObjectBackend	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:OptionalHeaderDataDirectories	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:PE	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:PEList	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:STR	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:StructuredData	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:VMemBackend	file:
__len__	Structures.py	/^    def __len__( self):$/;"	m	class:WSTR	file:
__len__	Structures.py	/^    def __len__(self):$/;"	m	class:Pointer	file:
__len__	dllhandling.py	/^	def __len__(self):$/;"	m	class:DLLFile	file:
__lt__	PyQEMU.py	/^	def __lt__(self, other):$/;"	m	class:Buffer	file:
__lt__	dllhandling.py	/^	def __lt__(self, other):$/;"	m	class:DLLFile	file:
__ne__	PyQEMU.py	/^	def __ne__(self, other):$/;"	m	class:Buffer	file:
__ne__	PyQEMU.py	/^	def __ne__(self, other):$/;"	m	class:CalledFunction	file:
__ne__	dllhandling.py	/^	def __ne__(self, other):$/;"	m	class:DLLFile	file:
__pack__	pefile.py	/^    def __pack__(self):$/;"	m	class:Structure	file:
__parse__	pefile.py	/^    def __parse__(self, fname, data, fast_load):$/;"	m	class:PE	file:
__repr__	pefile.py	/^    def __repr__(self):$/;"	m	class:Structure	file:
__revision__	pefile.py	/^__revision__ = "$LastChangedRevision: 63 $"$/;"	v
__set_format__	pefile.py	/^    def __set_format__(self, format):$/;"	m	class:Structure	file:
__setitem__	Structures.py	/^    def __setitem__( self, index, value):$/;"	m	class:PEList	file:
__str__	Helpers.py	/^    def __str__( self):$/;"	m	class:PageFaultException	file:
__str__	PyQEMU.py	/^	def __str__(self):$/;"	m	class:Buffer	file:
__str__	PyQEMU.py	/^	def __str__(self):$/;"	m	class:CalledFunction	file:
__str__	PyQEMU.py	/^	def __str__(self):$/;"	m	class:Stack	file:
__str__	Structures.py	/^    def __str__( self):$/;"	m	class:CopyingStringBackend	file:
__str__	Structures.py	/^    def __str__( self):$/;"	m	class:ObjectBackend	file:
__str__	Structures.py	/^    def __str__( self):$/;"	m	class:Pointer	file:
__str__	Structures.py	/^    def __str__( self):$/;"	m	class:STR	file:
__str__	Structures.py	/^    def __str__( self):$/;"	m	class:StructuredData	file:
__str__	Structures.py	/^    def __str__( self):$/;"	m	class:UNICODE_STRING	file:
__str__	Structures.py	/^    def __str__( self):$/;"	m	class:WSTR	file:
__str__	Structures.py	/^    def __str__(self):$/;"	m	class:PEFileFormatException	file:
__str__	analyze/graphauswertung.py	/^	def __str__(self):$/;"	m	class:MyFasterGraph	file:
__str__	dllhandling.py	/^	def __str__(self):$/;"	m	class:DLLFile	file:
__str__	event.py	/^	def __str__(self):$/;"	m	class:AllocateEvent	file:
__str__	event.py	/^	def __str__(self):$/;"	m	class:CallEvent	file:
__str__	event.py	/^	def __str__(self):$/;"	m	class:CopyEvent	file:
__str__	event.py	/^	def __str__(self):$/;"	m	class:DeallocateEvent	file:
__str__	event.py	/^	def __str__(self):$/;"	m	class:LateRetEvent	file:
__str__	event.py	/^	def __str__(self):$/;"	m	class:RecvEvent	file:
__str__	event.py	/^	def __str__(self):$/;"	m	class:RetEvent	file:
__str__	event.py	/^	def __str__(self):$/;"	m	class:SendEvent	file:
__str__	event.py	/^	def __str__(self):$/;"	m	class:SyscallEvent	file:
__str__	pefile.py	/^    def __str__(self):$/;"	m	class:PE	file:
__str__	pefile.py	/^    def __str__(self):$/;"	m	class:PEFormatError	file:
__str__	pefile.py	/^    def __str__(self):$/;"	m	class:Structure	file:
__str__	pefile.py	/^    def __str__(self):$/;"	m	class:UnicodeStringWrapperPostProcessor	file:
__str__	test/test.py	/^	def __str__(self):$/;"	m	class:Pointer	file:
__str__	test/test.py	/^	def __str__(self):$/;"	m	class:Struct	file:
__unpack__	pefile.py	/^    def __unpack__(self, data):$/;"	m	class:Structure	file:
__unpack_data__	pefile.py	/^    def __unpack_data__(self, format, data, file_offset):$/;"	m	class:PE	file:
__version__	pefile.py	/^__version__ = '1.2.10-%d' % int( __revision__[21:-2] )$/;"	v
_b	cpu.h	/^    uint8_t _b[16];$/;"	m	union:__anon2
_b	cpu.h	/^    uint8_t _b[8];$/;"	m	union:__anon3
_buildObjTree	test/memobj.py	/^	def _buildObjTree(self):$/;"	m	class:Argument
_d	cpu.h	/^    float64 _d[2];$/;"	m	union:__anon2
_deleteNodesNoEdges	analyze/graphauswertung.py	/^	def _deleteNodesNoEdges(self):$/;"	m	class:GraphAnalyzer
_emulateFilenameNoCase	dllhandling.py	/^	def _emulateFilenameNoCase(self, filename):$/;"	m	class:DLLHandler
_getNamespace	test/windecl.py	/^	def _getNamespace(self, namespace):$/;"	m	class:WindowsHeader
_handle_call_filter	PyQEMU.py	/^	def _handle_call_filter(self, fromaddr, toaddr, nextaddr):$/;"	m	class:TracedProcess
_handle_interesting_call	PyQEMU.py	/^	def _handle_interesting_call(self, fromaddr, toaddr, nextaddr, iscall):$/;"	m	class:TracedProcess
_instrument_data	helper.c	/^typedef struct _instrument_data {$/;"	s	file:
_is_jmp	PyQEMU.py	/^	def _is_jmp(self, fromaddr, toaddr, nextaddr):$/;"	m	class:TracedProcess
_is_jmp_pad	PyQEMU.py	/^	def _is_jmp_pad(self, toaddr):$/;"	m	class:TracedProcess
_l	cpu.h	/^    uint32_t _l[2];$/;"	m	union:__anon3
_l	cpu.h	/^    uint32_t _l[4];$/;"	m	union:__anon2
_q	cpu.h	/^    uint64_t _q[2];$/;"	m	union:__anon2
_s	cpu.h	/^    float32 _s[2];$/;"	m	union:__anon3
_s	cpu.h	/^    float32 _s[4];$/;"	m	union:__anon2
_w	cpu.h	/^    uint16_t _w[4];$/;"	m	union:__anon3
_w	cpu.h	/^    uint16_t _w[8];$/;"	m	union:__anon2
a	test/bla.h	/^	char a;$/;"	m	struct:aaa
a	test/bla.h	/^	char a;$/;"	m	struct:arghfoo
a20_mask	cpu.h	/^    int32_t a20_mask;$/;"	m	struct:CPUX86State
aaa	test/bla.h	/^struct aaa {$/;"	s
abs1	ops_sse.h	/^static inline int abs1(int a)$/;"	f
add	pefile.py	/^    def add(self, txt, indent=0):$/;"	m	class:Dump
add128	op_helper.c	/^static void add128(uint64_t *plow, uint64_t *phigh, uint64_t a, uint64_t b)$/;"	f	file:
addBreakpoint	PyQEMU.py	/^	def addBreakpoint(self, addr, callback):$/;"	m	class:TracedProcess
addPendingReturn	PyQEMU.py	/^	def addPendingReturn(self, function):$/;"	m	class:TracedProcess
addPendingReturn	fhandle.py	/^	def addPendingReturn(self, function):$/;"	m	class:FunctionHandler
addReturnCallback	PyQEMU.py	/^	def addReturnCallback(self, callback):$/;"	m	class:CalledFunction
add_edge	analyze/graphauswertung.py	/^	def add_edge(self, src, dst):$/;"	m	class:MyFasterGraph
add_fake_library	pyemu/PyOS.py	/^    def add_fake_library(self, function, address):$/;"	m	class:PyWindows
add_flagname_to_bitmaps	cpuid.c	/^static void add_flagname_to_bitmaps(const char *flagname, uint32_t *features,$/;"	f	file:
add_header	pefile.py	/^    def add_header(self, txt):$/;"	m	class:Dump
add_library	pyemu/PyOS.py	/^    def add_library(self, dll, function):$/;"	m	class:PyWindows
add_line	pefile.py	/^    def add_line(self, txt, indent=0):$/;"	m	class:Dump
add_lines	pefile.py	/^    def add_lines(self, txt, indent=0):$/;"	m	class:Dump
add_newline	pefile.py	/^    def add_newline(self):$/;"	m	class:Dump
add_node	analyze/graphauswertung.py	/^	def add_node(self, node):$/;"	m	class:MyFasterGraph
add_thread	pyemu/PyOS.py	/^    def add_thread(self):$/;"	m	class:PyWindows
addr	flx_breakpoint.h	/^	uint32_t addr;$/;"	m	struct:__anon12
addr	kvm.c	/^    target_ulong addr;$/;"	m	struct:__anon15	file:
addrInExe	PyQEMU.py	/^	def addrInExe(self, addr):$/;"	m	class:TracedProcess
address_so	pyemu/PyInstruction.py	/^    def address_so(self):$/;"	m	class:PyInstruction
addseg	translate.c	/^    int addseg; \/* non zero if either DS\/ES\/SS have a non zero base *\/$/;"	m	struct:DisasContext	file:
aflag	translate.c	/^    int aflag, dflag;$/;"	m	struct:DisasContext	file:
all_exports	Structures.py	/^    def all_exports(self):$/;"	m	class:Exports
all_zero	Structures.py	/^    def all_zero( self):$/;"	m	class:StructuredData
all_zeroes	pefile.py	/^    def all_zeroes(self):$/;"	m	class:Structure
allocate	PyQEMU.py	/^	def allocate(self, address):$/;"	m	class:DataMemoryTracer
allocate	PyQEMU.py	/^	def allocate(self, address):$/;"	m	class:UnknownMemoryTracer
allocate	PyQEMU.py	/^	def allocate(self, address, size):$/;"	m	class:HeapMemoryTracer
allocate	pyemu/PyMemory.py	/^    def allocate(self, size):$/;"	m	class:PEMemory
allocate_page	pyemu/PyMemory.py	/^    def allocate_page(self, page):$/;"	m	class:IDAMemory
allocate_page	pyemu/PyMemory.py	/^    def allocate_page(self, page):$/;"	m	class:PEMemory
allocate_page	pyemu/PyMemory.py	/^    def allocate_page(self, page):$/;"	m	class:PyDbgMemory
allocated	PyQEMU.py	/^	def allocated(self, address):$/;"	m	class:DataMemoryTracer
allocated	PyQEMU.py	/^	def allocated(self, address):$/;"	m	class:HeapMemoryTracer
allocated	PyQEMU.py	/^	def allocated(self, address):$/;"	m	class:StackMemoryTracer
allocated	PyQEMU.py	/^	def allocated(self, address):$/;"	m	class:UnknownMemoryTracer
altcmp	cpuid.c	/^static int altcmp(const char *s, const char *e, const char *altstr)$/;"	f	file:
analyze	analyze/graphauswertung.py	/^def analyze(directory):$/;"	f
analyzeWriteStats	analyze/graphauswertung.py	/^	def analyzeWriteStats(self, stats):$/;"	m	class:FlxFunctionAnalysis
analyzer	analyze/analyze.py	/^	analyzer = CallGraphBuilder(sys.argv[1], sys.argv[2])$/;"	v	class:CallGraphBuilder
apic_state	cpu.h	/^    struct DeviceState *apic_state;$/;"	m	struct:CPUX86State	typeref:struct:CPUX86State::DeviceState
append	Structures.py	/^    def append( self, buf):$/;"	m	class:CopyingStringBackend
append	Structures.py	/^    def append( self, buf):$/;"	m	class:ObjectBackend
approx_rcp	op_helper.c	/^static float approx_rcp(float a)$/;"	f	file:
approx_rsqrt	op_helper.c	/^static float approx_rsqrt(float a)$/;"	f	file:
arghfoo	test/bla.h	/^struct arghfoo {$/;"	s
array	pefile.py	/^import array$/;"	i
asid	svm.h	/^	uint32_t asid;$/;"	m	struct:vmcb_control_area
ask_pascal_16	pefile.py	/^    def ask_pascal_16(self, next_rva_ptr):$/;"	m	class:UnicodeStringWrapperPostProcessor
ask_unicode_16	pefile.py	/^    def ask_unicode_16(self, next_rva_ptr):$/;"	m	class:UnicodeStringWrapperPostProcessor
attrib	svm.h	/^	uint16_t attrib;$/;"	m	struct:vmcb_seg
attributes	Structures.py	/^        attributes = [ ( "ExportFlags", "I"),$/;"	v	class:ExportDirectoryTable
attributes	Structures.py	/^    attributes =  [ ( "ImageBase", "I"),$/;"	v	class:OptionalHeaderWindowsSpecificFields
attributes	Structures.py	/^    attributes = [ ( "ControlArea", PCONTROL_AREA),$/;"	v	class:SEGMENT
attributes	Structures.py	/^    attributes = [ ( "ImportLookupTableRVA", "I"),$/;"	v	class:ImportDirectoryEntry
attributes	Structures.py	/^    attributes = [ ( "Machine", "H"),$/;"	v	class:COFFFileHeader
attributes	Structures.py	/^    attributes = [ ( "Name", "8s"),$/;"	v	class:SectionHeader
attributes	Structures.py	/^    attributes = [ ( "NtTib", "28s"),          # _NT_TIB NtTib; \/\/ +0x000$/;"	v	class:KPCR
attributes	Structures.py	/^    attributes = [ ( "Segment", PSEGMENT),$/;"	v	class:CONTROL_AREA
attributes	Structures.py	/^    attributes = [ ( "Signature", "2s"),$/;"	v	class:EXEHeader
attributes	Structures.py	/^    attributes = [ ( "StartingVpn", "I"),$/;"	v	class:MMVAD
attributes	Structures.py	/^    attributes = [ ( "Type", "H"),$/;"	v	class:FILE_OBJECT
attributes	Structures.py	/^    attributes = [ ("Header", "16s"), # DISPATCHER_HEADER Header \/\/ +0x000$/;"	v	class:KTHREAD
attributes	Structures.py	/^    attributes = [ ("Header", "16s"), # _DISPATCHER_HEADER Header \/\/ +0x000$/;"	v	class:KPROCESS
attributes	Structures.py	/^    attributes = [ ("InLoadOrderLinks", "2I"), # LIST_ENTRY InLoadOrderLinks \/\/ +0x000$/;"	v	class:LDR_DATA_TABLE_ENTRY
attributes	Structures.py	/^    attributes = [ ("InheritedAddressSpace", "B"), # UCHAR InheritedAddressSpace \/\/ +0x000$/;"	v	class:PEB
attributes	Structures.py	/^    attributes = [ ("Length", "H"),$/;"	v	class:UNICODE_STRING
attributes	Structures.py	/^    attributes = [ ("Length", "I"), # ULONG Length \/\/ +0x000$/;"	v	class:PEB_LDR_DATA
attributes	Structures.py	/^    attributes = [ ("MinorVersion", "H"), # USHORT MinorVersion \/\/ +0x000$/;"	v	class:KPRCB
attributes	Structures.py	/^    attributes = [ ("NtTib", "28c"), # _NT_TIB NtTib \/\/ +0x000$/;"	v	class:TEB
attributes	Structures.py	/^    attributes = [ ("Pcb", KPROCESS), # _KPROCESS Pcb \/\/ +0x000$/;"	v	class:EPROCESS
attributes	Structures.py	/^    attributes = [ ("VirtualAddress", "I"),$/;"	v	class:DataDirectory
attributes	Structures.py	/^    attributes = [$/;"	v	class:CLIENT_ID
attributes	Structures.py	/^    attributes = [$/;"	v	class:KAPC_STATE
attributes	Structures.py	/^   attributes = [ ( "Magic", "H"),$/;"	v	class:OptionalHeaderStandardFields
avg	analyze/graphauswertung.py	/^	def avg(self):$/;"	m	class:FlxFunctionAnalysis
avl	PyQEMU.py	/^import avl$/;"	i
avl	dllhandling.py	/^import avl$/;"	i
avl	fhandle.py	/^import avl$/;"	i
avl_breakpoint_cmp	flx_breakpoint.c	/^static int avl_breakpoint_cmp(const flx_breakpoint *a, const flx_breakpoint *b){$/;"	f	file:
avl_breakpoint_free	flx_breakpoint.c	/^static void avl_breakpoint_free(flx_breakpoint *bp){$/;"	f	file:
avl_process_cmp	flx_breakpoint.c	/^static int avl_process_cmp(const uint32_t *a, const uint32_t *b){$/;"	f	file:
avl_process_free	flx_breakpoint.c	/^static void avl_process_free(void *item){$/;"	f	file:
b	test/bla.h	/^	char b;$/;"	m	struct:aaa
b	test/bla.h	/^	char b;$/;"	m	struct:arghfoo
barfoo	test/bla.h	/^} barfoo;$/;"	t	typeref:struct:__anon16
base	cpu.h	/^    target_ulong base;$/;"	m	struct:SegmentCache
base	cpu.h	/^    uint64_t base;$/;"	m	struct:__anon5
base	svm.h	/^	uint64_t base;$/;"	m	struct:vmcb_seg
bl	flx_instrument.c	/^blacklist* bl = NULL;$/;"	v
blacklist	flx_instrument.h	/^} blacklist;$/;"	t	typeref:struct:__anon14
blacklist_slot	flx_instrument.h	/^} blacklist_slot;$/;"	t	typeref:struct:__anon13
block_quotient	analyze/graphauswertung.py	/^def block_quotient(l):$/;"	f
bottom	PyQEMU.py	/^	def bottom(self):$/;"	m	class:Stack
bps	flx_breakpoint.c	/^avl_tree_t *bps;$/;"	v
br_from	svm.h	/^	uint64_t br_from;$/;"	m	struct:vmcb_save_area
br_to	svm.h	/^	uint64_t br_to;$/;"	m	struct:vmcb_save_area
breakpoint_handler	helper.c	/^static void breakpoint_handler(CPUState *env)$/;"	f	file:
buildobject	test/test.py	/^def buildobject(obj, address):$/;"	f
builtin_x86_defs	cpuid.c	/^static x86_def_t builtin_x86_defs[] = {$/;"	v	file:
by_address	Structures.py	/^    def by_address( self, address, root = None):$/;"	m	class:VadTree
by_forwarder	Structures.py	/^    def by_forwarder( self, forwarder_name):$/;"	m	class:Exports
by_name	Structures.py	/^    def by_name( self, name):$/;"	m	class:Exports
by_ordinal	Structures.py	/^    def by_ordinal( self, ordinal):$/;"	m	class:Exports
by_rva	Structures.py	/^    def by_rva( self, rva):$/;"	m	class:Exports
by_va	Structures.py	/^    def by_va( self, va):$/;"	m	class:Exports
c	test/bla.h	/^	char c;$/;"	m	struct:aaa
c	test/bla.h	/^	char c;$/;"	m	struct:arghfoo
cProfile	PyQEMU.py	/^import cProfile$/;"	i
cProfile	fhandle.py	/^import cProfile$/;"	i
cache_treshold	PyQEMU.py	/^	cache_treshold = 100$/;"	v	class:EventLogger
calcsize	Structures.py	/^        def calcsize( sometype):$/;"	f	function:LIST_ENTRY.__init__
callFromExe	PyQEMU.py	/^	def callFromExe(self):$/;"	m	class:TracedProcess
callstack	PyQEMU.py	/^	callstack = property(getCallstack)$/;"	v	class:TracedProcess
cap	kvm.c	/^        int cap;$/;"	m	struct:kvm_para_features	file:
cc_dst	cpu.h	/^    target_ulong cc_dst;$/;"	m	struct:CPUX86State
cc_op	cpu.h	/^    uint32_t cc_op;$/;"	m	struct:CPUX86State
cc_op	translate.c	/^    int cc_op;  \/* current CC operation *\/$/;"	m	struct:DisasContext	file:
cc_op_str	helper.c	/^static const char *cc_op_str[] = {$/;"	v	file:
cc_src	cpu.h	/^    target_ulong cc_src;$/;"	m	struct:CPUX86State
cc_tmp	cpu.h	/^    target_ulong cc_tmp; \/* temporary for rcr\/rcl *\/$/;"	m	struct:CPUX86State
check_cpuid	cpuid.c	/^int check_cpuid = 0;$/;"	v
check_exception	op_helper.c	/^static int check_exception(int intno, int *error_code)$/;"	f	file:
check_feat	cpuid.c	/^    uint32_t check_feat;$/;"	m	struct:model_features_t	file:
check_features_against_host	cpuid.c	/^static int check_features_against_host(x86_def_t *guest_def)$/;"	f	file:
check_hw_breakpoints	helper.c	/^int check_hw_breakpoints(CPUState *env, int force_dr6_update)$/;"	f
check_io	op_helper.c	/^static inline void check_io(int addr, int size)$/;"	f	file:
check_update_pending	processinfo.py	/^    def check_update_pending( self): return not self.valid or self.last_updated < self.last_seen$/;"	m	class:Process
check_watched	processinfo.py	/^    def check_watched( self):$/;"	m	class:Process
cleanup_processes	PyQEMU.py	/^cleanup_processes = []$/;"	v
clear_eflags	pyemu/PyCPU.py	/^    def clear_eflags(self):$/;"	m	class:PyCPU
clique_quotient	analyze/graphauswertung.py	/^def clique_quotient(graph):$/;"	f
close	PyQEMU.py	/^	def close(self):$/;"	m	class:EventLogger
cmp_analysis	analyze/graphauswertung.py	/^def cmp_analysis(x,y,key):$/;"	f
code	PyQEMU.py	/^		import code$/;"	i
code	test/pygcc-test.py	/^import code$/;"	i
code32	translate.c	/^    int code32; \/* 32 bit code segment *\/$/;"	m	struct:DisasContext	file:
code64	translate.c	/^    int code64; \/* 64 bit code segment *\/$/;"	m	struct:DisasContext	file:
comis_eflags	ops_sse.h	/^static const int comis_eflags[4] = {CC_C, CC_Z, 0, CC_Z | CC_P | CC_C};$/;"	v
compute_all	cpu.h	/^    int (*compute_all)(void); \/* return all the flags *\/$/;"	m	struct:CCTable
compute_all_eflags	op_helper.c	/^static int compute_all_eflags(void)$/;"	f	file:
compute_c	cpu.h	/^    int (*compute_c)(void);  \/* return the C flag *\/$/;"	m	struct:CCTable
compute_c_eflags	op_helper.c	/^static int compute_c_eflags(void)$/;"	f	file:
compute_eflags	exec.h	/^static inline uint32_t compute_eflags(void)$/;"	f
config	test/pygcc-test.py	/^config = parser.config_t( gccxml_path=gccxml_09_path)$/;"	v
configure	pyemu/FlxPyEmu.py	/^	def configure(self):$/;"	m	class:FunctionEmulator
configure	pyemu/flxanalyze.py	/^	def configure(self):$/;"	m	class:FunctionEmulator
contains	pefile.py	/^    def contains(self, rva):$/;"	m	class:SectionStructure
contains_offset	pefile.py	/^    def contains_offset(self, offset):$/;"	m	class:SectionStructure
contains_rva	pefile.py	/^    def contains_rva(self, rva):$/;"	m	class:SectionStructure
control	svm.h	/^	struct vmcb_control_area control;$/;"	m	struct:vmcb	typeref:struct:vmcb::vmcb_control_area
convert_char	pefile.py	/^        def convert_char(char):$/;"	f	function:PE.dump_info
convert_char	pefile.py	/^        def convert_char(char):$/;"	f	function:UnicodeStringWrapperPostProcessor.__str__
convert_to_printable	pefile.py	/^        def convert_to_printable(s):$/;"	f	function:PE.dump_info
copy	PyQEMU.py	/^import copy$/;"	i
copy	analyze/analyze.py	/^import copy$/;"	i
copy	fhandle.py	/^import copy$/;"	i
cpl	svm.h	/^	uint8_t cpl;$/;"	m	struct:vmcb_save_area
cpl	translate.c	/^    int cpl;$/;"	m	struct:DisasContext	file:
cpu_A0	translate.c	/^static TCGv cpu_A0, cpu_cc_src, cpu_cc_dst, cpu_cc_tmp;$/;"	v	file:
cpu_T	translate.c	/^static TCGv cpu_T[2], cpu_T3;$/;"	v	file:
cpu_T3	translate.c	/^static TCGv cpu_T[2], cpu_T3;$/;"	v	file:
cpu_breakpoint	cpu.h	/^        CPUBreakpoint *cpu_breakpoint[4];$/;"	m	union:CPUX86State::__anon6
cpu_cc_dst	translate.c	/^static TCGv cpu_A0, cpu_cc_src, cpu_cc_dst, cpu_cc_tmp;$/;"	v	file:
cpu_cc_op	translate.c	/^static TCGv_i32 cpu_cc_op;$/;"	v	file:
cpu_cc_src	translate.c	/^static TCGv cpu_A0, cpu_cc_src, cpu_cc_dst, cpu_cc_tmp;$/;"	v	file:
cpu_cc_tmp	translate.c	/^static TCGv cpu_A0, cpu_cc_src, cpu_cc_dst, cpu_cc_tmp;$/;"	v	file:
cpu_clear_apic_feature	cpuid.c	/^void cpu_clear_apic_feature(CPUX86State *env)$/;"	f
cpu_clone_regs	cpu.h	/^static inline void cpu_clone_regs(CPUState *env, target_ulong newsp)$/;"	f
cpu_dump_state	helper.c	/^void cpu_dump_state(CPUState *env, FILE *f,$/;"	f
cpu_env	translate.c	/^static TCGv_ptr cpu_env;$/;"	v	file:
cpu_exec	cpu.h	901;"	d
cpu_gen_code	cpu.h	902;"	d
cpu_get_fp80	op_helper.c	/^void cpu_get_fp80(uint64_t *pmant, uint16_t *pexp, CPU86_LDouble f)$/;"	f
cpu_get_phys_page_debug	helper.c	/^target_phys_addr_t cpu_get_phys_page_debug(CPUState *env, target_ulong addr)$/;"	f
cpu_get_tb_cpu_state	cpu.h	/^static inline void cpu_get_tb_cpu_state(CPUState *env, target_ulong *pc,$/;"	f
cpu_halted	exec.h	/^static inline int cpu_halted(CPUState *env) {$/;"	f
cpu_handle_mmu_fault	cpu.h	851;"	d
cpu_has_work	exec.h	/^static inline int cpu_has_work(CPUState *env)$/;"	f
cpu_init	cpu.h	900;"	d
cpu_inject_x86_mce	helper.c	/^void cpu_inject_x86_mce(CPUState *cenv, int bank, uint64_t status,$/;"	f
cpu_list_id	cpu.h	904;"	d
cpu_load	machine.c	/^int cpu_load(QEMUFile *f, void *opaque, int version_id)$/;"	f
cpu_load_efer	exec.h	/^static inline void cpu_load_efer(CPUState *env, uint64_t val)$/;"	f
cpu_mmu_index	cpu.h	/^static inline int cpu_mmu_index (CPUState *env)$/;"	f
cpu_pc_from_tb	exec.h	/^static inline void cpu_pc_from_tb(CPUState *env, TranslationBlock *tb)$/;"	f
cpu_post_load	machine.c	/^static int cpu_post_load(void *opaque, int version_id)$/;"	f	file:
cpu_pre_save	machine.c	/^static void cpu_pre_save(void *opaque)$/;"	f	file:
cpu_ptr0	translate.c	/^static TCGv_ptr cpu_ptr0, cpu_ptr1;$/;"	v	file:
cpu_ptr1	translate.c	/^static TCGv_ptr cpu_ptr0, cpu_ptr1;$/;"	v	file:
cpu_regs	translate.c	/^static TCGv cpu_regs[CPU_NB_REGS];$/;"	v	file:
cpu_reset	helper.c	/^void cpu_reset(CPUX86State *env)$/;"	f
cpu_save	machine.c	/^void cpu_save(QEMUFile *f, void *opaque)$/;"	f
cpu_set_fp80	op_helper.c	/^CPU86_LDouble cpu_set_fp80(uint64_t mant, uint16_t upper)$/;"	f
cpu_signal_handler	cpu.h	903;"	d
cpu_tmp0	translate.c	/^static TCGv cpu_tmp0, cpu_tmp4;$/;"	v	file:
cpu_tmp1_i64	translate.c	/^static TCGv_i64 cpu_tmp1_i64;$/;"	v	file:
cpu_tmp2_i32	translate.c	/^static TCGv_i32 cpu_tmp2_i32, cpu_tmp3_i32;$/;"	v	file:
cpu_tmp3_i32	translate.c	/^static TCGv_i32 cpu_tmp2_i32, cpu_tmp3_i32;$/;"	v	file:
cpu_tmp4	translate.c	/^static TCGv cpu_tmp0, cpu_tmp4;$/;"	v	file:
cpu_tmp5	translate.c	/^static TCGv cpu_tmp5;$/;"	v	file:
cpu_watchpoint	cpu.h	/^        CPUWatchpoint *cpu_watchpoint[4];$/;"	m	union:CPUX86State::__anon6
cpu_x86_close	helper.c	/^void cpu_x86_close(CPUX86State *env)$/;"	f
cpu_x86_cpuid	cpuid.c	/^void cpu_x86_cpuid(CPUX86State *env, uint32_t index, uint32_t count,$/;"	f
cpu_x86_dump_seg_cache	helper.c	/^cpu_x86_dump_seg_cache(CPUState *env, FILE *f,$/;"	f	file:
cpu_x86_fill_host	cpuid.c	/^static int cpu_x86_fill_host(x86_def_t *x86_cpu_def)$/;"	f	file:
cpu_x86_fill_model_id	cpuid.c	/^static int cpu_x86_fill_model_id(char *str)$/;"	f	file:
cpu_x86_find_by_name	cpuid.c	/^static int cpu_x86_find_by_name(x86_def_t *x86_cpu_def, const char *cpu_model)$/;"	f	file:
cpu_x86_get_descr_debug	helper.c	/^int cpu_x86_get_descr_debug(CPUX86State *env, unsigned int selector,$/;"	f
cpu_x86_handle_mmu_fault	helper.c	/^int cpu_x86_handle_mmu_fault(CPUX86State *env, target_ulong addr,$/;"	f
cpu_x86_init	helper.c	/^CPUX86State *cpu_x86_init(const char *cpu_model)$/;"	f
cpu_x86_load_seg_cache	cpu.h	/^static inline void cpu_x86_load_seg_cache(CPUX86State *env,$/;"	f
cpu_x86_load_seg_cache_sipi	cpu.h	/^static inline void cpu_x86_load_seg_cache_sipi(CPUX86State *env,$/;"	f
cpu_x86_register	cpuid.c	/^int cpu_x86_register (CPUX86State *env, const char *cpu_model)$/;"	f
cpu_x86_set_a20	helper.c	/^void cpu_x86_set_a20(CPUX86State *env, int a20_state)$/;"	f
cpu_x86_set_cpl	cpu.h	/^static inline void cpu_x86_set_cpl(CPUX86State *s, int cpl)$/;"	f
cpu_x86_update_cr0	helper.c	/^void cpu_x86_update_cr0(CPUX86State *env, uint32_t new_cr0)$/;"	f
cpu_x86_update_cr3	helper.c	/^void cpu_x86_update_cr3(CPUX86State *env, target_ulong new_cr3)$/;"	f
cpu_x86_update_cr4	helper.c	/^void cpu_x86_update_cr4(CPUX86State *env, uint32_t new_cr4)$/;"	f
cpudef_register	cpuid.c	/^static int cpudef_register(QemuOpts *opts, void *opaque)$/;"	f	file:
cpudef_setfield	cpuid.c	/^static int cpudef_setfield(const char *name, const char *str, void *opaque)$/;"	f	file:
cpudef_setup	cpu.h	905;"	d
cpuid	cpuid.c	/^    uint32_t cpuid;$/;"	m	struct:model_features_t	file:
cpuid_apic_id	cpu.h	/^    uint32_t cpuid_apic_id;$/;"	m	struct:CPUX86State
cpuid_ext2_features	cpu.h	/^    uint32_t cpuid_ext2_features;$/;"	m	struct:CPUX86State
cpuid_ext2_features	translate.c	/^    int cpuid_ext2_features;$/;"	m	struct:DisasContext	file:
cpuid_ext3_features	cpu.h	/^    uint32_t cpuid_ext3_features;$/;"	m	struct:CPUX86State
cpuid_ext3_features	translate.c	/^    int cpuid_ext3_features;$/;"	m	struct:DisasContext	file:
cpuid_ext_features	cpu.h	/^    uint32_t cpuid_ext_features;$/;"	m	struct:CPUX86State
cpuid_ext_features	translate.c	/^    int cpuid_ext_features;$/;"	m	struct:DisasContext	file:
cpuid_features	cpu.h	/^    uint32_t cpuid_features;$/;"	m	struct:CPUX86State
cpuid_features	translate.c	/^    int cpuid_features;$/;"	m	struct:DisasContext	file:
cpuid_kvm_features	cpu.h	/^    uint32_t cpuid_kvm_features;$/;"	m	struct:CPUX86State
cpuid_level	cpu.h	/^    uint32_t cpuid_level;$/;"	m	struct:CPUX86State
cpuid_model	cpu.h	/^    uint32_t cpuid_model[12];$/;"	m	struct:CPUX86State
cpuid_vendor1	cpu.h	/^    uint32_t cpuid_vendor1;$/;"	m	struct:CPUX86State
cpuid_vendor2	cpu.h	/^    uint32_t cpuid_vendor2;$/;"	m	struct:CPUX86State
cpuid_vendor3	cpu.h	/^    uint32_t cpuid_vendor3;$/;"	m	struct:CPUX86State
cpuid_vendor_override	cpu.h	/^    int cpuid_vendor_override;$/;"	m	struct:CPUX86State
cpuid_version	cpu.h	/^    uint32_t cpuid_version;$/;"	m	struct:CPUX86State
cpuid_xlevel	cpu.h	/^    uint32_t cpuid_xlevel;$/;"	m	struct:CPUX86State
cpyid	cpuid.c	/^static void cpyid(const char *s, uint32_t *id)$/;"	f	file:
cr	cpu.h	/^    target_ulong cr[5]; \/* NOTE: cr1 is unused *\/$/;"	m	struct:CPUX86State
cr0	svm.h	/^	uint64_t cr0;$/;"	m	struct:vmcb_save_area
cr2	svm.h	/^	uint64_t cr2;$/;"	m	struct:vmcb_save_area
cr3	flx_instrument.h	/^	uint32_t cr3;$/;"	m	struct:__anon13
cr3	helper.c	/^  uint32_t cr3;$/;"	m	struct:_instrument_data	file:
cr3	svm.h	/^	uint64_t cr3;$/;"	m	struct:vmcb_save_area
cr4	svm.h	/^	uint64_t cr4;$/;"	m	struct:vmcb_save_area
createNewThread	PyQEMU.py	/^	def createNewThread(self):$/;"	m	class:TracedProcess
create_blocks	analyze/graphauswertung.py	/^def create_blocks(l):$/;"	f
creg	PyQEMU.py	/^	def creg(self, register):$/;"	m	class:TracedProcess
cs	svm.h	/^	struct vmcb_seg cs;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
cs_base	translate.c	/^    target_ulong cs_base; \/* base of CS segment *\/$/;"	m	struct:DisasContext	file:
cs_override	pyemu/PyInstruction.py	/^    def cs_override(self):$/;"	m	class:PyInstruction
cstar	cpu.h	/^    target_ulong cstar;$/;"	m	struct:CPUX86State
cstar	svm.h	/^	uint64_t cstar;$/;"	m	struct:vmcb_save_area
cur	Structures.py	/^    def cur( self):$/;"	m	class:LIST_ENTRY
cur_tid	processinfo.py	/^    cur_tid = property(get_cur_tid)$/;"	v	class:Process
current_environment	flx_instrument.c	/^CPUState *current_environment = NULL;$/;"	v
current_process	Helpers.py	/^current_process = None$/;"	v
d	cpu.h	/^    CPU86_LDouble d __attribute__((aligned(16)));$/;"	m	union:__anon4
d	exec.h	/^    double d;$/;"	m	union:__anon9
d	exec.h	/^    long double d;$/;"	m	union:__anon7
d	test/bla.h	/^	char d;$/;"	m	struct:aaa
d	test/bla.h	/^	int d;$/;"	m	struct:arghfoo
dbg_cpu	flx_instrument.c	46;"	d	file:
dbg_printf	flx_instrument.c	48;"	d	file:
dbgctl	svm.h	/^	uint64_t dbgctl;$/;"	m	struct:vmcb_save_area
deallocate	PyQEMU.py	/^	def deallocate(self, address):$/;"	m	class:HeapMemoryTracer
debug	PyQEMU.py	/^def debug(msg):$/;"	f
debug	pyemu/PyEmu.py	/^    def debug(self, level):$/;"	m	class:PyEmu
debug_types	pefile.py	/^debug_types = [$/;"	v
declFromFunction	test/windecl.py	/^	def declFromFunction(self, fname, namespace = None):$/;"	m	class:WindowsHeader
declFromStruct	test/windecl.py	/^	def declFromStruct(self, structname, namespace = None):$/;"	m	class:WindowsHeader
declFromVar	test/windecl.py	/^	def declFromVar(self, variable, namespace = None):$/;"	m	class:WindowsHeader
declarations	test/pygcc-test.py	/^from pygccxml import declarations$/;"	i
declarations	test/windecl.py	/^from pygccxml import declarations$/;"	i
decls	test/pygcc-test.py	/^decls = parser.parse( ['test.h'], config )$/;"	v
deepcopy	event.py	/^from copy import deepcopy$/;"	i
default_object_handler	analyze/analyze.py	/^def default_object_handler(obj):$/;"	f
delBreakpoint	PyQEMU.py	/^	def delBreakpoint(self, addr):$/;"	m	class:TracedProcess
del_edge	analyze/graphauswertung.py	/^	def del_edge(self, src, dst):$/;"	m	class:MyFasterGraph
del_node	analyze/graphauswertung.py	/^	def del_node(self, node):$/;"	m	class:MyFasterGraph
delete	PyQEMU.py	/^	def delete(self):$/;"	m	class:Breakpoint
deref	Structures.py	/^    def deref( self):$/;"	m	class:Pointer
df	cpu.h	/^    int32_t df; \/* D flag : 1 if D = 0, -1 if D = 1 *\/$/;"	m	struct:CPUX86State
dflag	translate.c	/^    int aflag, dflag;$/;"	m	struct:DisasContext	file:
dh_alias_MMXReg	ops_sse_header.h	29;"	d
dh_alias_Reg	ops_sse_header.h	27;"	d
dh_alias_XMMReg	ops_sse_header.h	28;"	d
dh_ctype_MMXReg	ops_sse_header.h	32;"	d
dh_ctype_Reg	ops_sse_header.h	30;"	d
dh_ctype_XMMReg	ops_sse_header.h	31;"	d
dh_is_signed_MMXReg	ops_sse_header.h	35;"	d
dh_is_signed_Reg	ops_sse_header.h	33;"	d
dh_is_signed_XMMReg	ops_sse_header.h	34;"	d
directory_entry_types	pefile.py	/^directory_entry_types = [$/;"	v
disas_insn	translate.c	/^static target_ulong disas_insn(DisasContext *s, target_ulong pc_start)$/;"	f	file:
dispatch_interrupt	pyemu/PyCPU.py	/^    def dispatch_interrupt(self, interrupt):$/;"	m	class:PyCPU
div64	op_helper.c	/^static int div64(uint64_t *plow, uint64_t *phigh, uint64_t b)$/;"	f	file:
dll_characteristics	pefile.py	/^dll_characteristics = [$/;"	v
dllhandling	PyQEMU.py	/^import dllhandling$/;"	i
dllhandling	fhandle.py	/^import dllhandling$/;"	i
doReturn	PyQEMU.py	/^	def doReturn(self):$/;"	m	class:CalledFunction
do_cpu_init	helper.c	/^void do_cpu_init(CPUState *env)$/;"	f
do_cpu_sipi	helper.c	/^void do_cpu_sipi(CPUState *env)$/;"	f
do_hlt	op_helper.c	/^static void do_hlt(void)$/;"	f	file:
do_interrupt	op_helper.c	/^void do_interrupt(int intno, int is_int, int error_code,$/;"	f
do_interrupt64	op_helper.c	/^static void do_interrupt64(int intno, int is_int, int error_code,$/;"	f	file:
do_interrupt_protected	op_helper.c	/^static void do_interrupt_protected(int intno, int is_int, int error_code,$/;"	f	file:
do_interrupt_real	op_helper.c	/^static void do_interrupt_real(int intno, int is_int, int error_code,$/;"	f	file:
do_interrupt_user	op_helper.c	/^void do_interrupt_user(int intno, int is_int, int error_code,$/;"	f
do_smm_enter	op_helper.c	/^void do_smm_enter(void)$/;"	f
dr	cpu.h	/^    target_ulong dr[8]; \/* debug registers *\/$/;"	m	struct:CPUX86State
dr6	svm.h	/^	uint64_t dr6;$/;"	m	struct:vmcb_save_area
dr7	svm.h	/^	uint64_t dr7;$/;"	m	struct:vmcb_save_area
ds	svm.h	/^	struct vmcb_seg ds;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
ds_override	pyemu/PyInstruction.py	/^    def ds_override(self):$/;"	m	class:PyInstruction
dump	Structures.py	/^    def dump( self):$/;"	m	class:VadTree
dump	pefile.py	/^    def dump(self, indentation=0):$/;"	m	class:Structure
dump	processinfo.py	/^    def dump( self):$/;"	m	class:Image
dump	pyemu/FlxPyEmu.py	/^	def dump(self):$/;"	m	class:FlowGraph
dump_info	pefile.py	/^    def dump_info(self, dump=None):$/;"	m	class:PE
dump_memory	PyQEMU.py	/^def dump_memory(process, address, len, filename):$/;"	f
dump_memory	pyemu/PyMemory.py	/^    def dump_memory(self, filename=None):$/;"	m	class:PyMemory
dump_pages	pyemu/PyMemory.py	/^    def dump_pages(self, data=False):$/;"	m	class:PyMemory
dump_range	processinfo.py	/^    def dump_range( self, address):$/;"	m	class:Process
dump_regs	pyemu/PyCPU.py	/^    def dump_regs(self):$/;"	m	class:PyCPU
dump_regs	pyemu/PyEmu.py	/^    def dump_regs(self):$/;"	m	class:PyEmu
dump_stack	pyemu/PyCPU.py	/^    def dump_stack(self, count=64):$/;"	m	class:PyCPU
dump_stack	pyemu/PyEmu.py	/^    def dump_stack(self, count=64):$/;"	m	class:PyEmu
dword_align	pefile.py	/^    def dword_align(self, offset, base):$/;"	m	class:PE
e	test/bla.h	/^	int e;$/;"	m	struct:arghfoo
e_regex	flxstats.py	/^	e_regex = re.compile(" ([a-zA-Z]+): \\\\(")$/;"	v	class:FlxLogParser
efer	cpu.h	/^    uint64_t efer;$/;"	m	struct:CPUX86State
efer	svm.h	/^	uint64_t efer;$/;"	m	struct:vmcb_save_area
eflags	cpu.h	/^    target_ulong eflags; \/* eflags register. During CPU emulation, CC$/;"	m	struct:CPUX86State
eflags_map	pyemu/PyCPU.py	/^    eflags_map = {"CF": 0x1,$/;"	v	class:PyCPU
eip	PyQEMU.py	/^	def eip(self):$/;"	m	class:TracedProcess
eip	cpu.h	/^    target_ulong eip;$/;"	m	struct:CPUX86State
element_counter	flx_instrument.c	/^uint32_t element_counter = 0;$/;"	v
empty	PyQEMU.py	/^	def empty(self):$/;"	m	class:Stack
emulate_function	PyQEMU.py	/^def emulate_function(process, eip):$/;"	f
emulate_functions	PyQEMU.py	/^emulate_functions = {$/;"	v
enforce_cpuid	cpuid.c	/^int enforce_cpuid = 0;$/;"	v
ensure_error_handling_helper	PyQEMU.py	/^def ensure_error_handling_helper(func):$/;"	f
enter	processinfo.py	/^    def enter( self):$/;"	m	class:Process
entropy	pyemu/FlxPyEmu.py	/^	def entropy(self, data):$/;"	m	class:DataflowRecorder
entropy_H	pefile.py	/^    def entropy_H(self, data):$/;"	m	class:SectionStructure
eprocess	helper.c	/^  uint32_t eprocess;$/;"	m	struct:_instrument_data	file:
error_code	cpu.h	/^    int error_code;$/;"	m	struct:CPUX86State
error_dummy	PyQEMU.py	/^def error_dummy(func, *args):$/;"	f
es	svm.h	/^	struct vmcb_seg es;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
es_override	pyemu/PyInstruction.py	/^    def es_override(self):$/;"	m	class:PyInstruction
ev_bp	PyQEMU.py	/^ev_bp         = ensure_error_handling_helper(lambda *args: get_current_process().handle_breakpoint(*args))$/;"	v
ev_branch	processinfo.py	/^    def ev_branch( self, source, target, type):$/;"	m	class:Process
ev_call	PyQEMU.py	/^ev_call       = ensure_error_handling_helper(lambda *args: get_current_process().handle_call(*args))$/;"	v
ev_jmp	PyQEMU.py	/^ev_jmp        = ensure_error_handling_helper(lambda *args: get_current_process().handle_jmp(*args))$/;"	v
ev_ret	PyQEMU.py	/^ev_ret        = ensure_error_handling_helper(lambda *args: get_current_process().handle_ret(*args))$/;"	v
ev_syscall	PyQEMU.py	/^ev_syscall    = ensure_error_handling_helper(lambda *args: get_current_process().handle_syscall(*args))$/;"	v
ev_update_cr3	PyQEMU.py	/^ev_update_cr3 = ensure_error_handling_helper(event_update_cr3)$/;"	v
ev_write	processinfo.py	/^    def ev_write( self, address, size):$/;"	m	class:Process
event	PyQEMU.py	/^import event$/;"	i
event	analyze/analyze.py	/^import event$/;"	i
event	fhandle.py	/^import event$/;"	i
event_inj	svm.h	/^	uint32_t event_inj;$/;"	m	struct:vmcb_control_area
event_inj_err	svm.h	/^	uint32_t event_inj_err;$/;"	m	struct:vmcb_control_area
event_update_cr3	PyQEMU.py	/^def event_update_cr3(old_cr3, new_cr3):$/;"	f
exception_injected	cpu.h	/^    int32_t exception_injected;$/;"	m	struct:CPUX86State
exception_is_int	cpu.h	/^    int exception_is_int;$/;"	m	struct:CPUX86State
exception_next_eip	cpu.h	/^    target_ulong exception_next_eip;$/;"	m	struct:CPUX86State
exceptions	pefile.py	/^import exceptions$/;"	i
execute	pyemu/PyCPU.py	/^    def execute(self):$/;"	m	class:PyCPU
execute	pyemu/PyEmu.py	/^    def execute(self, steps=1, start=0x0, end=0x0):$/;"	m	class:PyEmu
exeption_has_error_code	op_helper.c	/^static int exeption_has_error_code(int intno)$/;"	f	file:
exit_code	svm.h	/^	uint64_t exit_code;$/;"	m	struct:vmcb_control_area
exit_info_1	svm.h	/^	uint64_t exit_info_1;$/;"	m	struct:vmcb_control_area
exit_info_2	svm.h	/^	uint64_t exit_info_2;$/;"	m	struct:vmcb_control_area
exit_int_info	svm.h	/^	uint32_t exit_int_info;$/;"	m	struct:vmcb_control_area
exit_int_info_err	svm.h	/^	uint32_t exit_int_info_err;$/;"	m	struct:vmcb_control_area
exp	machine.c	/^    uint16_t exp;$/;"	m	union:x86_longdouble	file:
ext2_feature_name	cpuid.c	/^static const char *ext2_feature_name[] = {$/;"	v	file:
ext2_features	cpuid.c	/^    uint32_t features, ext_features, ext2_features, ext3_features, kvm_features;$/;"	m	struct:x86_def_t	file:
ext3_feature_name	cpuid.c	/^static const char *ext3_feature_name[] = {$/;"	v	file:
ext3_features	cpuid.c	/^    uint32_t features, ext_features, ext2_features, ext3_features, kvm_features;$/;"	m	struct:x86_def_t	file:
ext_feature_name	cpuid.c	/^static const char *ext_feature_name[] = {$/;"	v	file:
ext_features	cpuid.c	/^    uint32_t features, ext_features, ext2_features, ext3_features, kvm_features;$/;"	m	struct:x86_def_t	file:
ext_mask	translate.c	/^    void *op[2]; uint32_t ext_mask;$/;"	m	struct:sse_op_helper_s	file:
extract_string	Structures.py	/^    def extract_string( self, rva):$/;"	m	class:PE
f	test/bla.h	/^	int f;$/;"	m	struct:arghfoo
f	test/bla.h	/^	long f;$/;"	m	struct:__anon16
f15rk	op_helper.c	/^static const CPU86_LDouble f15rk[7] =$/;"	v	file:
f_st	translate.c	/^    int f_st;   \/* currently unused *\/$/;"	m	struct:DisasContext	file:
family	cpuid.c	/^    int family;$/;"	m	struct:x86_def_t	file:
fast_load	pefile.py	/^fast_load = False$/;"	v
fcom_ccval	op_helper.c	/^static const int fcom_ccval[4] = {0x0100, 0x4000, 0x0000, 0x4500};$/;"	v	file:
fcomi_ccval	op_helper.c	/^static const int fcomi_ccval[4] = {CC_C, CC_Z, 0, CC_Z | CC_P | CC_C};$/;"	v	file:
feature	kvm.c	/^        int feature;$/;"	m	struct:kvm_para_features	file:
feature_name	cpuid.c	/^static const char *feature_name[] = {$/;"	v	file:
features	cpuid.c	/^    uint32_t features, ext_features, ext2_features, ext3_features, kvm_features;$/;"	m	struct:x86_def_t	file:
femu	pyemu/FlxPyEmu.py	/^	femu = FunctionEmulator(TestPyQEMU_Interface(), DataflowRecorder())$/;"	v
femu	pyemu/flxanalyze.py	/^	femu = FunctionEmulator(TestPyQEMU_Interface(), DataflowRecorder())$/;"	v
ffs1	ops_sse.h	/^static inline int ffs1(unsigned int val)$/;"	f
filename	analyze/viewgraph.py	/^		filename = "\/tmp\/"+filename+".png"$/;"	v
filename	analyze/viewgraph.py	/^		filename = str(random.random())[2:]$/;"	v
find_hw_breakpoint	kvm.c	/^static int find_hw_breakpoint(target_ulong addr, int len, int type)$/;"	f	file:
finish	analyze/analyze.py	/^	def finish(self):$/;"	m	class:CallGraphBuilder
finish	analyze/analyze.py	/^	def finish(self):$/;"	m	class:PyQemuDumpAnalyzer
flag_names	cpuid.c	/^    const char **flag_names;$/;"	m	struct:model_features_t	file:
flags	cpu.h	/^    uint32_t flags;$/;"	m	struct:SegmentCache
flags	cpuid.c	/^    uint32_t flags;$/;"	m	struct:x86_def_t	file:
flags	translate.c	/^    uint64_t flags; \/* all execution flags *\/$/;"	m	struct:DisasContext	file:
float32_to_floatx	exec.h	109;"	d
float32_to_floatx	exec.h	125;"	d
float64_to_floatx	exec.h	110;"	d
float64_to_floatx	exec.h	126;"	d
floatx_abs	exec.h	113;"	d
floatx_abs	exec.h	129;"	d
floatx_chs	exec.h	114;"	d
floatx_chs	exec.h	130;"	d
floatx_compare	exec.h	116;"	d
floatx_compare	exec.h	132;"	d
floatx_compare_quiet	exec.h	117;"	d
floatx_compare_quiet	exec.h	133;"	d
floatx_round_to_int	exec.h	115;"	d
floatx_round_to_int	exec.h	131;"	d
floatx_to_float32	exec.h	111;"	d
floatx_to_float32	exec.h	127;"	d
floatx_to_float64	exec.h	112;"	d
floatx_to_float64	exec.h	128;"	d
floatx_to_int32	exec.h	103;"	d
floatx_to_int32	exec.h	119;"	d
floatx_to_int32_round_to_zero	exec.h	105;"	d
floatx_to_int32_round_to_zero	exec.h	121;"	d
floatx_to_int64	exec.h	104;"	d
floatx_to_int64	exec.h	120;"	d
floatx_to_int64_round_to_zero	exec.h	106;"	d
floatx_to_int64_round_to_zero	exec.h	122;"	d
flushEvents	PyQEMU.py	/^	def flushEvents(self):$/;"	m	class:EventLogger
flx_breakpoint	flx_breakpoint.h	/^} flx_breakpoint;$/;"	t	typeref:struct:__anon12
flx_breakpoint_alloc	flx_breakpoint.c	/^static flx_breakpoint* flx_breakpoint_alloc(uint32_t addr){$/;"	f	file:
flx_breakpoint_delete	flx_breakpoint.c	/^int flx_breakpoint_delete(uint32_t addr, uint32_t cr3){$/;"	f
flx_breakpoint_free	flx_breakpoint.c	/^static void flx_breakpoint_free(flx_breakpoint* bp){$/;"	f	file:
flx_breakpoint_init	flx_breakpoint.c	/^void flx_breakpoint_init(void){$/;"	f
flx_breakpoint_insert	flx_breakpoint.c	/^void flx_breakpoint_insert(uint32_t addr, uint32_t cr3){$/;"	f
flx_breakpoint_search	flx_breakpoint.c	/^int flx_breakpoint_search(uint32_t addr, uint32_t cr3){$/;"	f
flx_breakpoint_search_addr	flx_breakpoint.c	/^int flx_breakpoint_search_addr(uint32_t addr, uint32_t *next){$/;"	f
flx_get_vmem_dword	op_helper.c	/^int flx_get_vmem_dword(uint32_t address, uint32_t *result)$/;"	f
flx_get_vmem_word	op_helper.c	/^int flx_get_vmem_word(uint32_t address, uint16_t *result)$/;"	f
flx_hex_dump	op_helper.c	/^void flx_hex_dump(uint32_t address, uint32_t len)$/;"	f
flx_instr_data	helper.c	/^INSTRUMENT_DATA flx_instr_data;$/;"	v
flx_instr_ready	helper.c	/^int flx_instr_ready = 0;$/;"	v
flx_vmem_to_phys	op_helper.c	/^uint32_t flx_vmem_to_phys(uint32_t address)$/;"	f
flxinstrument_blacklist	flx_instrument.c	/^void flxinstrument_blacklist(uint32_t addr, uint32_t SLOT_TYPE){$/;"	f
flxinstrument_blacklist_alloc	flx_instrument.c	/^void flxinstrument_blacklist_alloc(void){$/;"	f
flxinstrument_blacklist_cleanup	flx_instrument.c	/^void flxinstrument_blacklist_cleanup(void){$/;"	f
flxinstrument_breakpoint_event	flx_instrument.c	/^int flxinstrument_breakpoint_event(uint32_t eip) {$/;"	f
flxinstrument_call_event	flx_instrument.c	/^int flxinstrument_call_event(uint32_t call_origin, uint32_t call_destination, uint32_t next_eip) {$/;"	f
flxinstrument_init	flx_instrument.c	/^void flxinstrument_init(void) { $/;"	f
flxinstrument_is_blacklisted	flx_instrument.c	/^int flxinstrument_is_blacklisted(uint32_t addr, uint32_t SLOT_TYPE){$/;"	f
flxinstrument_jmp_event	flx_instrument.c	/^int flxinstrument_jmp_event(uint32_t jmp_source, uint32_t jmp_destination) {$/;"	f
flxinstrument_ret_event	flx_instrument.c	/^int flxinstrument_ret_event(uint32_t new_eip) {$/;"	f
flxinstrument_syscall_event	flx_instrument.c	/^int flxinstrument_syscall_event(uint32_t eax) {$/;"	f
flxinstrument_update_cr3	flx_instrument.c	/^int flxinstrument_update_cr3(uint32_t old_cr3, uint32_t new_cr3) {$/;"	f
fmask	cpu.h	/^    target_ulong fmask;$/;"	m	struct:CPUX86State
format	Structures.py	/^        format = "LLHHLLLLLLL"$/;"	v	class:ExportDirectoryTable
fp64_to_fp80	machine.c	/^static void fp64_to_fp80(union x86_longdouble *p, uint64_t temp)$/;"	f	file:
fp_status	cpu.h	/^    float_status fp_status;$/;"	m	struct:CPUX86State
fpop	exec.h	/^static inline void fpop(void)$/;"	f
fpregs	cpu.h	/^    FPReg fpregs[8];$/;"	m	struct:CPUX86State
fpregs_format_vmstate	cpu.h	/^    uint16_t fpregs_format_vmstate;$/;"	m	struct:CPUX86State
fpregs_is_0	machine.c	/^static bool fpregs_is_0(void *opaque, int version_id)$/;"	f	file:
fpregs_is_0_mmx	machine.c	/^static bool fpregs_is_0_mmx(void *opaque, int version_id)$/;"	f	file:
fpregs_is_0_no_mmx	machine.c	/^static bool fpregs_is_0_no_mmx(void *opaque, int version_id)$/;"	f	file:
fpregs_is_1	machine.c	/^static bool fpregs_is_1(void *opaque, int version_id)$/;"	f	file:
fpregs_is_1_mmx	machine.c	/^static bool fpregs_is_1_mmx(void *opaque, int version_id)$/;"	f	file:
fpregs_is_1_no_mmx	machine.c	/^static bool fpregs_is_1_no_mmx(void *opaque, int version_id)$/;"	f	file:
fpstt	cpu.h	/^    unsigned int fpstt; \/* top of stack index *\/$/;"	m	struct:CPUX86State
fptag_vmstate	cpu.h	/^    uint16_t fptag_vmstate;$/;"	m	struct:CPUX86State
fptags	cpu.h	/^    uint8_t fptags[8];   \/* 0 = valid, 1 = empty *\/$/;"	m	struct:CPUX86State
fpu_raise_exception	op_helper.c	/^static void fpu_raise_exception(void)$/;"	f	file:
fpu_set_exception	op_helper.c	/^static void fpu_set_exception(int mask)$/;"	f	file:
fpuc	cpu.h	/^    uint16_t fpuc;$/;"	m	struct:CPUX86State
fpus	cpu.h	/^    uint16_t fpus;$/;"	m	struct:CPUX86State
fpus_vmstate	cpu.h	/^    uint16_t fpus_vmstate;$/;"	m	struct:CPUX86State
fpush	exec.h	/^static inline void fpush(void)$/;"	f
free	PyQEMU.py	/^	def free(self, address):$/;"	m	class:HeapMemoryTracer
from	pyemu/PyEmu.py	/^                print "[*] Adding import from %s" % entry.dll$/;"	i
from_regex	flxstats.py	/^	from_regex = re.compile("\\\\((.*)\\\\) --")$/;"	v	class:FlxLogParser
fs	svm.h	/^	struct vmcb_seg fs;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
fs_override	pyemu/PyInstruction.py	/^    def fs_override(self):$/;"	m	class:PyInstruction
ft0	cpu.h	/^    CPU86_LDouble ft0;$/;"	m	struct:CPUX86State
full_load	pefile.py	/^    def full_load(self):$/;"	m	class:PE
functools	Structures.py	/^import functools$/;"	i
g	test/bla.h	/^	long int g;$/;"	m	struct:arghfoo
g	test/pygcc-test.py	/^g = global_ns$/;"	v
g_pat	svm.h	/^	uint64_t g_pat;$/;"	m	struct:vmcb_save_area
gc	PyQEMU.py	/^import gc$/;"	i
gc	fhandle.py	/^import gc$/;"	i
gccxml_09_path	test/pygcc-test.py	/^gccxml_09_path = os.path.join( this_module_dir_path, '..', '..', '..', 'gccxml_bin', 'v09', sys.platform, 'bin' )$/;"	v
gdt	cpu.h	/^    SegmentCache gdt; \/* only base and limit are used *\/$/;"	m	struct:CPUX86State
gdtr	svm.h	/^	struct vmcb_seg gdtr;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
gen_add_A0_ds_seg	translate.c	/^static void gen_add_A0_ds_seg(DisasContext *s)$/;"	f	file:
gen_add_A0_im	translate.c	/^static void gen_add_A0_im(DisasContext *s, int val)$/;"	f	file:
gen_check_io	translate.c	/^static void gen_check_io(DisasContext *s, int ot, target_ulong cur_eip,$/;"	f	file:
gen_cmps	translate.c	/^static inline void gen_cmps(DisasContext *s, int ot)$/;"	f	file:
gen_compute_eflags	translate.c	/^static void gen_compute_eflags(TCGv reg)$/;"	f	file:
gen_compute_eflags_c	translate.c	/^static void gen_compute_eflags_c(TCGv reg)$/;"	f	file:
gen_debug	translate.c	/^static void gen_debug(DisasContext *s, target_ulong cur_eip)$/;"	f	file:
gen_enter	translate.c	/^static void gen_enter(DisasContext *s, int esp_addend, int level)$/;"	f	file:
gen_eob	translate.c	/^static void gen_eob(DisasContext *s)$/;"	f	file:
gen_exception	translate.c	/^static void gen_exception(DisasContext *s, int trapno, target_ulong cur_eip)$/;"	f	file:
gen_exts	translate.c	/^static void gen_exts(int ot, TCGv reg)$/;"	f	file:
gen_extu	translate.c	/^static void gen_extu(int ot, TCGv reg)$/;"	f	file:
gen_flx_debug	translate.c	/^static void gen_flx_debug(DisasContext *s, target_ulong cur_eip){$/;"	f	file:
gen_goto_tb	translate.c	/^static inline void gen_goto_tb(DisasContext *s, int tb_num, target_ulong eip)$/;"	f	file:
gen_helper_fp_arith_ST0_FT0	translate.c	/^static void gen_helper_fp_arith_ST0_FT0(int op)$/;"	f	file:
gen_helper_fp_arith_STN_ST0	translate.c	/^static void gen_helper_fp_arith_STN_ST0(int op, int opreg)$/;"	f	file:
gen_helper_in_func	translate.c	/^static void gen_helper_in_func(int ot, TCGv v, TCGv_i32 n)$/;"	f	file:
gen_helper_out_func	translate.c	/^static void gen_helper_out_func(int ot, TCGv_i32 v, TCGv_i32 n)$/;"	f	file:
gen_inc	translate.c	/^static void gen_inc(DisasContext *s1, int ot, int d, int c)$/;"	f	file:
gen_ins	translate.c	/^static inline void gen_ins(DisasContext *s, int ot)$/;"	f	file:
gen_intermediate_code	translate.c	/^void gen_intermediate_code(CPUState *env, TranslationBlock *tb)$/;"	f
gen_intermediate_code_internal	translate.c	/^static inline void gen_intermediate_code_internal(CPUState *env,$/;"	f	file:
gen_intermediate_code_pc	translate.c	/^void gen_intermediate_code_pc(CPUState *env, TranslationBlock *tb)$/;"	f
gen_interrupt	translate.c	/^static void gen_interrupt(DisasContext *s, int intno,$/;"	f	file:
gen_jcc	translate.c	/^static inline void gen_jcc(DisasContext *s, int b,$/;"	f	file:
gen_jcc1	translate.c	/^static inline void gen_jcc1(DisasContext *s, int cc_op, int b, int l1)$/;"	f	file:
gen_jmp	translate.c	/^static void gen_jmp(DisasContext *s, target_ulong eip)$/;"	f	file:
gen_jmp_im	translate.c	/^static inline void gen_jmp_im(target_ulong pc)$/;"	f	file:
gen_jmp_tb	translate.c	/^static void gen_jmp_tb(DisasContext *s, target_ulong eip, int tb_num)$/;"	f	file:
gen_jz_ecx_string	translate.c	/^static int gen_jz_ecx_string(DisasContext *s, target_ulong next_eip)$/;"	f	file:
gen_ldo_env_A0	translate.c	/^static inline void gen_ldo_env_A0(int idx, int offset)$/;"	f	file:
gen_ldq_env_A0	translate.c	/^static inline void gen_ldq_env_A0(int idx, int offset)$/;"	f	file:
gen_ldst_modrm	translate.c	/^static void gen_ldst_modrm(DisasContext *s, int modrm, int ot, int reg, int is_store)$/;"	f	file:
gen_lea_modrm	translate.c	/^static void gen_lea_modrm(DisasContext *s, int modrm, int *reg_ptr, int *offset_ptr)$/;"	f	file:
gen_lods	translate.c	/^static inline void gen_lods(DisasContext *s, int ot)$/;"	f	file:
gen_movl_seg_T0	translate.c	/^static void gen_movl_seg_T0(DisasContext *s, int seg_reg, target_ulong cur_eip)$/;"	f	file:
gen_movs	translate.c	/^static inline void gen_movs(DisasContext *s, int ot)$/;"	f	file:
gen_movtl_T0_im	translate.c	/^static inline void gen_movtl_T0_im(target_ulong val)$/;"	f	file:
gen_movtl_T1_im	translate.c	/^static inline void gen_movtl_T1_im(target_ulong val)$/;"	f	file:
gen_nop_modrm	translate.c	/^static void gen_nop_modrm(DisasContext *s, int modrm)$/;"	f	file:
gen_op	translate.c	/^static void gen_op(DisasContext *s1, int op, int ot, int d)$/;"	f	file:
gen_op_add_reg_T0	translate.c	/^static inline void gen_op_add_reg_T0(int size, int reg)$/;"	f	file:
gen_op_add_reg_im	translate.c	/^static inline void gen_op_add_reg_im(int size, int reg, int32_t val)$/;"	f	file:
gen_op_addl_A0_im	translate.c	/^static inline void gen_op_addl_A0_im(int32_t val)$/;"	f	file:
gen_op_addl_A0_reg_sN	translate.c	/^static inline void gen_op_addl_A0_reg_sN(int shift, int reg)$/;"	f	file:
gen_op_addl_A0_seg	translate.c	/^static inline void gen_op_addl_A0_seg(int reg)$/;"	f	file:
gen_op_addl_T0_T1	translate.c	/^static inline void gen_op_addl_T0_T1(void)$/;"	f	file:
gen_op_addq_A0_im	translate.c	/^static inline void gen_op_addq_A0_im(int64_t val)$/;"	f	file:
gen_op_addq_A0_reg_sN	translate.c	/^static inline void gen_op_addq_A0_reg_sN(int shift, int reg)$/;"	f	file:
gen_op_addq_A0_seg	translate.c	/^static inline void gen_op_addq_A0_seg(int reg)$/;"	f	file:
gen_op_andl_A0_ffff	translate.c	/^static inline void gen_op_andl_A0_ffff(void)$/;"	f	file:
gen_op_andl_T0_ffff	translate.c	/^static inline void gen_op_andl_T0_ffff(void)$/;"	f	file:
gen_op_andl_T0_im	translate.c	/^static inline void gen_op_andl_T0_im(uint32_t val)$/;"	f	file:
gen_op_cmpl_T0_T1_cc	translate.c	/^static inline void gen_op_cmpl_T0_T1_cc(void)$/;"	f	file:
gen_op_jmp_T0	translate.c	/^static inline void gen_op_jmp_T0(void)$/;"	f	file:
gen_op_jnz_ecx	translate.c	/^static inline void gen_op_jnz_ecx(int size, int label1)$/;"	f	file:
gen_op_jz_ecx	translate.c	/^static inline void gen_op_jz_ecx(int size, int label1)$/;"	f	file:
gen_op_ld_T0_A0	translate.c	/^static inline void gen_op_ld_T0_A0(int idx)$/;"	f	file:
gen_op_ld_T1_A0	translate.c	/^static inline void gen_op_ld_T1_A0(int idx)$/;"	f	file:
gen_op_ld_v	translate.c	/^static inline void gen_op_ld_v(int idx, TCGv t0, TCGv a0)$/;"	f	file:
gen_op_lds_T0_A0	translate.c	/^static inline void gen_op_lds_T0_A0(int idx)$/;"	f	file:
gen_op_ldu_T0_A0	translate.c	/^static inline void gen_op_ldu_T0_A0(int idx)$/;"	f	file:
gen_op_mov_TN_reg	translate.c	/^static inline void gen_op_mov_TN_reg(int ot, int t_index, int reg)$/;"	f	file:
gen_op_mov_reg_A0	translate.c	/^static inline void gen_op_mov_reg_A0(int size, int reg)$/;"	f	file:
gen_op_mov_reg_T0	translate.c	/^static inline void gen_op_mov_reg_T0(int ot, int reg)$/;"	f	file:
gen_op_mov_reg_T1	translate.c	/^static inline void gen_op_mov_reg_T1(int ot, int reg)$/;"	f	file:
gen_op_mov_reg_v	translate.c	/^static inline void gen_op_mov_reg_v(int ot, int reg, TCGv t0)$/;"	f	file:
gen_op_mov_v_reg	translate.c	/^static inline void gen_op_mov_v_reg(int ot, TCGv t0, int reg)$/;"	f	file:
gen_op_movl	translate.c	/^static inline void gen_op_movl(int d_offset, int s_offset)$/;"	f	file:
gen_op_movl_A0_im	translate.c	/^static inline void gen_op_movl_A0_im(uint32_t val)$/;"	f	file:
gen_op_movl_A0_reg	translate.c	/^static inline void gen_op_movl_A0_reg(int reg)$/;"	f	file:
gen_op_movl_A0_seg	translate.c	/^static inline void gen_op_movl_A0_seg(int reg)$/;"	f	file:
gen_op_movl_T0_0	translate.c	/^static inline void gen_op_movl_T0_0(void)$/;"	f	file:
gen_op_movl_T0_Dshift	translate.c	/^static inline void gen_op_movl_T0_Dshift(int ot) $/;"	f	file:
gen_op_movl_T0_T1	translate.c	/^static inline void gen_op_movl_T0_T1(void)$/;"	f	file:
gen_op_movl_T0_im	translate.c	/^static inline void gen_op_movl_T0_im(int32_t val)$/;"	f	file:
gen_op_movl_T0_imu	translate.c	/^static inline void gen_op_movl_T0_imu(uint32_t val)$/;"	f	file:
gen_op_movl_T0_seg	translate.c	/^static inline void gen_op_movl_T0_seg(int seg_reg)$/;"	f	file:
gen_op_movl_T1_im	translate.c	/^static inline void gen_op_movl_T1_im(int32_t val)$/;"	f	file:
gen_op_movl_T1_imu	translate.c	/^static inline void gen_op_movl_T1_imu(uint32_t val)$/;"	f	file:
gen_op_movl_seg_T0_vm	translate.c	/^static inline void gen_op_movl_seg_T0_vm(int seg_reg)$/;"	f	file:
gen_op_movo	translate.c	/^static inline void gen_op_movo(int d_offset, int s_offset)$/;"	f	file:
gen_op_movq	translate.c	/^static inline void gen_op_movq(int d_offset, int s_offset)$/;"	f	file:
gen_op_movq_A0_im	translate.c	/^static inline void gen_op_movq_A0_im(int64_t val)$/;"	f	file:
gen_op_movq_A0_reg	translate.c	/^static inline void gen_op_movq_A0_reg(int reg)$/;"	f	file:
gen_op_movq_A0_seg	translate.c	/^static inline void gen_op_movq_A0_seg(int reg)$/;"	f	file:
gen_op_movq_env_0	translate.c	/^static inline void gen_op_movq_env_0(int d_offset)$/;"	f	file:
gen_op_set_cc_op	translate.c	/^static inline void gen_op_set_cc_op(int32_t val)$/;"	f	file:
gen_op_st_T0_A0	translate.c	/^static inline void gen_op_st_T0_A0(int idx)$/;"	f	file:
gen_op_st_T1_A0	translate.c	/^static inline void gen_op_st_T1_A0(int idx)$/;"	f	file:
gen_op_st_v	translate.c	/^static inline void gen_op_st_v(int idx, TCGv t0, TCGv a0)$/;"	f	file:
gen_op_testl_T0_T1_cc	translate.c	/^static inline void gen_op_testl_T0_T1_cc(void)$/;"	f	file:
gen_op_update1_cc	translate.c	/^static void gen_op_update1_cc(void)$/;"	f	file:
gen_op_update2_cc	translate.c	/^static void gen_op_update2_cc(void)$/;"	f	file:
gen_op_update_neg_cc	translate.c	/^static void gen_op_update_neg_cc(void)$/;"	f	file:
gen_opc_cc_op	translate.c	/^static uint8_t gen_opc_cc_op[OPC_BUF_SIZE];$/;"	v	file:
gen_outs	translate.c	/^static inline void gen_outs(DisasContext *s, int ot)$/;"	f	file:
gen_pc_load	translate.c	/^void gen_pc_load(CPUState *env, TranslationBlock *tb,$/;"	f
gen_pop_T0	translate.c	/^static void gen_pop_T0(DisasContext *s)$/;"	f	file:
gen_pop_update	translate.c	/^static void gen_pop_update(DisasContext *s)$/;"	f	file:
gen_popa	translate.c	/^static void gen_popa(DisasContext *s)$/;"	f	file:
gen_push_T0	translate.c	/^static void gen_push_T0(DisasContext *s)$/;"	f	file:
gen_push_T1	translate.c	/^static void gen_push_T1(DisasContext *s)$/;"	f	file:
gen_pusha	translate.c	/^static void gen_pusha(DisasContext *s)$/;"	f	file:
gen_rot_rm_T1	translate.c	/^static void gen_rot_rm_T1(DisasContext *s, int ot, int op1, $/;"	f	file:
gen_rot_rm_im	translate.c	/^static void gen_rot_rm_im(DisasContext *s, int ot, int op1, int op2,$/;"	f	file:
gen_rotc_rm_T1	translate.c	/^static void gen_rotc_rm_T1(DisasContext *s, int ot, int op1, $/;"	f	file:
gen_scas	translate.c	/^static inline void gen_scas(DisasContext *s, int ot)$/;"	f	file:
gen_setcc	translate.c	/^static void gen_setcc(DisasContext *s, int b)$/;"	f	file:
gen_setcc_slow_T0	translate.c	/^static inline void gen_setcc_slow_T0(DisasContext *s, int jcc_op)$/;"	f	file:
gen_shift	translate.c	/^static void gen_shift(DisasContext *s1, int op, int ot, int d, int s)$/;"	f	file:
gen_shift_rm_T1	translate.c	/^static void gen_shift_rm_T1(DisasContext *s, int ot, int op1, $/;"	f	file:
gen_shift_rm_im	translate.c	/^static void gen_shift_rm_im(DisasContext *s, int ot, int op1, int op2,$/;"	f	file:
gen_shiftd_rm_T1_T3	translate.c	/^static void gen_shiftd_rm_T1_T3(DisasContext *s, int ot, int op1, $/;"	f	file:
gen_shifti	translate.c	/^static void gen_shifti(DisasContext *s1, int op, int ot, int d, int c)$/;"	f	file:
gen_sse	translate.c	/^static void gen_sse(DisasContext *s, int b, target_ulong pc_start, int rex_r)$/;"	f	file:
gen_stack_A0	translate.c	/^static void gen_stack_A0(DisasContext *s)$/;"	f	file:
gen_stack_update	translate.c	/^static inline void gen_stack_update(DisasContext *s, int addend)$/;"	f	file:
gen_sto_env_A0	translate.c	/^static inline void gen_sto_env_A0(int idx, int offset)$/;"	f	file:
gen_stos	translate.c	/^static inline void gen_stos(DisasContext *s, int ot)$/;"	f	file:
gen_stq_env_A0	translate.c	/^static inline void gen_stq_env_A0(int idx, int offset)$/;"	f	file:
gen_string_movl_A0_EDI	translate.c	/^static inline void gen_string_movl_A0_EDI(DisasContext *s)$/;"	f	file:
gen_string_movl_A0_ESI	translate.c	/^static inline void gen_string_movl_A0_ESI(DisasContext *s)$/;"	f	file:
gen_svm_check_intercept	translate.c	/^gen_svm_check_intercept(DisasContext *s, target_ulong pc_start, uint64_t type)$/;"	f	file:
gen_svm_check_intercept_param	translate.c	/^gen_svm_check_intercept_param(DisasContext *s, target_ulong pc_start,$/;"	f	file:
gen_update_cc_op	translate.c	/^static inline void gen_update_cc_op(DisasContext *s)$/;"	f	file:
generate_checksum	pefile.py	/^    def generate_checksum(self):$/;"	m	class:PE
genreg	PyQEMU.py	/^	def genreg(self, index):$/;"	m	class:TracedProcess
get	Structures.py	/^    def get( dummy, name, self):$/;"	m	class:StructuredData
getAnalysis	analyze/graphauswertung.py	/^	def getAnalysis(self):$/;"	m	class:GraphAnalyzer
getBufFromPtr	PyQEMU.py	/^	def getBufFromPtr(self, num, size):$/;"	m	class:CalledFunction
getBuffer	PyQEMU.py	/^	def getBuffer(self, addr):$/;"	m	class:MemoryManager
getBuffer	PyQEMU.py	/^	def getBuffer(self, address):$/;"	m	class:DataMemoryTracer
getBuffer	PyQEMU.py	/^	def getBuffer(self, address):$/;"	m	class:HeapMemoryTracer
getBuffer	PyQEMU.py	/^	def getBuffer(self, address):$/;"	m	class:StackMemoryTracer
getBuffer	PyQEMU.py	/^	def getBuffer(self, address):$/;"	m	class:UnknownMemoryTracer
getCallstack	PyQEMU.py	/^	def getCallstack(self):$/;"	m	class:TracedProcess
getEvent	flxstats.py	/^	def getEvent(self, line):$/;"	m	class:FlxLogParser
getFrom	flxstats.py	/^	def getFrom(self, line):$/;"	m	class:FlxLogParser
getFunctionArg	PyQEMU.py	/^	def getFunctionArg(self, num):$/;"	m	class:CalledFunction
getIntArg	PyQEMU.py	/^	def getIntArg(self, num):$/;"	m	class:CalledFunction
getLib	dllhandling.py	/^	def getLib(self, address):$/;"	m	class:DLLHandler
getLibByName	dllhandling.py	/^	def getLibByName(self, filename):$/;"	m	class:DLLHandler
getMemory	PyQEMU.py	/^	def getMemory(self):$/;"	m	class:TracedProcess
getMemory	PyQEMU.py	/^	def getMemory(self, startaddr, length):$/;"	m	class:PyQemuEmulationInterface
getMemory	pyemu/FlxPyEmu.py	/^	def getMemory(self, startaddr, len):$/;"	m	class:PyQEMU_Interface
getMemory	pyemu/FlxPyEmu.py	/^	def getMemory(self, startaddr, length):$/;"	m	class:TestPyQEMU_Interface
getMemory	pyemu/flxanalyze.py	/^	def getMemory(self, startaddr, len):$/;"	m	class:PyQEMU_Interface
getMemory	pyemu/flxanalyze.py	/^	def getMemory(self, startaddr, length):$/;"	m	class:TestPyQEMU_Interface
getMemoryTracer	PyQEMU.py	/^	def getMemoryTracer(self, addr):$/;"	m	class:MemoryManager
getName	analyze/graphauswertung.py	/^	def getName(self):$/;"	m	class:FlxFunctionAnalysis
getPage	PyQEMU.py	/^	def getPage(self, page, memory):$/;"	m	class:PyQemuEmulationInterface
getPage	pyemu/FlxPyEmu.py	/^	def getPage(self, page, memory):$/;"	m	class:TestPyQEMU_Interface
getPage	pyemu/flxanalyze.py	/^	def getPage(self, page, memory):$/;"	m	class:TestPyQEMU_Interface
getPid	flxstats.py	/^	def getPid(self, line):$/;"	m	class:FlxLogParser
getRandomFileName	PyQEMU.py	/^	def getRandomFileName(self):$/;"	m	class:EventLogger
getRegister	pyemu/FlxPyEmu.py	/^	def getRegister(self, register):$/;"	m	class:PyQEMU_Interface
getRegister	pyemu/FlxPyEmu.py	/^	def getRegister(self, register):$/;"	m	class:TestPyQEMU_Interface
getRegister	pyemu/flxanalyze.py	/^	def getRegister(self, register):$/;"	m	class:PyQEMU_Interface
getRegister	pyemu/flxanalyze.py	/^	def getRegister(self, register):$/;"	m	class:TestPyQEMU_Interface
getStats	pyemu/FlxPyEmu.py	/^	def getStats(self):$/;"	m	class:DataflowRecorder
getSymbol	PyQEMU.py	/^	def getSymbol(self, addr):$/;"	m	class:TracedProcess
getSyscallByNumber	syscalls.py	/^def getSyscallByNumber(number):$/;"	f
getThread	PyQEMU.py	/^	def getThread(self):$/;"	m	class:TracedProcess
getTid	flxstats.py	/^	def getTid(self, line):$/;"	m	class:FlxLogParser
getTo	flxstats.py	/^	def getTo(self, line):$/;"	m	class:FlxLogParser
getUnsignedInt	Structures.py	/^def getUnsignedInt( backend, imagebase, va):$/;"	f
get_AF	pyemu/PyFlags.py	/^    def get_AF(self):$/;"	m	class:PyFlags
get_CF	pyemu/PyFlags.py	/^    def get_CF(self):$/;"	m	class:PyFlags
get_OF	pyemu/PyFlags.py	/^    def get_OF(self):$/;"	m	class:PyFlags
get_OF_ADD	pyemu/PyFlags.py	/^    def get_OF_ADD(self):$/;"	m	class:PyFlags
get_OF_SUB	pyemu/PyFlags.py	/^    def get_OF_SUB(self):$/;"	m	class:PyFlags
get_PF	pyemu/PyFlags.py	/^    def get_PF(self):$/;"	m	class:PyFlags
get_SF	pyemu/PyFlags.py	/^    def get_SF(self):$/;"	m	class:PyFlags
get_ZF	pyemu/PyFlags.py	/^    def get_ZF(self):$/;"	m	class:PyFlags
get_available_page	pyemu/PyMemory.py	/^    def get_available_page(self, address):$/;"	m	class:PyMemory
get_base	pyemu/PyInstruction.py	/^    def get_base(self):$/;"	m	class:PyInstruction
get_basedllname	processinfo.py	/^    def get_basedllname( self):$/;"	m	class:Image
get_context	pyemu/PyCPU.py	/^    def get_context(self):$/;"	m	class:PyCPU
get_cpuid_vendor	cpuid.c	/^static void get_cpuid_vendor(CPUX86State *env, uint32_t *ebx,$/;"	f	file:
get_cur_tid	processinfo.py	/^    def get_cur_tid(self): $/;"	m	class:Process
get_current_process	PyQEMU.py	/^def get_current_process():$/;"	f
get_current_register	translate.c	/^int get_current_register(int index){$/;"	f
get_data	pefile.py	/^    def get_data(self, rva, length=None):$/;"	m	class:PE
get_data	pefile.py	/^    def get_data(self, start, length=None):$/;"	m	class:SectionStructure
get_data	pyemu/PyMemory.py	/^    def get_data(self):$/;"	m	class:PyMemoryPage
get_data_from_dword	pefile.py	/^    def get_data_from_dword(self, dword):$/;"	m	class:PE
get_data_from_qword	pefile.py	/^    def get_data_from_qword(self, word):$/;"	m	class:PE
get_data_from_word	pefile.py	/^    def get_data_from_word(self, word):$/;"	m	class:PE
get_disasm	pyemu/PyCPU.py	/^    def get_disasm(self):$/;"	m	class:PyCPU
get_disasm	pyemu/PyEmu.py	/^    def get_disasm(self):$/;"	m	class:PyEmu
get_dllbase	processinfo.py	/^    def get_dllbase( self):$/;"	m	class:Image
get_dword_at_rva	pefile.py	/^    def get_dword_at_rva(self, rva):$/;"	m	class:PE
get_dword_from_data	pefile.py	/^    def get_dword_from_data(self, data, offset):$/;"	m	class:PE
get_dword_from_offset	pefile.py	/^    def get_dword_from_offset(self, offset):$/;"	m	class:PE
get_edge_count	analyze/graphauswertung.py	/^	def get_edge_count(self):$/;"	m	class:MyFasterGraph
get_entropy	pefile.py	/^    def get_entropy(self):$/;"	m	class:SectionStructure
get_entrypoint	processinfo.py	/^    def get_entrypoint( self):$/;"	m	class:Image
get_file_offset	pefile.py	/^    def get_file_offset(self):$/;"	m	class:Structure
get_fpreg	machine.c	/^static int get_fpreg(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
get_fpreg_0_mmx	machine.c	/^static int get_fpreg_0_mmx(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
get_fpreg_0_no_mmx	machine.c	/^static int get_fpreg_0_no_mmx(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
get_fpreg_1_mmx	machine.c	/^static int get_fpreg_1_mmx(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
get_fpreg_1_no_mmx	machine.c	/^static int get_fpreg_1_no_mmx(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
get_fulldllname	processinfo.py	/^    def get_fulldllname( self):$/;"	m	class:Image
get_graph	analyze/graphauswertung.py	/^def get_graph(count):$/;"	f
get_hash_md5	pefile.py	/^    def get_hash_md5(self):$/;"	m	class:SectionStructure
get_hash_sha1	pefile.py	/^    def get_hash_sha1(self):$/;"	m	class:SectionStructure
get_hash_sha256	pefile.py	/^    def get_hash_sha256(self):$/;"	m	class:SectionStructure
get_hash_sha512	pefile.py	/^    def get_hash_sha512(self):$/;"	m	class:SectionStructure
get_image_by_address	processinfo.py	/^    def get_image_by_address( self, address):$/;"	m	class:Process
get_imagefilename	processinfo.py	/^    def get_imagefilename( self): return self.eprocess.ImageFileName$/;"	m	class:Process
get_import_table	pefile.py	/^    def get_import_table(self, rva):$/;"	m	class:PE
get_index	pyemu/PyInstruction.py	/^    def get_index(self):$/;"	m	class:PyInstruction
get_library_address	pyemu/PyOS.py	/^    def get_library_address(self, function):$/;"	m	class:PyWindows
get_lsb	pyemu/PyCPU.py	/^    def get_lsb(self, value):$/;"	m	class:PyCPU
get_mask	pyemu/PyCPU.py	/^    def get_mask(self, size):$/;"	m	class:PyCPU
get_memory	pyemu/PyCPU.py	/^    def get_memory(self, address, size):$/;"	m	class:PyCPU
get_memory	pyemu/PyEmu.py	/^    def get_memory(self, address, size=0):$/;"	m	class:PyEmu
get_memory	pyemu/PyMemory.py	/^    def get_memory(self, address, size):$/;"	m	class:PyMemory
get_memory16	pyemu/PyCPU.py	/^    def get_memory16(self, address):$/;"	m	class:PyCPU
get_memory32	pyemu/PyCPU.py	/^    def get_memory32(self, address):$/;"	m	class:PyCPU
get_memory8	pyemu/PyCPU.py	/^    def get_memory8(self, address):$/;"	m	class:PyCPU
get_memory_address	pyemu/PyCPU.py	/^    def get_memory_address(self, instruction, opnum, size):$/;"	m	class:PyCPU
get_memory_address_old	pyemu/PyCPU.py	/^    def get_memory_address_old(self, instruction, opnum, size):$/;"	m	class:PyCPU
get_memory_mapped_image	pefile.py	/^    def get_memory_mapped_image(self, max_virtual_address=0x10000000, ImageBase=None):$/;"	m	class:PE
get_memory_string	pyemu/PyEmu.py	/^    def get_memory_string(self, address):$/;"	m	class:PyEmu
get_mod	pyemu/PyInstruction.py	/^    def get_mod(self):$/;"	m	class:PyInstruction
get_msb	pyemu/PyCPU.py	/^    def get_msb(self, value, size):$/;"	m	class:PyCPU
get_node_count	analyze/graphauswertung.py	/^	def get_node_count(self):$/;"	m	class:MyFasterGraph
get_nodes	analyze/graphauswertung.py	/^	def get_nodes(self):$/;"	m	class:MyFasterGraph
get_offset_from_rva	pefile.py	/^    def get_offset_from_rva(self, rva):$/;"	m	class:PE
get_offset_from_rva	pefile.py	/^    def get_offset_from_rva(self, rva):$/;"	m	class:SectionStructure
get_packed	pyemu/PyOS.py	/^                    def get_packed(self):$/;"	m	class:PyWindows.__THREAD.__TEB.__TIB.__EXCEPTION_RECORD
get_packed	pyemu/PyOS.py	/^                def get_packed(self):$/;"	m	class:PyWindows.__THREAD.__TEB.__TIB
get_packed	pyemu/PyOS.py	/^            def get_packed(self):$/;"	m	class:PyWindows.__PEB.__LDR
get_packed	pyemu/PyOS.py	/^            def get_packed(self):$/;"	m	class:PyWindows.__THREAD.__TEB
get_packed	pyemu/PyOS.py	/^        def get_packed(self):$/;"	m	class:PyWindows.__PEB
get_page	pyemu/PyMemory.py	/^    def get_page(self, page):$/;"	m	class:IDAMemory
get_page	pyemu/PyMemory.py	/^    def get_page(self, page):$/;"	m	class:PEMemory
get_page	pyemu/PyMemory.py	/^    def get_page(self, page):$/;"	m	class:PyDbgMemory
get_page	pyemu/PyMemory.py	/^    def get_page(self, page):$/;"	m	class:PyMemory
get_para_features	kvm.c	/^static int get_para_features(CPUState *env)$/;"	f	file:
get_permissions	pyemu/PyMemory.py	/^    def get_permissions(self):$/;"	m	class:PyMemoryPage
get_physical_by_rva	pefile.py	/^    def get_physical_by_rva(self, rva):$/;"	m	class:PE
get_pid	processinfo.py	/^    def get_pid( self): return self.eprocess.UniqueProcessId$/;"	m	class:Process
get_ppid	processinfo.py	/^    def get_ppid( self): return self.eprocess.InheritedFromUniqueProcessId$/;"	m	class:Process
get_qword_at_rva	pefile.py	/^    def get_qword_at_rva(self, rva):$/;"	m	class:PE
get_qword_from_data	pefile.py	/^    def get_qword_from_data(self, data, offset):$/;"	m	class:PE
get_qword_from_offset	pefile.py	/^    def get_qword_from_offset(self, offset):$/;"	m	class:PE
get_reg_opcode	pyemu/PyInstruction.py	/^    def get_reg_opcode(self):$/;"	m	class:PyInstruction
get_register	pyemu/PyCPU.py	/^    def get_register(self, register, size):$/;"	m	class:PyCPU
get_register	pyemu/PyEmu.py	/^    def get_register(self, register):$/;"	m	class:PyEmu
get_register16	pyemu/PyCPU.py	/^    def get_register16(self, register):$/;"	m	class:PyCPU
get_register32	pyemu/PyCPU.py	/^    def get_register32(self, register):$/;"	m	class:PyCPU
get_register8	pyemu/PyCPU.py	/^    def get_register8(self, register):$/;"	m	class:PyCPU
get_rm	pyemu/PyInstruction.py	/^    def get_rm(self):$/;"	m	class:PyInstruction
get_rsp_from_tss	op_helper.c	/^static inline target_ulong get_rsp_from_tss(int level)$/;"	f	file:
get_rva	pefile.py	/^    def get_rva(self):$/;"	m	class:UnicodeStringWrapperPostProcessor
get_rva_from_offset	pefile.py	/^    def get_rva_from_offset(self, offset):$/;"	m	class:PE
get_rva_from_offset	pefile.py	/^    def get_rva_from_offset(self, offset):$/;"	m	class:SectionStructure
get_scale	pyemu/PyInstruction.py	/^    def get_scale(self):$/;"	m	class:PyInstruction
get_section_by_offset	pefile.py	/^    def get_section_by_offset(self, offset):$/;"	m	class:PE
get_section_by_rva	pefile.py	/^    def get_section_by_rva(self, rva):$/;"	m	class:PE
get_seg	kvm.c	/^static void get_seg(SegmentCache *lhs, const struct kvm_segment *rhs)$/;"	f	file:
get_seg_base	op_helper.c	/^static inline uint32_t get_seg_base(uint32_t e1, uint32_t e2)$/;"	f	file:
get_seg_limit	op_helper.c	/^static inline unsigned int get_seg_limit(uint32_t e1, uint32_t e2)$/;"	f	file:
get_selector	pyemu/PyEmu.py	/^    def get_selector(self, selector):$/;"	m	class:PyEmu
get_selector	pyemu/PyOS.py	/^            def get_selector(self, selector):$/;"	m	class:PyWindows.__THREAD.__LDT
get_selector	pyemu/PyOS.py	/^    def get_selector(self, selector):$/;"	m	class:PyWindows
get_sizeofimage	processinfo.py	/^    def get_sizeofimage( self):$/;"	m	class:Image
get_sp_mask	op_helper.c	/^static inline unsigned int get_sp_mask(unsigned int e2)$/;"	f	file:
get_ss_esp_from_tss	op_helper.c	/^static inline void get_ss_esp_from_tss(uint32_t *ss_ptr,$/;"	f	file:
get_stack_argument	pyemu/PyEmu.py	/^    def get_stack_argument(self, offset, size=0):$/;"	m	class:PyEmu
get_stack_variable	pyemu/PyEmu.py	/^    def get_stack_variable(self, offset, size=0):$/;"	m	class:PyEmu
get_string_at_rva	pefile.py	/^    def get_string_at_rva(self, rva):$/;"	m	class:PE
get_string_from_data	pefile.py	/^    def get_string_from_data(self, offset, data):$/;"	m	class:PE
get_string_u_at_rva	pefile.py	/^    def get_string_u_at_rva(self, rva, max_length = 2**16):$/;"	m	class:PE
get_text	pefile.py	/^    def get_text(self):$/;"	m	class:Dump
get_uint64_as_uint32	machine.c	/^static int get_uint64_as_uint32(QEMUFile *f, void *pv, size_t size)$/;"	f	file:
get_vad_root	Structures.py	/^    def get_vad_root( self): return self.process.eprocess.VadRoot$/;"	m	class:VadTree
get_warnings	pefile.py	/^    def get_warnings(self):$/;"	m	class:PE
get_word_at_rva	pefile.py	/^    def get_word_at_rva(self, rva):$/;"	m	class:PE
get_word_from_data	pefile.py	/^    def get_word_from_data(self, data, offset):$/;"	m	class:PE
get_word_from_offset	pefile.py	/^    def get_word_from_offset(self, offset):$/;"	m	class:PE
getstackframe	PyQEMU.py	/^	def getstackframe(self, address):$/;"	m	class:TracedProcess
glob	PyQEMU.py	/^import glob$/;"	i
glob	analyze/graphauswertung.py	/^import glob$/;"	i
glob	dllhandling.py	/^import glob$/;"	i
glob	fhandle.py	/^import glob$/;"	i
glob_arg	test/bla.h	/^int glob_arg;$/;"	v
global_cpu_lock	op_helper.c	/^static spinlock_t global_cpu_lock = SPIN_LOCK_UNLOCKED;$/;"	v	file:
global_ns	test/pygcc-test.py	/^global_ns = declarations.get_global_namespace( decls )$/;"	v
glue	helper_template.h	/^static int glue(compute_all_adc, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_add, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_dec, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_inc, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_logic, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_mul, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_sar, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_sbb, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_shl, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_sub, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_adc, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_add, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_inc, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_logic, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_mul, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_sar, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_sbb, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_shl, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_sub, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^target_ulong glue(helper_rcl, SUFFIX)(target_ulong t0, target_ulong t1)$/;"	f
glue	helper_template.h	/^target_ulong glue(helper_rcr, SUFFIX)(target_ulong t0, target_ulong t1)$/;"	f
glue	ops_sse.h	/^uint32_t glue(helper_pmovmskb, SUFFIX)(Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_dppd, SUFFIX) (Reg *d, Reg *s, uint32_t mask)$/;"	f
glue	ops_sse.h	/^void glue(helper_dpps, SUFFIX) (Reg *d, Reg *s, uint32_t mask)$/;"	f
glue	ops_sse.h	/^void glue(helper_maskmov, SUFFIX) (Reg *d, Reg *s, target_ulong a0)$/;"	f
glue	ops_sse.h	/^void glue(helper_movl_mm_T0, SUFFIX) (Reg *d, uint32_t val)$/;"	f
glue	ops_sse.h	/^void glue(helper_movq_mm_T0, SUFFIX) (Reg *d, uint64_t val)$/;"	f
glue	ops_sse.h	/^void glue(helper_mpsadbw, SUFFIX) (Reg *d, Reg *s, uint32_t offset)$/;"	f
glue	ops_sse.h	/^void glue(helper_packssdw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_packsswb, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_packusdw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_packuswb, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_palignr, SUFFIX) (Reg *d, Reg *s, int32_t shift)$/;"	f
glue	ops_sse.h	/^void glue(helper_pcmpestri, SUFFIX) (Reg *d, Reg *s, uint32_t ctrl)$/;"	f
glue	ops_sse.h	/^void glue(helper_pcmpestrm, SUFFIX) (Reg *d, Reg *s, uint32_t ctrl)$/;"	f
glue	ops_sse.h	/^void glue(helper_pcmpistri, SUFFIX) (Reg *d, Reg *s, uint32_t ctrl)$/;"	f
glue	ops_sse.h	/^void glue(helper_pcmpistrm, SUFFIX) (Reg *d, Reg *s, uint32_t ctrl)$/;"	f
glue	ops_sse.h	/^void glue(helper_phaddd, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phaddsw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phaddw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phminposuw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phsubd, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phsubsw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phsubw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pmaddubsw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pmaddwd, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pmuldq, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pmuludq, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psadbw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshufb, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshufd, SUFFIX) (Reg *d, Reg *s, int order)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshufhw, SUFFIX) (Reg *d, Reg *s, int order)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshuflw, SUFFIX) (Reg *d, Reg *s, int order)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshufw, SUFFIX) (Reg *d, Reg *s, int order)$/;"	f
glue	ops_sse.h	/^void glue(helper_pslld, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pslldq, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psllq, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psllw, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrad, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psraw, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrld, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrldq, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrlq, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrlw, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_ptest, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_roundpd, SUFFIX) (Reg *d, Reg *s, uint32_t mode)$/;"	f
glue	ops_sse.h	/^void glue(helper_roundps, SUFFIX) (Reg *d, Reg *s, uint32_t mode)$/;"	f
glue	ops_sse.h	/^void glue(helper_roundsd, SUFFIX) (Reg *d, Reg *s, uint32_t mode)$/;"	f
glue	ops_sse.h	/^void glue(helper_roundss, SUFFIX) (Reg *d, Reg *s, uint32_t mode)$/;"	f
graph	analyze/viewgraph.py	/^		graph = pgv.AGraph(file=name)$/;"	v
group1	pyemu/PyInstruction.py	/^    def group1(self):$/;"	m	class:PyInstruction
group2	pyemu/PyInstruction.py	/^    def group2(self):$/;"	m	class:PyInstruction
group3	pyemu/PyInstruction.py	/^    def group3(self):$/;"	m	class:PyInstruction
gs	svm.h	/^	struct vmcb_seg gs;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
gs_override	pyemu/PyInstruction.py	/^    def gs_override(self):$/;"	m	class:PyInstruction
guest_feat	cpuid.c	/^    uint32_t *guest_feat;$/;"	m	struct:model_features_t	file:
guppy	PyQEMU.py	/^import guppy$/;"	i
guppy	fhandle.py	/^import guppy$/;"	i
h	test/bla.h	/^	struct arghfoo* h;$/;"	m	struct:arghfoo	typeref:struct:arghfoo::arghfoo
handleBeginOfFunction	pyemu/FlxPyEmu.py	/^	def handleBeginOfFunction(self, emu, mnemonic, eip, *operands):$/;"	m	class:FunctionEmulator
handleBeginOfFunction	pyemu/flxanalyze.py	/^	def handleBeginOfFunction(self, emu, mnemonic, eip, *operands):$/;"	m	class:FunctionEmulator
handleEndOfFunction	pyemu/FlxPyEmu.py	/^	def handleEndOfFunction(self, emu, mnemonic, eip, *operands):$/;"	m	class:FunctionEmulator
handleEndOfFunction	pyemu/flxanalyze.py	/^	def handleEndOfFunction(self, emu, mnemonic, eip, *operands):$/;"	m	class:FunctionEmulator
handle_breakpoint	PyQEMU.py	/^	def handle_breakpoint(self, addr):$/;"	m	class:TracedProcess
handle_call	PyQEMU.py	/^	def handle_call(self, *args):$/;"	m	class:UntracedProcess
handle_call	PyQEMU.py	/^	def handle_call(self, fromaddr, toaddr, nextaddr):$/;"	m	class:TracedProcess
handle_even_inj	op_helper.c	/^static void handle_even_inj(int intno, int is_int, int error_code,$/;"	f	file:
handle_event	PyQEMU.py	/^	def handle_event(self, obj):$/;"	m	class:EventLogger
handle_event	PyQEMU.py	/^	def handle_event(self, obj):$/;"	m	class:StdoutEventLogger
handle_jmp	PyQEMU.py	/^	def handle_jmp(self, *args):$/;"	m	class:UntracedProcess
handle_jmp	PyQEMU.py	/^	def handle_jmp(self, fromaddr, toaddr):$/;"	m	class:TracedProcess
handle_ret	PyQEMU.py	/^	def handle_ret(self, *args):$/;"	m	class:UntracedProcess
handle_ret	PyQEMU.py	/^	def handle_ret(self, toaddr):$/;"	m	class:TracedProcess
handle_syscall	PyQEMU.py	/^	def handle_syscall(self, *args):$/;"	m	class:UntracedProcess
handle_syscall	PyQEMU.py	/^	def handle_syscall(self, eax):$/;"	m	class:TracedProcess
handler	test/test_symbols.py	/^handler = DLLHandler("\/media\/shared\/")$/;"	v
hasSymbol	PyQEMU.py	/^	def hasSymbol(self, addr):$/;"	m	class:TracedProcess
has_error_code	cpu.h	/^    uint8_t has_error_code;$/;"	m	struct:CPUX86State
hashlib	pefile.py	/^    import hashlib$/;"	i
headerfile	test/test.py	/^headerfile = WindowsHeader(["test.h"])$/;"	v
heap_allocation_functions	fhandle.py	/^heap_allocation_functions = [$/;"	v
helper_aaa	op_helper.c	/^void helper_aaa(void)$/;"	f
helper_aad	op_helper.c	/^void helper_aad(int base)$/;"	f
helper_aam	op_helper.c	/^void helper_aam(int base)$/;"	f
helper_aas	op_helper.c	/^void helper_aas(void)$/;"	f
helper_addsubpd	ops_sse.h	/^void helper_addsubpd(XMMReg *d, XMMReg *s)$/;"	f
helper_addsubps	ops_sse.h	/^void helper_addsubps(XMMReg *d, XMMReg *s)$/;"	f
helper_boundl	op_helper.c	/^void helper_boundl(target_ulong a0, int v)$/;"	f
helper_boundw	op_helper.c	/^void helper_boundw(target_ulong a0, int v)$/;"	f
helper_bsf	op_helper.c	/^target_ulong helper_bsf(target_ulong t0)$/;"	f
helper_bsr	op_helper.c	/^target_ulong helper_bsr(target_ulong t0)$/;"	f
helper_call_ev_protected	op_helper.c	/^void helper_call_ev_protected(target_ulong src_eip,$/;"	f
helper_call_im_protected	op_helper.c	/^void helper_call_im_protected(target_ulong src_eip,$/;"	f
helper_call_protected	op_helper.c	/^void helper_call_protected(target_ulong src_eip,$/;"	f
helper_call_protected0	op_helper.c	/^void helper_call_protected0(void)$/;"	f
helper_call_protected1	op_helper.c	/^void helper_call_protected1(target_ulong new_eip)$/;"	f
helper_cc_compute_all	op_helper.c	/^uint32_t helper_cc_compute_all(int op)$/;"	f
helper_cc_compute_c	op_helper.c	/^uint32_t helper_cc_compute_c(int op)$/;"	f
helper_check_iob	op_helper.c	/^void helper_check_iob(uint32_t t0)$/;"	f
helper_check_iol	op_helper.c	/^void helper_check_iol(uint32_t t0)$/;"	f
helper_check_iow	op_helper.c	/^void helper_check_iow(uint32_t t0)$/;"	f
helper_clgi	op_helper.c	/^void helper_clgi(void)$/;"	f
helper_cli	op_helper.c	/^void helper_cli(void)$/;"	f
helper_clts	op_helper.c	/^void helper_clts(void)$/;"	f
helper_cmpxchg16b	op_helper.c	/^void helper_cmpxchg16b(target_ulong a0)$/;"	f
helper_cmpxchg8b	op_helper.c	/^void helper_cmpxchg8b(target_ulong a0)$/;"	f
helper_comisd	ops_sse.h	/^void helper_comisd(Reg *d, Reg *s)$/;"	f
helper_comiss	ops_sse.h	/^void helper_comiss(Reg *d, Reg *s)$/;"	f
helper_cpuid	op_helper.c	/^void helper_cpuid(void)$/;"	f
helper_crc32	ops_sse.h	/^target_ulong helper_crc32(uint32_t crc1, target_ulong msg, uint32_t len)$/;"	f
helper_cvtdq2pd	ops_sse.h	/^void helper_cvtdq2pd(Reg *d, Reg *s)$/;"	f
helper_cvtdq2ps	ops_sse.h	/^void helper_cvtdq2ps(Reg *d, Reg *s)$/;"	f
helper_cvtpd2dq	ops_sse.h	/^void helper_cvtpd2dq(XMMReg *d, XMMReg *s)$/;"	f
helper_cvtpd2pi	ops_sse.h	/^void helper_cvtpd2pi(MMXReg *d, XMMReg *s)$/;"	f
helper_cvtpd2ps	ops_sse.h	/^void helper_cvtpd2ps(Reg *d, Reg *s)$/;"	f
helper_cvtpi2pd	ops_sse.h	/^void helper_cvtpi2pd(XMMReg *d, MMXReg *s)$/;"	f
helper_cvtpi2ps	ops_sse.h	/^void helper_cvtpi2ps(XMMReg *d, MMXReg *s)$/;"	f
helper_cvtps2dq	ops_sse.h	/^void helper_cvtps2dq(XMMReg *d, XMMReg *s)$/;"	f
helper_cvtps2pd	ops_sse.h	/^void helper_cvtps2pd(Reg *d, Reg *s)$/;"	f
helper_cvtps2pi	ops_sse.h	/^void helper_cvtps2pi(MMXReg *d, XMMReg *s)$/;"	f
helper_cvtsd2si	ops_sse.h	/^int32_t helper_cvtsd2si(XMMReg *s)$/;"	f
helper_cvtsd2sq	ops_sse.h	/^int64_t helper_cvtsd2sq(XMMReg *s)$/;"	f
helper_cvtsd2ss	ops_sse.h	/^void helper_cvtsd2ss(Reg *d, Reg *s)$/;"	f
helper_cvtsi2sd	ops_sse.h	/^void helper_cvtsi2sd(XMMReg *d, uint32_t val)$/;"	f
helper_cvtsi2ss	ops_sse.h	/^void helper_cvtsi2ss(XMMReg *d, uint32_t val)$/;"	f
helper_cvtsq2sd	ops_sse.h	/^void helper_cvtsq2sd(XMMReg *d, uint64_t val)$/;"	f
helper_cvtsq2ss	ops_sse.h	/^void helper_cvtsq2ss(XMMReg *d, uint64_t val)$/;"	f
helper_cvtss2sd	ops_sse.h	/^void helper_cvtss2sd(Reg *d, Reg *s)$/;"	f
helper_cvtss2si	ops_sse.h	/^int32_t helper_cvtss2si(XMMReg *s)$/;"	f
helper_cvtss2sq	ops_sse.h	/^int64_t helper_cvtss2sq(XMMReg *s)$/;"	f
helper_cvttpd2dq	ops_sse.h	/^void helper_cvttpd2dq(XMMReg *d, XMMReg *s)$/;"	f
helper_cvttpd2pi	ops_sse.h	/^void helper_cvttpd2pi(MMXReg *d, XMMReg *s)$/;"	f
helper_cvttps2dq	ops_sse.h	/^void helper_cvttps2dq(XMMReg *d, XMMReg *s)$/;"	f
helper_cvttps2pi	ops_sse.h	/^void helper_cvttps2pi(MMXReg *d, XMMReg *s)$/;"	f
helper_cvttsd2si	ops_sse.h	/^int32_t helper_cvttsd2si(XMMReg *s)$/;"	f
helper_cvttsd2sq	ops_sse.h	/^int64_t helper_cvttsd2sq(XMMReg *s)$/;"	f
helper_cvttss2si	ops_sse.h	/^int32_t helper_cvttss2si(XMMReg *s)$/;"	f
helper_cvttss2sq	ops_sse.h	/^int64_t helper_cvttss2sq(XMMReg *s)$/;"	f
helper_daa	op_helper.c	/^void helper_daa(void)$/;"	f
helper_das	op_helper.c	/^void helper_das(void)$/;"	f
helper_debug	op_helper.c	/^void helper_debug(void)$/;"	f
helper_divb_AL	op_helper.c	/^void helper_divb_AL(target_ulong t0)$/;"	f
helper_divl_EAX	op_helper.c	/^void helper_divl_EAX(target_ulong t0)$/;"	f
helper_divq_EAX	op_helper.c	/^void helper_divq_EAX(target_ulong t0)$/;"	f
helper_divw_AX	op_helper.c	/^void helper_divw_AX(target_ulong t0)$/;"	f
helper_emms	op_helper.c	/^void helper_emms(void)$/;"	f
helper_enter64_level	op_helper.c	/^void helper_enter64_level(int level, int data64, target_ulong t1)$/;"	f
helper_enter_level	op_helper.c	/^void helper_enter_level(int level, int data32, target_ulong t1)$/;"	f
helper_enter_mmx	op_helper.c	/^void helper_enter_mmx(void)$/;"	f
helper_extrq	ops_sse.h	/^static inline uint64_t helper_extrq(uint64_t src, int shift, int len)$/;"	f
helper_extrq_i	ops_sse.h	/^void helper_extrq_i(XMMReg *d, int index, int length)$/;"	f
helper_extrq_r	ops_sse.h	/^void helper_extrq_r(XMMReg *d, XMMReg *s)$/;"	f
helper_f2xm1	op_helper.c	/^void helper_f2xm1(void)$/;"	f
helper_fabs_ST0	op_helper.c	/^void helper_fabs_ST0(void)$/;"	f
helper_fadd_ST0_FT0	op_helper.c	/^void helper_fadd_ST0_FT0(void)$/;"	f
helper_fadd_STN_ST0	op_helper.c	/^void helper_fadd_STN_ST0(int st_index)$/;"	f
helper_fbld_ST0	op_helper.c	/^void helper_fbld_ST0(target_ulong ptr)$/;"	f
helper_fbst_ST0	op_helper.c	/^void helper_fbst_ST0(target_ulong ptr)$/;"	f
helper_fchs_ST0	op_helper.c	/^void helper_fchs_ST0(void)$/;"	f
helper_fclex	op_helper.c	/^void helper_fclex(void)$/;"	f
helper_fcom_ST0_FT0	op_helper.c	/^void helper_fcom_ST0_FT0(void)$/;"	f
helper_fcomi_ST0_FT0	op_helper.c	/^void helper_fcomi_ST0_FT0(void)$/;"	f
helper_fcos	op_helper.c	/^void helper_fcos(void)$/;"	f
helper_fdecstp	op_helper.c	/^void helper_fdecstp(void)$/;"	f
helper_fdiv	op_helper.c	/^static inline CPU86_LDouble helper_fdiv(CPU86_LDouble a, CPU86_LDouble b)$/;"	f	file:
helper_fdiv_ST0_FT0	op_helper.c	/^void helper_fdiv_ST0_FT0(void)$/;"	f
helper_fdiv_STN_ST0	op_helper.c	/^void helper_fdiv_STN_ST0(int st_index)$/;"	f
helper_fdivr_ST0_FT0	op_helper.c	/^void helper_fdivr_ST0_FT0(void)$/;"	f
helper_fdivr_STN_ST0	op_helper.c	/^void helper_fdivr_STN_ST0(int st_index)$/;"	f
helper_ffree_STN	op_helper.c	/^void helper_ffree_STN(int st_index)$/;"	f
helper_fildl_FT0	op_helper.c	/^void helper_fildl_FT0(int32_t val)$/;"	f
helper_fildl_ST0	op_helper.c	/^void helper_fildl_ST0(int32_t val)$/;"	f
helper_fildll_ST0	op_helper.c	/^void helper_fildll_ST0(int64_t val)$/;"	f
helper_fincstp	op_helper.c	/^void helper_fincstp(void)$/;"	f
helper_fist_ST0	op_helper.c	/^int32_t helper_fist_ST0(void)$/;"	f
helper_fistl_ST0	op_helper.c	/^int32_t helper_fistl_ST0(void)$/;"	f
helper_fistll_ST0	op_helper.c	/^int64_t helper_fistll_ST0(void)$/;"	f
helper_fistt_ST0	op_helper.c	/^int32_t helper_fistt_ST0(void)$/;"	f
helper_fisttl_ST0	op_helper.c	/^int32_t helper_fisttl_ST0(void)$/;"	f
helper_fisttll_ST0	op_helper.c	/^int64_t helper_fisttll_ST0(void)$/;"	f
helper_fld1_ST0	op_helper.c	/^void helper_fld1_ST0(void)$/;"	f
helper_fldcw	op_helper.c	/^void helper_fldcw(uint32_t val)$/;"	f
helper_fldenv	op_helper.c	/^void helper_fldenv(target_ulong ptr, int data32)$/;"	f
helper_fldl2e_ST0	op_helper.c	/^void helper_fldl2e_ST0(void)$/;"	f
helper_fldl2t_ST0	op_helper.c	/^void helper_fldl2t_ST0(void)$/;"	f
helper_fldl_FT0	op_helper.c	/^void helper_fldl_FT0(uint64_t val)$/;"	f
helper_fldl_ST0	op_helper.c	/^void helper_fldl_ST0(uint64_t val)$/;"	f
helper_fldlg2_ST0	op_helper.c	/^void helper_fldlg2_ST0(void)$/;"	f
helper_fldln2_ST0	op_helper.c	/^void helper_fldln2_ST0(void)$/;"	f
helper_fldpi_ST0	op_helper.c	/^void helper_fldpi_ST0(void)$/;"	f
helper_flds_FT0	op_helper.c	/^void helper_flds_FT0(uint32_t val)$/;"	f
helper_flds_ST0	op_helper.c	/^void helper_flds_ST0(uint32_t val)$/;"	f
helper_fldt	exec.h	/^static inline CPU86_LDouble helper_fldt(target_ulong ptr)$/;"	f
helper_fldt_ST0	op_helper.c	/^void helper_fldt_ST0(target_ulong ptr)$/;"	f
helper_fldz_FT0	op_helper.c	/^void helper_fldz_FT0(void)$/;"	f
helper_fldz_ST0	op_helper.c	/^void helper_fldz_ST0(void)$/;"	f
helper_flx_debug	op_helper.c	/^void helper_flx_debug(void)$/;"	f
helper_fmov_FT0_STN	op_helper.c	/^void helper_fmov_FT0_STN(int st_index)$/;"	f
helper_fmov_ST0_FT0	op_helper.c	/^void helper_fmov_ST0_FT0(void)$/;"	f
helper_fmov_ST0_STN	op_helper.c	/^void helper_fmov_ST0_STN(int st_index)$/;"	f
helper_fmov_STN_ST0	op_helper.c	/^void helper_fmov_STN_ST0(int st_index)$/;"	f
helper_fmul_ST0_FT0	op_helper.c	/^void helper_fmul_ST0_FT0(void)$/;"	f
helper_fmul_STN_ST0	op_helper.c	/^void helper_fmul_STN_ST0(int st_index)$/;"	f
helper_fninit	op_helper.c	/^void helper_fninit(void)$/;"	f
helper_fnstcw	op_helper.c	/^uint32_t helper_fnstcw(void)$/;"	f
helper_fnstsw	op_helper.c	/^uint32_t helper_fnstsw(void)$/;"	f
helper_fpatan	op_helper.c	/^void helper_fpatan(void)$/;"	f
helper_fpop	op_helper.c	/^void helper_fpop(void)$/;"	f
helper_fprem	op_helper.c	/^void helper_fprem(void)$/;"	f
helper_fprem1	op_helper.c	/^void helper_fprem1(void)$/;"	f
helper_fptan	op_helper.c	/^void helper_fptan(void)$/;"	f
helper_fpush	op_helper.c	/^void helper_fpush(void)$/;"	f
helper_frndint	op_helper.c	/^void helper_frndint(void)$/;"	f
helper_frstor	op_helper.c	/^void helper_frstor(target_ulong ptr, int data32)$/;"	f
helper_fsave	op_helper.c	/^void helper_fsave(target_ulong ptr, int data32)$/;"	f
helper_fscale	op_helper.c	/^void helper_fscale(void)$/;"	f
helper_fsin	op_helper.c	/^void helper_fsin(void)$/;"	f
helper_fsincos	op_helper.c	/^void helper_fsincos(void)$/;"	f
helper_fsqrt	op_helper.c	/^void helper_fsqrt(void)$/;"	f
helper_fstenv	op_helper.c	/^void helper_fstenv(target_ulong ptr, int data32)$/;"	f
helper_fstl_ST0	op_helper.c	/^uint64_t helper_fstl_ST0(void)$/;"	f
helper_fsts_ST0	op_helper.c	/^uint32_t helper_fsts_ST0(void)$/;"	f
helper_fstt	exec.h	/^static inline void helper_fstt(CPU86_LDouble f, target_ulong ptr)$/;"	f
helper_fstt_ST0	op_helper.c	/^void helper_fstt_ST0(target_ulong ptr)$/;"	f
helper_fsub_ST0_FT0	op_helper.c	/^void helper_fsub_ST0_FT0(void)$/;"	f
helper_fsub_STN_ST0	op_helper.c	/^void helper_fsub_STN_ST0(int st_index)$/;"	f
helper_fsubr_ST0_FT0	op_helper.c	/^void helper_fsubr_ST0_FT0(void)$/;"	f
helper_fsubr_STN_ST0	op_helper.c	/^void helper_fsubr_STN_ST0(int st_index)$/;"	f
helper_fucom_ST0_FT0	op_helper.c	/^void helper_fucom_ST0_FT0(void)$/;"	f
helper_fucomi_ST0_FT0	op_helper.c	/^void helper_fucomi_ST0_FT0(void)$/;"	f
helper_fwait	op_helper.c	/^void helper_fwait(void)$/;"	f
helper_fxam_ST0	op_helper.c	/^void helper_fxam_ST0(void)$/;"	f
helper_fxchg_ST0_STN	op_helper.c	/^void helper_fxchg_ST0_STN(int st_index)$/;"	f
helper_fxrstor	op_helper.c	/^void helper_fxrstor(target_ulong ptr, int data64)$/;"	f
helper_fxsave	op_helper.c	/^void helper_fxsave(target_ulong ptr, int data64)$/;"	f
helper_fxtract	op_helper.c	/^void helper_fxtract(void)$/;"	f
helper_fyl2x	op_helper.c	/^void helper_fyl2x(void)$/;"	f
helper_fyl2xp1	op_helper.c	/^void helper_fyl2xp1(void)$/;"	f
helper_haddpd	ops_sse.h	/^void helper_haddpd(XMMReg *d, XMMReg *s)$/;"	f
helper_haddps	ops_sse.h	/^void helper_haddps(XMMReg *d, XMMReg *s)$/;"	f
helper_hlt	op_helper.c	/^void helper_hlt(int next_eip_addend)$/;"	f
helper_hsubpd	ops_sse.h	/^void helper_hsubpd(XMMReg *d, XMMReg *s)$/;"	f
helper_hsubps	ops_sse.h	/^void helper_hsubps(XMMReg *d, XMMReg *s)$/;"	f
helper_idivb_AL	op_helper.c	/^void helper_idivb_AL(target_ulong t0)$/;"	f
helper_idivl_EAX	op_helper.c	/^void helper_idivl_EAX(target_ulong t0)$/;"	f
helper_idivq_EAX	op_helper.c	/^void helper_idivq_EAX(target_ulong t0)$/;"	f
helper_idivw_AX	op_helper.c	/^void helper_idivw_AX(target_ulong t0)$/;"	f
helper_imulq_EAX_T0	op_helper.c	/^void helper_imulq_EAX_T0(target_ulong t0)$/;"	f
helper_imulq_T0_T1	op_helper.c	/^target_ulong helper_imulq_T0_T1(target_ulong t0, target_ulong t1)$/;"	f
helper_inb	op_helper.c	/^target_ulong helper_inb(uint32_t port)$/;"	f
helper_inl	op_helper.c	/^target_ulong helper_inl(uint32_t port)$/;"	f
helper_insertq	ops_sse.h	/^static inline uint64_t helper_insertq(uint64_t src, int shift, int len)$/;"	f
helper_insertq_i	ops_sse.h	/^void helper_insertq_i(XMMReg *d, int index, int length)$/;"	f
helper_insertq_r	ops_sse.h	/^void helper_insertq_r(XMMReg *d, XMMReg *s)$/;"	f
helper_into	op_helper.c	/^void helper_into(int next_eip_addend)$/;"	f
helper_invlpg	op_helper.c	/^void helper_invlpg(target_ulong addr)$/;"	f
helper_invlpga	op_helper.c	/^void helper_invlpga(int aflag)$/;"	f
helper_inw	op_helper.c	/^target_ulong helper_inw(uint32_t port)$/;"	f
helper_iret_protected	op_helper.c	/^void helper_iret_protected(int shift, int next_eip)$/;"	f
helper_iret_real	op_helper.c	/^void helper_iret_real(int shift)$/;"	f
helper_jmp	op_helper.c	/^void helper_jmp(target_ulong src_eip, target_ulong new_eip){$/;"	f
helper_lar	op_helper.c	/^target_ulong helper_lar(target_ulong selector1)$/;"	f
helper_lcall_protected	op_helper.c	/^void helper_lcall_protected(int new_cs, target_ulong new_eip, $/;"	f
helper_lcall_real	op_helper.c	/^void helper_lcall_real(int new_cs, target_ulong new_eip1,$/;"	f
helper_ljmp_protected	op_helper.c	/^void helper_ljmp_protected(int new_cs, target_ulong new_eip,$/;"	f
helper_lldt	op_helper.c	/^void helper_lldt(int selector)$/;"	f
helper_lmsw	op_helper.c	/^void helper_lmsw(target_ulong t0)$/;"	f
helper_load_seg	op_helper.c	/^void helper_load_seg(int seg_reg, int selector)$/;"	f
helper_lock	op_helper.c	/^void helper_lock(void)$/;"	f
helper_lret_protected	op_helper.c	/^void helper_lret_protected(int shift, int addend)$/;"	f
helper_lsl	op_helper.c	/^target_ulong helper_lsl(target_ulong selector1)$/;"	f
helper_ltr	op_helper.c	/^void helper_ltr(int selector)$/;"	f
helper_lzcnt	op_helper.c	/^target_ulong helper_lzcnt(target_ulong t0, int wordsize)$/;"	f
helper_monitor	op_helper.c	/^void helper_monitor(target_ulong ptr)$/;"	f
helper_movl_drN_T0	op_helper.c	/^void helper_movl_drN_T0(int reg, target_ulong t0)$/;"	f
helper_movmskpd	ops_sse.h	/^uint32_t helper_movmskpd(Reg *s)$/;"	f
helper_movmskps	ops_sse.h	/^uint32_t helper_movmskps(Reg *s)$/;"	f
helper_movq	op_helper.c	/^void helper_movq(void *d, void *s)$/;"	f
helper_mulq_EAX_T0	op_helper.c	/^void helper_mulq_EAX_T0(target_ulong t0)$/;"	f
helper_mwait	op_helper.c	/^void helper_mwait(int next_eip_addend)$/;"	f
helper_outb	op_helper.c	/^void helper_outb(uint32_t port, uint32_t data)$/;"	f
helper_outl	op_helper.c	/^void helper_outl(uint32_t port, uint32_t data)$/;"	f
helper_outw	op_helper.c	/^void helper_outw(uint32_t port, uint32_t data)$/;"	f
helper_pf2id	ops_sse.h	/^void helper_pf2id(MMXReg *d, MMXReg *s)$/;"	f
helper_pf2iw	ops_sse.h	/^void helper_pf2iw(MMXReg *d, MMXReg *s)$/;"	f
helper_pfacc	ops_sse.h	/^void helper_pfacc(MMXReg *d, MMXReg *s)$/;"	f
helper_pfadd	ops_sse.h	/^void helper_pfadd(MMXReg *d, MMXReg *s)$/;"	f
helper_pfcmpeq	ops_sse.h	/^void helper_pfcmpeq(MMXReg *d, MMXReg *s)$/;"	f
helper_pfcmpge	ops_sse.h	/^void helper_pfcmpge(MMXReg *d, MMXReg *s)$/;"	f
helper_pfcmpgt	ops_sse.h	/^void helper_pfcmpgt(MMXReg *d, MMXReg *s)$/;"	f
helper_pfmax	ops_sse.h	/^void helper_pfmax(MMXReg *d, MMXReg *s)$/;"	f
helper_pfmin	ops_sse.h	/^void helper_pfmin(MMXReg *d, MMXReg *s)$/;"	f
helper_pfmul	ops_sse.h	/^void helper_pfmul(MMXReg *d, MMXReg *s)$/;"	f
helper_pfnacc	ops_sse.h	/^void helper_pfnacc(MMXReg *d, MMXReg *s)$/;"	f
helper_pfpnacc	ops_sse.h	/^void helper_pfpnacc(MMXReg *d, MMXReg *s)$/;"	f
helper_pfrcp	ops_sse.h	/^void helper_pfrcp(MMXReg *d, MMXReg *s)$/;"	f
helper_pfrsqrt	ops_sse.h	/^void helper_pfrsqrt(MMXReg *d, MMXReg *s)$/;"	f
helper_pfsub	ops_sse.h	/^void helper_pfsub(MMXReg *d, MMXReg *s)$/;"	f
helper_pfsubr	ops_sse.h	/^void helper_pfsubr(MMXReg *d, MMXReg *s)$/;"	f
helper_pi2fd	ops_sse.h	/^void helper_pi2fd(MMXReg *d, MMXReg *s)$/;"	f
helper_pi2fw	ops_sse.h	/^void helper_pi2fw(MMXReg *d, MMXReg *s)$/;"	f
helper_popcnt	ops_sse.h	/^target_ulong helper_popcnt(target_ulong n, uint32_t type)$/;"	f
helper_post_call_protected	op_helper.c	/^void helper_post_call_protected(target_ulong sub_eip,$/;"	f
helper_pswapd	ops_sse.h	/^void helper_pswapd(MMXReg *d, MMXReg *s)$/;"	f
helper_raise_exception	op_helper.c	/^void helper_raise_exception(int exception_index)$/;"	f
helper_raise_interrupt	op_helper.c	/^void helper_raise_interrupt(int intno, int next_eip_addend)$/;"	f
helper_rcpps	ops_sse.h	/^void helper_rcpps(XMMReg *d, XMMReg *s)$/;"	f
helper_rcpss	ops_sse.h	/^void helper_rcpss(XMMReg *d, XMMReg *s)$/;"	f
helper_rdmsr	op_helper.c	/^void helper_rdmsr(void)$/;"	f
helper_rdpmc	op_helper.c	/^void helper_rdpmc(void)$/;"	f
helper_rdtsc	op_helper.c	/^void helper_rdtsc(void)$/;"	f
helper_rdtscp	op_helper.c	/^void helper_rdtscp(void)$/;"	f
helper_read_crN	op_helper.c	/^target_ulong helper_read_crN(int reg)$/;"	f
helper_read_eflags	op_helper.c	/^target_ulong helper_read_eflags(void)$/;"	f
helper_reset_inhibit_irq	op_helper.c	/^void helper_reset_inhibit_irq(void)$/;"	f
helper_reset_rf	op_helper.c	/^void helper_reset_rf(void)$/;"	f
helper_ret_event	op_helper.c	/^void helper_ret_event(target_ulong new_eip){$/;"	f
helper_ret_protected	op_helper.c	/^static inline void helper_ret_protected(int shift, int is_iret, int addend)$/;"	f	file:
helper_rsm	op_helper.c	/^void helper_rsm(void)$/;"	f
helper_rsqrtps	ops_sse.h	/^void helper_rsqrtps(XMMReg *d, XMMReg *s)$/;"	f
helper_rsqrtss	ops_sse.h	/^void helper_rsqrtss(XMMReg *d, XMMReg *s)$/;"	f
helper_set_inhibit_irq	op_helper.c	/^void helper_set_inhibit_irq(void)$/;"	f
helper_shufpd	ops_sse.h	/^void helper_shufpd(Reg *d, Reg *s, int order)$/;"	f
helper_shufps	ops_sse.h	/^void helper_shufps(Reg *d, Reg *s, int order)$/;"	f
helper_single_step	op_helper.c	/^void helper_single_step(void)$/;"	f
helper_skinit	op_helper.c	/^void helper_skinit(void) $/;"	f
helper_skinit	op_helper.c	/^void helper_skinit(void)$/;"	f
helper_stgi	op_helper.c	/^void helper_stgi(void)$/;"	f
helper_sti	op_helper.c	/^void helper_sti(void)$/;"	f
helper_svm_check_intercept_param	op_helper.c	/^void helper_svm_check_intercept_param(uint32_t type, uint64_t param)$/;"	f
helper_svm_check_io	op_helper.c	/^void helper_svm_check_io(uint32_t port, uint32_t param, $/;"	f
helper_syscall	op_helper.c	/^void helper_syscall(int next_eip_addend)$/;"	f
helper_syscall_event	op_helper.c	/^void helper_syscall_event(void){$/;"	f
helper_sysenter	op_helper.c	/^void helper_sysenter(void)$/;"	f
helper_sysexit	op_helper.c	/^void helper_sysexit(int dflag)$/;"	f
helper_sysret	op_helper.c	/^void helper_sysret(int dflag)$/;"	f
helper_ucomisd	ops_sse.h	/^void helper_ucomisd(Reg *d, Reg *s)$/;"	f
helper_ucomiss	ops_sse.h	/^void helper_ucomiss(Reg *d, Reg *s)$/;"	f
helper_unlock	op_helper.c	/^void helper_unlock(void)$/;"	f
helper_verr	op_helper.c	/^void helper_verr(target_ulong selector1)$/;"	f
helper_verw	op_helper.c	/^void helper_verw(target_ulong selector1)$/;"	f
helper_vmexit	op_helper.c	/^void helper_vmexit(uint32_t exit_code, uint64_t exit_info_1) $/;"	f
helper_vmexit	op_helper.c	/^void helper_vmexit(uint32_t exit_code, uint64_t exit_info_1)$/;"	f
helper_vmload	op_helper.c	/^void helper_vmload(int aflag)$/;"	f
helper_vmmcall	op_helper.c	/^void helper_vmmcall(void) $/;"	f
helper_vmmcall	op_helper.c	/^void helper_vmmcall(void)$/;"	f
helper_vmrun	op_helper.c	/^void helper_vmrun(int aflag, int next_eip_addend)$/;"	f
helper_vmsave	op_helper.c	/^void helper_vmsave(int aflag)$/;"	f
helper_write_crN	op_helper.c	/^void helper_write_crN(int reg, target_ulong t0)$/;"	f
helper_write_eflags	op_helper.c	/^void helper_write_eflags(target_ulong t0, uint32_t update_mask)$/;"	f
helper_wrmsr	op_helper.c	/^void helper_wrmsr(void)$/;"	f
hflags	cpu.h	/^    uint32_t hflags; \/* TB flags, see HF_xxx constants. These flags$/;"	m	struct:CPUX86State
hflags2	cpu.h	/^    uint32_t hflags2; \/* various other flags, see HF2_xxx constants. *\/$/;"	m	struct:CPUX86State
host_cpuid	cpuid.c	/^static void host_cpuid(uint32_t function, uint32_t count,$/;"	f	file:
host_feat	cpuid.c	/^    uint32_t *host_feat;$/;"	m	struct:model_features_t	file:
hw_breakpoint	kvm.c	/^} hw_breakpoint[4];$/;"	v	typeref:struct:__anon15	file:
hw_breakpoint_enabled	cpu.h	/^static inline int hw_breakpoint_enabled(unsigned long dr7, int index)$/;"	f
hw_breakpoint_insert	helper.c	/^void hw_breakpoint_insert(CPUState *env, int index)$/;"	f
hw_breakpoint_len	cpu.h	/^static inline int hw_breakpoint_len(unsigned long dr7, int index)$/;"	f
hw_breakpoint_remove	helper.c	/^void hw_breakpoint_remove(CPUState *env, int index)$/;"	f
hw_breakpoint_type	cpu.h	/^static inline int hw_breakpoint_type(unsigned long dr7, int index)$/;"	f
hw_watchpoint	kvm.c	/^static CPUWatchpoint hw_watchpoint;$/;"	v	file:
i	test/bla.h	/^	int i;$/;"	m	struct:__anon16
i32	ops_sse_header.h	/^DEF_HELPER_1(glue(pmovmskb, SUFFIX), i32, Reg)$/;"	v
identifier	PyQEMU.py	/^	identifier = 0$/;"	v	class:Buffer
idiv64	op_helper.c	/^static int idiv64(uint64_t *plow, uint64_t *phigh, int64_t b)$/;"	f	file:
idt	cpu.h	/^    SegmentCache idt; \/* only base and limit are used *\/$/;"	m	struct:CPUX86State
idtr	svm.h	/^	struct vmcb_seg idtr;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
image_characteristics	pefile.py	/^image_characteristics = [$/;"	v
imagefilename	PyQEMU.py	/^	def imagefilename(self):$/;"	m	class:TracedProcess
img_base	helper.c	/^  uint32_t img_base; \/\/ peb + 8$/;"	m	struct:_instrument_data	file:
imported_dlls	Structures.py	/^    def imported_dlls( self):$/;"	m	class:Imports
imported_name	Structures.py	/^    def imported_name( self):$/;"	m	class:ImportLookupTableEntry
inData	PyQEMU.py	/^	def inData(self, address):$/;"	m	class:DataMemoryTracer
includes	PyQEMU.py	/^	def includes(self, address):$/;"	m	class:Buffer
includes	dllhandling.py	/^	def includes(self, address):$/;"	m	class:DLLFile
index	Structures.py	/^    def index( self, item):$/;"	m	class:PEList
init	PyQEMU.py	/^def init(sval):	$/;"	f
init_entries	pyemu/PyOS.py	/^            def init_entries(self):$/;"	m	class:PyWindows.__THREAD.__LDT
initialize	pyemu/PyOS.py	/^    def initialize(self, emu, stackbase, stacklimit, heapbase, heaplimit):$/;"	m	class:PyLinux
initialize	pyemu/PyOS.py	/^    def initialize(self, emu, stackbase, stacklimit, heapbase, heaplimit):$/;"	m	class:PyWindows
initpyflxinstrument	flx_instrument.c	/^initpyflxinstrument(void)$/;"	f
innovate	processinfo.py	/^    def innovate( self):$/;"	m	class:Process
innovates	processinfo.py	/^    def innovates( function):$/;"	m	class:Process
innovating_wrapper	processinfo.py	/^        def innovating_wrapper( self, *args, **kwargs):$/;"	f	function:Process.innovates
inorder	Structures.py	/^    def inorder( self, root = None):$/;"	m	class:VadTree
insn_const_size	translate.c	/^static inline int insn_const_size(unsigned int ot)$/;"	f	file:
insn_get	translate.c	/^static inline uint32_t insn_get(DisasContext *s, int ot)$/;"	f	file:
instrumentation_active	flx_instrument.c	/^int instrumentation_active;$/;"	v
instrumentation_call_active	flx_instrument.c	/^int instrumentation_call_active;$/;"	v
instrumentation_syscall_active	flx_instrument.c	/^int instrumentation_syscall_active;$/;"	v
int32_to_floatx	exec.h	107;"	d
int32_to_floatx	exec.h	123;"	d
int64_to_floatx	exec.h	108;"	d
int64_to_floatx	exec.h	124;"	d
int_ctl	svm.h	/^	uint32_t int_ctl;$/;"	m	struct:vmcb_control_area
int_state	svm.h	/^	uint32_t int_state;$/;"	m	struct:vmcb_control_area
int_vector	svm.h	/^	uint32_t int_vector;$/;"	m	struct:vmcb_control_area
intercept	cpu.h	/^    uint64_t intercept;$/;"	m	struct:CPUX86State
intercept	svm.h	/^	uint64_t intercept;$/;"	m	struct:vmcb_control_area
intercept_cr_read	cpu.h	/^    uint16_t intercept_cr_read;$/;"	m	struct:CPUX86State
intercept_cr_read	svm.h	/^	uint16_t intercept_cr_read;$/;"	m	struct:vmcb_control_area
intercept_cr_write	cpu.h	/^    uint16_t intercept_cr_write;$/;"	m	struct:CPUX86State
intercept_cr_write	svm.h	/^	uint16_t intercept_cr_write;$/;"	m	struct:vmcb_control_area
intercept_dr_read	cpu.h	/^    uint16_t intercept_dr_read;$/;"	m	struct:CPUX86State
intercept_dr_read	svm.h	/^	uint16_t intercept_dr_read;$/;"	m	struct:vmcb_control_area
intercept_dr_write	cpu.h	/^    uint16_t intercept_dr_write;$/;"	m	struct:CPUX86State
intercept_dr_write	svm.h	/^	uint16_t intercept_dr_write;$/;"	m	struct:vmcb_control_area
intercept_exceptions	cpu.h	/^    uint32_t intercept_exceptions;$/;"	m	struct:CPUX86State
intercept_exceptions	svm.h	/^	uint32_t intercept_exceptions;$/;"	m	struct:vmcb_control_area
interrupt_injected	cpu.h	/^    int32_t interrupt_injected;$/;"	m	struct:CPUX86State
invalidate	pefile.py	/^    def invalidate(self):$/;"	m	class:UnicodeStringWrapperPostProcessor
iopl	translate.c	/^    int iopl;$/;"	m	struct:DisasContext	file:
iopm_base_pa	svm.h	/^	uint64_t iopm_base_pa;$/;"	m	struct:vmcb_control_area
isRegisteredThread	PyQEMU.py	/^	def isRegisteredThread(self):$/;"	m	class:TracedProcess
isReturning	PyQEMU.py	/^	def isReturning(self, nextaddr):$/;"	m	class:CalledFunction
is_block	analyze/graphauswertung.py	/^def is_block(l, treshold=1):$/;"	f
is_fast_jcc_case	translate.c	/^static int is_fast_jcc_case(DisasContext *s, int b)$/;"	f	file:
is_forwarder	Structures.py	/^    def is_forwarder( self, rva):$/;"	m	class:Exports
is_jmp	translate.c	/^    int is_jmp; \/* 1 = means jump (stop translation), 2 means CPU$/;"	m	struct:DisasContext	file:
is_null	Structures.py	/^    def is_null( self):$/;"	m	class:Pointer
is_r	pyemu/PyMemory.py	/^    def is_r(self):$/;"	m	class:PyMemoryPage
is_rwx	pyemu/PyMemory.py	/^    def is_rwx(self):$/;"	m	class:PyMemoryPage
is_rx	pyemu/PyMemory.py	/^    def is_rx(self):$/;"	m	class:PyMemoryPage
is_valid	pyemu/PyMemory.py	/^    def is_valid(self, address):$/;"	m	class:PyMemory
is_w	pyemu/PyMemory.py	/^    def is_w(self):$/;"	m	class:PyMemoryPage
is_x	pyemu/PyMemory.py	/^    def is_x(self):$/;"	m	class:PyMemoryPage
iswhite	cpuid.c	130;"	d	file:
j	test/bla.h	/^	int* j;$/;"	m	struct:__anon16
jmp_opt	translate.c	/^    int jmp_opt; \/* use direct block chaining for direct jumps *\/$/;"	m	struct:DisasContext	file:
json	PyQEMU.py	/^import json$/;"	i
json	analyze/graphauswertung.py	/^import json$/;"	i
kernel_gs_base	svm.h	/^	uint64_t kernel_gs_base;$/;"	m	struct:vmcb_save_area
kernelgsbase	cpu.h	/^    target_ulong kernelgsbase;$/;"	m	struct:CPUX86State
kernelspace	Helpers.py	/^def kernelspace(addr):$/;"	f
key_projection	analyze/graphauswertung.py	/^def key_projection(dictionary, key):$/;"	f
kvm_arch_debug	kvm.c	/^int kvm_arch_debug(struct kvm_debug_exit_arch *arch_info)$/;"	f
kvm_arch_get_registers	kvm.c	/^int kvm_arch_get_registers(CPUState *env)$/;"	f
kvm_arch_get_supported_cpuid	kvm.c	/^uint32_t kvm_arch_get_supported_cpuid(CPUState *env, uint32_t function,$/;"	f
kvm_arch_handle_exit	kvm.c	/^int kvm_arch_handle_exit(CPUState *env, struct kvm_run *run)$/;"	f
kvm_arch_init	kvm.c	/^int kvm_arch_init(KVMState *s, int smp_cpus)$/;"	f
kvm_arch_init_vcpu	kvm.c	/^int kvm_arch_init_vcpu(CPUState *env)$/;"	f
kvm_arch_insert_hw_breakpoint	kvm.c	/^int kvm_arch_insert_hw_breakpoint(target_ulong addr,$/;"	f
kvm_arch_insert_sw_breakpoint	kvm.c	/^int kvm_arch_insert_sw_breakpoint(CPUState *env, struct kvm_sw_breakpoint *bp)$/;"	f
kvm_arch_post_run	kvm.c	/^int kvm_arch_post_run(CPUState *env, struct kvm_run *run)$/;"	f
kvm_arch_pre_run	kvm.c	/^int kvm_arch_pre_run(CPUState *env, struct kvm_run *run)$/;"	f
kvm_arch_process_irqchip_events	kvm.c	/^int kvm_arch_process_irqchip_events(CPUState *env)$/;"	f
kvm_arch_put_registers	kvm.c	/^int kvm_arch_put_registers(CPUState *env, int level)$/;"	f
kvm_arch_remove_all_hw_breakpoints	kvm.c	/^void kvm_arch_remove_all_hw_breakpoints(void)$/;"	f
kvm_arch_remove_hw_breakpoint	kvm.c	/^int kvm_arch_remove_hw_breakpoint(target_ulong addr,$/;"	f
kvm_arch_remove_sw_breakpoint	kvm.c	/^int kvm_arch_remove_sw_breakpoint(CPUState *env, struct kvm_sw_breakpoint *bp)$/;"	f
kvm_arch_reset_vcpu	kvm.c	/^void kvm_arch_reset_vcpu(CPUState *env)$/;"	f
kvm_arch_stop_on_emulation_error	kvm.c	/^bool kvm_arch_stop_on_emulation_error(CPUState *env)$/;"	f
kvm_arch_update_guest_debug	kvm.c	/^void kvm_arch_update_guest_debug(CPUState *env, struct kvm_guest_debug *dbg)$/;"	f
kvm_feature_name	cpuid.c	/^static const char *kvm_feature_name[] = {$/;"	v	file:
kvm_features	cpuid.c	/^    uint32_t features, ext_features, ext2_features, ext3_features, kvm_features;$/;"	m	struct:x86_def_t	file:
kvm_get_debugregs	kvm.c	/^static int kvm_get_debugregs(CPUState *env)$/;"	f	file:
kvm_get_fpu	kvm.c	/^static int kvm_get_fpu(CPUState *env)$/;"	f	file:
kvm_get_mp_state	kvm.c	/^static int kvm_get_mp_state(CPUState *env)$/;"	f	file:
kvm_get_msrs	kvm.c	/^static int kvm_get_msrs(CPUState *env)$/;"	f	file:
kvm_get_sregs	kvm.c	/^static int kvm_get_sregs(CPUState *env)$/;"	f	file:
kvm_get_vcpu_events	kvm.c	/^static int kvm_get_vcpu_events(CPUState *env)$/;"	f	file:
kvm_get_xcrs	kvm.c	/^static int kvm_get_xcrs(CPUState *env)$/;"	f	file:
kvm_get_xsave	kvm.c	/^static int kvm_get_xsave(CPUState *env)$/;"	f	file:
kvm_getput_reg	kvm.c	/^static void kvm_getput_reg(__u64 *kvm_reg, target_ulong *qemu_reg, int set)$/;"	f	file:
kvm_getput_regs	kvm.c	/^static int kvm_getput_regs(CPUState *env, int set)$/;"	f	file:
kvm_guest_debug_workarounds	kvm.c	/^static int kvm_guest_debug_workarounds(CPUState *env)$/;"	f	file:
kvm_handle_halt	kvm.c	/^static int kvm_handle_halt(CPUState *env)$/;"	f	file:
kvm_has_msr_star	kvm.c	/^static int kvm_has_msr_star(CPUState *env)$/;"	f	file:
kvm_init_identity_map_page	kvm.c	/^static int kvm_init_identity_map_page(KVMState *s)$/;"	f	file:
kvm_msr_entry_set	kvm.c	/^static void kvm_msr_entry_set(struct kvm_msr_entry *entry,$/;"	f	file:
kvm_para_features	kvm.c	/^struct kvm_para_features {$/;"	s	file:
kvm_put_debugregs	kvm.c	/^static int kvm_put_debugregs(CPUState *env)$/;"	f	file:
kvm_put_fpu	kvm.c	/^static int kvm_put_fpu(CPUState *env)$/;"	f	file:
kvm_put_mp_state	kvm.c	/^static int kvm_put_mp_state(CPUState *env)$/;"	f	file:
kvm_put_msrs	kvm.c	/^static int kvm_put_msrs(CPUState *env, int level)$/;"	f	file:
kvm_put_sregs	kvm.c	/^static int kvm_put_sregs(CPUState *env)$/;"	f	file:
kvm_put_vcpu_events	kvm.c	/^static int kvm_put_vcpu_events(CPUState *env, int level)$/;"	f	file:
kvm_put_xcrs	kvm.c	/^static int kvm_put_xcrs(CPUState *env)$/;"	f	file:
kvm_put_xsave	kvm.c	/^static int kvm_put_xsave(CPUState *env)$/;"	f	file:
l	exec.h	/^    } l;$/;"	m	union:__anon7	typeref:struct:__anon7::__anon8
l	exec.h	/^    } l;$/;"	m	union:__anon9	typeref:struct:__anon9::__anon10
l	exec.h	/^    } l;$/;"	m	union:__anon9	typeref:struct:__anon9::__anon11
lang	pefile.py	/^lang = [$/;"	v
last_excp_from	svm.h	/^	uint64_t last_excp_from;$/;"	m	struct:vmcb_save_area
last_excp_to	svm.h	/^	uint64_t last_excp_to;$/;"	m	struct:vmcb_save_area
lbr_ctl	svm.h	/^	uint64_t lbr_ctl;$/;"	m	struct:vmcb_control_area
ldr	helper.c	/^  uint32_t ldr; \/\/peb + 0x0c$/;"	m	struct:_instrument_data	file:
ldt	cpu.h	/^    SegmentCache ldt;$/;"	m	struct:CPUX86State
ldtr	svm.h	/^	struct vmcb_seg ldtr;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
leave	processinfo.py	/^    def leave( self):$/;"	m	class:Process
len	kvm.c	/^    int len;$/;"	m	struct:__anon15	file:
less_than_7	machine.c	/^static bool less_than_7(void *opaque, int version_id)$/;"	f	file:
level	cpuid.c	/^    uint32_t level;$/;"	m	struct:x86_def_t	file:
limit	cpu.h	/^    uint32_t limit;$/;"	m	struct:SegmentCache
limit	svm.h	/^	uint32_t limit;$/;"	m	struct:vmcb_seg
listflags	cpuid.c	/^static void listflags(char *buf, int bufsize, uint32_t fbits,$/;"	f	file:
ll	exec.h	/^    int64_t ll;$/;"	m	union:__anon9
lma	translate.c	/^    int lma;    \/* long mode active *\/$/;"	m	struct:DisasContext	file:
load	pyemu/PyEmu.py	/^    def load(self, exename):$/;"	m	class:PEPyEmu
loadCallbacks	PyQEMU.py	/^	def loadCallbacks(self,handlers):$/;"	m	class:TracedProcess
loadDLL	dllhandling.py	/^	def loadDLL(self, filename, imagebase):$/;"	m	class:DLLHandler
load_eflags	exec.h	/^static inline void load_eflags(int eflags, int update_mask)$/;"	f
load_exceptions	pyemu/PyOS.py	/^        def load_exceptions(self, emu):$/;"	m	class:PyWindows.__THREAD
load_seg_cache_raw_dt	op_helper.c	/^static inline void load_seg_cache_raw_dt(SegmentCache *sc, uint32_t e1, uint32_t e2)$/;"	f	file:
load_seg_vm	op_helper.c	/^static inline void load_seg_vm(int seg, int selector)$/;"	f	file:
load_segment	op_helper.c	/^static inline int load_segment(uint32_t *e1_ptr, uint32_t *e2_ptr,$/;"	f	file:
load_stack	pyemu/PyOS.py	/^        def load_stack(self, emu, stackbase, stacklimit):$/;"	m	class:PyWindows.__THREAD
load_teb	pyemu/PyOS.py	/^        def load_teb(self, emu, address):$/;"	m	class:PyWindows.__THREAD
lock	pyemu/PyInstruction.py	/^    def lock(self):$/;"	m	class:PyInstruction
log	PyQEMU.py	/^	def log(self, obj):$/;"	m	class:TracedProcess
logFunctionAnalysis	PyQEMU.py	/^	def logFunctionAnalysis(self, function, dotfile, stats):$/;"	m	class:EventLogger
log_call	PyQEMU.py	/^	def log_call(self, function, prefix = ""):$/;"	m	class:TracedProcess
lookup_feature	cpuid.c	/^static int lookup_feature(uint32_t *pval, const char *s, const char *e,$/;"	f	file:
lower	exec.h	/^        uint32_t lower;$/;"	m	struct:__anon9::__anon10
lower	exec.h	/^        uint32_t lower;$/;"	m	struct:__anon9::__anon11
lower	exec.h	/^        unsigned long long lower;$/;"	m	struct:__anon7::__anon8
lshift	exec.h	/^static inline target_long lshift(target_long x, int n)$/;"	f
lstar	cpu.h	/^    target_ulong lstar;$/;"	m	struct:CPUX86State
lstar	svm.h	/^	uint64_t lstar;$/;"	m	struct:vmcb_save_area
lstrcpyWFunctionHandler	fhandle.py	/^class lstrcpyWFunctionHandler(StrCpyFunctionHandler):$/;"	c
lstrlenWFunctionHandler	fhandle.py	/^class lstrlenWFunctionHandler(StrLenFunctionHandler):$/;"	c
machine_types	pefile.py	/^machine_types = [$/;"	v
mant	machine.c	/^    uint64_t mant;$/;"	m	union:x86_longdouble	file:
mask	cpu.h	/^    uint64_t mask;$/;"	m	struct:__anon5
math	pefile.py	/^import math$/;"	i
math	pyemu/FlxPyEmu.py	/^import math$/;"	i
max_clique	analyze/graphauswertung.py	/^def max_clique(graph): #NP!$/;"	f
mce_banks	cpu.h	/^    uint64 mce_banks[MCE_BANKS_DEF*4];$/;"	m	struct:CPUX86State
mce_init	helper.c	/^static void mce_init(CPUX86State *cenv)$/;"	f	file:
mcg_cap	cpu.h	/^    uint64 mcg_cap;$/;"	m	struct:CPUX86State
mcg_ctl	cpu.h	/^    uint64 mcg_ctl;$/;"	m	struct:CPUX86State
mcg_status	cpu.h	/^    uint64 mcg_status;$/;"	m	struct:CPUX86State
md5	pefile.py	/^        import md5$/;"	i
md5	pefile.py	/^        md5 = md5.new$/;"	v
md5	pefile.py	/^    md5 = hashlib.md5$/;"	v
memAccess	pyemu/FlxPyEmu.py	/^	def memAccess(self, emu, address, value, size, operation):$/;"	m	class:DataflowRecorder
memAccess	pyemu/flxanalyze.py	/^	def memAccess(self, emu, address, value, size, operation):$/;"	m	class:DataflowRecorder
mem_index	translate.c	/^    int mem_index; \/* select memory access functions *\/$/;"	m	struct:DisasContext	file:
memory	PyQEMU.py	/^	memory = property(getMemory)$/;"	v	class:TracedProcess
mmx	cpu.h	/^    MMXReg mmx;$/;"	m	union:__anon4
mmx_status	cpu.h	/^    float_status mmx_status; \/* for 3DNow! float ops *\/$/;"	m	struct:CPUX86State
mmx_t0	cpu.h	/^    MMXReg mmx_t0;$/;"	m	struct:CPUX86State
model	cpuid.c	/^    int model;$/;"	m	struct:x86_def_t	file:
model_features_t	cpuid.c	/^    } model_features_t;$/;"	t	typeref:struct:model_features_t	file:
model_features_t	cpuid.c	/^typedef struct model_features_t {$/;"	s	file:
model_id	cpuid.c	/^    char model_id[48];$/;"	m	struct:x86_def_t	file:
mp_state	cpu.h	/^    uint32_t mp_state;$/;"	m	struct:CPUX86State
msb	flx_instrument.h	/^	char msb;$/;"	m	struct:__anon13
msrpm_base_pa	svm.h	/^	uint64_t msrpm_base_pa;$/;"	m	struct:vmcb_control_area
mtrr_deftype	cpu.h	/^    uint64_t mtrr_deftype;$/;"	m	struct:CPUX86State
mtrr_fixed	cpu.h	/^    uint64_t mtrr_fixed[11];$/;"	m	struct:CPUX86State
mtrr_var	cpu.h	/^    MTRRVar mtrr_var[8];$/;"	m	struct:CPUX86State
mxcsr	cpu.h	/^    uint32_t mxcsr;$/;"	m	struct:CPUX86State
n	test/bla.h	/^	char* n;$/;"	m	struct:__anon16
name	Structures.py	/^    def name( self):$/;"	m	class:ImportDirectoryEntry
name	cpuid.c	/^    const char *name;$/;"	m	struct:x86_def_t	file:
names	Structures.py	/^    names = ( $/;"	v	class:OptionalHeaderDataDirectories
nb_hw_breakpoint	kvm.c	/^static int nb_hw_breakpoint;$/;"	v	file:
neg128	op_helper.c	/^static void neg128(uint64_t *plow, uint64_t *phigh)$/;"	f	file:
nested_cr3	svm.h	/^	uint64_t nested_cr3;$/;"	m	struct:vmcb_control_area
nested_ctl	svm.h	/^	uint64_t nested_ctl;$/;"	m	struct:vmcb_control_area
newCType	test/memobj.py	/^def newCType(name$/;"	f
newStruct	test/memobj.py	/^def newStruct(name, fields):$/;"	f
next	Structures.py	/^    def next( self):$/;"	m	class:LIST_ENTRY
next	cpuid.c	/^    struct x86_def_t *next;$/;"	m	struct:x86_def_t	typeref:struct:x86_def_t::x86_def_t	file:
nmi_injected	cpu.h	/^    uint8_t nmi_injected;$/;"	m	struct:CPUX86State
nmi_pending	cpu.h	/^    uint8_t nmi_pending;$/;"	m	struct:CPUX86State
old_exception	cpu.h	/^    int old_exception;  \/* exception in flight *\/$/;"	m	struct:CPUX86State
onData	PyQEMU.py	/^	def onData(self, addr):$/;"	m	class:MemoryManager
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:ConnectFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:CreateThreadFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:FunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:HeapAllocationFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:HeapFreeFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:LoadLibraryAFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:LoadLibraryExAFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:LoadLibraryExWFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:LoadLibraryFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:LoadLibraryWFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:LocalAllocFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:NCpyFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:RaiseFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:ReallocFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:RecvFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:RtlAllocateHeapFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:RtlFreeHeapFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:SendFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:StrDupFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:StrLenFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:WSARecvFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:WcsCatFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:WcsCpyFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:WcsLenFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:WcsNCpyFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function):$/;"	m	class:lstrlenWFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function, len = -1):$/;"	m	class:CpyFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function, stringtype = STR):$/;"	m	class:StrCatFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function, stringtype = STR):$/;"	m	class:StrCpyFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function, stringtype = STR, maxlen = -1):$/;"	m	class:StrNCpyFunctionHandler
onEnter	fhandle.py	/^	def onEnter(self, function, stringtype = WSTR):$/;"	m	class:lstrcpyWFunctionHandler
onHeap	PyQEMU.py	/^	def onHeap(self, addr):$/;"	m	class:MemoryManager
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:CallocFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:ConnectFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:CreateThreadFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:FunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:HeapAllocationFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:LocalAllocFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:ReallocFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:RecvFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:RtlAllocateHeapFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:RtlFreeHeapFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:SendFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:StrDupFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:StrLenFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:WSAGetLastErrorFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:WSARecvFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:WcsLenFunctionHandler
onLeave	fhandle.py	/^	def onLeave(self, function):$/;"	m	class:lstrlenWFunctionHandler
onStack	PyQEMU.py	/^	def onStack(self, addr):$/;"	m	class:MemoryManager
op	translate.c	/^    void *op[2]; uint32_t ext_mask;$/;"	m	struct:sse_op_helper_s	file:
operand_so	pyemu/PyInstruction.py	/^    def operand_so(self):$/;"	m	class:PyInstruction
optimize_flags_init	translate.c	/^void optimize_flags_init(void)$/;"	f
os	PyQEMU.py	/^import os$/;"	i
os	analyze/graphauswertung.py	/^import os$/;"	i
os	analyze/viewgraph.py	/^import os$/;"	i
os	dllhandling.py	/^import os$/;"	i
os	fhandle.py	/^import os$/;"	i
os	pefile.py	/^import os$/;"	i
os	pyemu/FlxPyEmu.py	/^import os, sys$/;"	i
os	pyemu/PyCPU.py	/^import sys, os, time, struct, re$/;"	i
os	pyemu/PyEmu.py	/^import sys, os, time, struct, re$/;"	i
os	pyemu/PyInstruction.py	/^import sys, os, time, struct, re$/;"	i
os	pyemu/flxanalyze.py	/^import os, sys$/;"	i
os	test/pygcc-test.py	/^import os$/;"	i
os	test/windecl.py	/^import os$/;"	i
override	translate.c	/^    int override; \/* -1 if no override *\/$/;"	m	struct:DisasContext	file:
p_regex	flxstats.py	/^	p_regex = re.compile("Process: ([0-9]+)")$/;"	v	class:FlxLogParser
pageBase	pyemu/FlxPyEmu.py	/^	def pageBase(self, address):$/;"	m	class:FunctionEmulator
pageBase	pyemu/flxanalyze.py	/^	def pageBase(self, address):$/;"	m	class:FunctionEmulator
para_features	kvm.c	/^} para_features[] = {$/;"	v	typeref:struct:kvm_para_features
parity_lookup_table	pyemu/PyFlags.py	/^    parity_lookup_table = [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,$/;"	v	class:PyFlags
parity_table	op_helper.c	/^static const uint8_t parity_table[256] = {$/;"	v	file:
parse	flxstats.py	/^	def parse(self):$/;"	m	class:FlxLogParser
parseLine	analyze/callgraph.py	/^	def parseLine(self, line):$/;"	m	class:CallGraphAnalyzer
parseLine	flxstats.py	/^	def parseLine(self, line):$/;"	m	class:FlxLogParser
parse_data_directories	pefile.py	/^    def parse_data_directories(self, directories=None):$/;"	m	class:PE
parse_debug_directory	pefile.py	/^    def parse_debug_directory(self, rva, size):$/;"	m	class:PE
parse_delay_import_directory	pefile.py	/^    def parse_delay_import_directory(self, rva, size):$/;"	m	class:PE
parse_directory_bound_imports	pefile.py	/^    def parse_directory_bound_imports(self, rva, size):$/;"	m	class:PE
parse_directory_load_config	pefile.py	/^    def parse_directory_load_config(self, rva, size):$/;"	m	class:PE
parse_directory_tls	pefile.py	/^    def parse_directory_tls(self, rva, size):$/;"	m	class:PE
parse_export_directory	pefile.py	/^    def parse_export_directory(self, rva, size):$/;"	m	class:PE
parse_import_directory	pefile.py	/^    def parse_import_directory(self, rva, size):$/;"	m	class:PE
parse_imports	pefile.py	/^    def parse_imports(self, original_first_thunk, first_thunk, forwarder_chain):$/;"	m	class:PE
parse_relocations	pefile.py	/^    def parse_relocations(self, data_rva, rva, size):$/;"	m	class:PE
parse_relocations_directory	pefile.py	/^    def parse_relocations_directory(self, rva, size):$/;"	m	class:PE
parse_resource_data_entry	pefile.py	/^    def parse_resource_data_entry(self, rva):$/;"	m	class:PE
parse_resource_entry	pefile.py	/^    def parse_resource_entry(self, rva):$/;"	m	class:PE
parse_resources_directory	pefile.py	/^    def parse_resources_directory(self, rva, size=0, base_rva = None, level = 0):$/;"	m	class:PE
parse_sections	pefile.py	/^    def parse_sections(self, offset):$/;"	m	class:PE
parse_version_information	pefile.py	/^    def parse_version_information(self, version_struct):$/;"	m	class:PE
parser	test/pygcc-test.py	/^from pygccxml import parser$/;"	i
parser	test/windecl.py	/^from pygccxml import parser$/;"	i
pat	cpu.h	/^    uint64_t pat;$/;"	m	struct:CPUX86State
pc	translate.c	/^    target_ulong pc; \/* pc = eip + cs_base *\/$/;"	m	struct:DisasContext	file:
pcmp_elen	ops_sse.h	/^static inline int pcmp_elen(int reg, uint32_t ctrl)$/;"	f
pcmp_ilen	ops_sse.h	/^static inline int pcmp_ilen(Reg *r, uint8_t ctrl)$/;"	f
pcmp_val	ops_sse.h	/^static inline int pcmp_val(Reg *r, uint8_t ctrl, int i)$/;"	f
pcmpxstrx	ops_sse.h	/^static inline unsigned pcmpxstrx(Reg *d, Reg *s,$/;"	f
pe	translate.c	/^    int pe;     \/* protected mode *\/$/;"	m	struct:DisasContext	file:
peb	helper.c	/^  uint32_t peb; \/\/0x1b0$/;"	m	struct:_instrument_data	file:
pefile	dllhandling.py	/^import pefile$/;"	i
pefile	pyemu/FlxPyEmu.py	/^import pefile$/;"	i
pefile	pyemu/PyEmu.py	/^            import pefile$/;"	i
pefile	pyemu/PyEmu.py	/^            print "[!] Couldnt import pefile"$/;"	i
pefile	pyemu/flxanalyze.py	/^import pefile$/;"	i
pending_page	processinfo.py	/^    def pending_page( self):$/;"	m	class:Process
pgv	analyze/analyze.py	/^import pygraphviz as pgv$/;"	i
pgv	analyze/callgraph.py	/^import pygraphviz as pgv$/;"	i
pgv	analyze/graphauswertung.py	/^import pygraphviz as pgv$/;"	i
pgv	analyze/viewgraph.py	/^import pygraphviz as pgv$/;"	i
pgv	pyemu/FlxPyEmu.py	/^import pygraphviz as pgv$/;"	i
pickle	PyQEMU.py	/^import pickle$/;"	i
pickle	analyze/analyze.py	/^import pickle$/;"	i
pickle	fhandle.py	/^import pickle$/;"	i
pid	processinfo.py	/^    pid = property( get_pid)$/;"	v	class:Process
popl_esp_hack	translate.c	/^    int popl_esp_hack; \/* for correct popl with esp base handling *\/$/;"	m	struct:DisasContext	file:
ppid	processinfo.py	/^    ppid = property( get_ppid)$/;"	v	class:Process
prefix	test/test.py	/^prefix = ""$/;"	v
prefix	translate.c	/^    int prefix;$/;"	m	struct:DisasContext	file:
prepend	Structures.py	/^    def prepend( self, buf):$/;"	m	class:CopyingStringBackend
prepend	Structures.py	/^    def prepend( self, buf):$/;"	m	class:ObjectBackend
prev	Structures.py	/^    def prev( self):$/;"	m	class:LIST_ENTRY
prev_debug_excp_handler	helper.c	/^static CPUDebugExcpHandler *prev_debug_excp_handler;$/;"	v	file:
printNonCalling	flxstats.py	/^	def printNonCalling(self):$/;"	m	class:FlxLogParser
printNonOutsideCalling	flxstats.py	/^	def printNonOutsideCalling(self):$/;"	m	class:FlxLogParser
printNonTransitiveOutsideCalling	flxstats.py	/^	def printNonTransitiveOutsideCalling(self):$/;"	m	class:FlxLogParser
printStats	flxstats.py	/^	def printStats(self):$/;"	m	class:FlxLogParser
print_info	pefile.py	/^    def print_info(self):$/;"	m	class:PE
print_stack	processinfo.py	/^    def print_stack( self, function, source, offset = 0):$/;"	m	class:Process
process_event	analyze/analyze.py	/^	def process_event(self, obj):$/;"	m	class:CallGraphBuilder
process_event	analyze/analyze.py	/^	def process_event(self, obj):$/;"	m	class:PyQemuDumpAnalyzer
processes	flx_breakpoint.h	/^	avl_tree_t *processes;$/;"	m	struct:__anon12
processinfo	PyQEMU.py	/^import processinfo$/;"	i
processinfo	fhandle.py	/^import processinfo$/;"	i
putAnalysis	analyze/graphauswertung.py	/^	def putAnalysis(self, analysis):$/;"	m	class:FlxFunctionAnalysis
putGraph	analyze/graphauswertung.py	/^	def putGraph(self, graph):$/;"	m	class:FlxFunctionAnalysis
put_fpreg	machine.c	/^static void put_fpreg(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
put_fpreg_error	machine.c	/^static void put_fpreg_error(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
put_uint64_as_uint32	machine.c	/^static void put_uint64_as_uint32(QEMUFile *f, void *pv, size_t size)$/;"	f	file:
pydasm	pyemu/FlxPyEmu.py	/^import pydasm$/;"	i
pydasm	pyemu/PyCPU.py	/^import pydasm$/;"	i
pydasm	pyemu/PyInstruction.py	/^import pydasm$/;"	i
pygccxml	test/memobj.py	/^import pygccxml$/;"	i
pygccxml	test/test.py	/^import pygccxml$/;"	i
python_active	flx_instrument.c	/^int python_active;$/;"	v
q	cpu.h	/^    uint64_t q;$/;"	m	union:__anon3
qebek_read_ulong	op_helper.c	/^int qebek_read_ulong(CPUX86State *env, target_ulong address, uint32_t *value)$/;"	f
raise_exception	op_helper.c	/^void raise_exception(int exception_index)$/;"	f
raise_exception	pyemu/PyEmu.py	/^    def raise_exception(self, exception, address):$/;"	m	class:PyEmu
raise_exception_env	op_helper.c	/^void raise_exception_env(int exception_index, CPUState *nenv)$/;"	f
raise_exception_err	op_helper.c	/^void raise_exception_err(int exception_index, int error_code)$/;"	f
raise_interrupt	op_helper.c	/^static void QEMU_NORETURN raise_interrupt(int intno, int is_int, int error_code,$/;"	f	file:
random	PyQEMU.py	/^import random$/;"	i
random	analyze/viewgraph.py	/^import random$/;"	i
raw	Structures.py	/^    def raw( self):$/;"	m	class:CopyingStringBackend
raw	Structures.py	/^    def raw( self):$/;"	m	class:ObjectBackend
raw	Structures.py	/^    def raw( self):$/;"	m	class:OptionalHeaderDataDirectories
raw	Structures.py	/^    def raw( self):$/;"	m	class:SectionHeaders
raw	Structures.py	/^    def raw( self):$/;"	m	class:StructuredData
rax	svm.h	/^	uint64_t rax;$/;"	m	struct:vmcb_save_area
rclb_table	op_helper.c	/^static const uint8_t rclb_table[32] = {$/;"	v	file:
rclw_table	op_helper.c	/^static const uint8_t rclw_table[32] = {$/;"	v	file:
re	flxstats.py	/^import re$/;"	i
re	pefile.py	/^import re$/;"	i
re	pyemu/PyCPU.py	/^import sys, os, time, struct, re$/;"	i
re	pyemu/PyEmu.py	/^import sys, os, time, struct, re$/;"	i
re	pyemu/PyInstruction.py	/^import sys, os, time, struct, re$/;"	i
read	PyQEMU.py	/^	def read(self, len = None):$/;"	m	class:Buffer
read	Structures.py	/^    def read( self, offset, length):$/;"	m	class:Backend
read	Structures.py	/^    def read( self, offset, length):$/;"	m	class:CopyingStringBackend
read	Structures.py	/^    def read( self, offset, length):$/;"	m	class:ObjectBackend
read	Structures.py	/^    def read( self, offset, length):$/;"	m	class:VMemBackend
read	analyze/graphauswertung.py	/^	def read(self, directory):$/;"	m	class:FlxLogAnalyzer
readDotfile	analyze/graphauswertung.py	/^	def readDotfile(self, analyzed_function, logdir):$/;"	m	class:FlxLogAnalyzer
readJson	analyze/graphauswertung.py	/^	def readJson(self, analyzed_function, logdir):$/;"	m	class:FlxLogAnalyzer
readmem	PyQEMU.py	/^	def readmem(self, address, length):$/;"	m	class:TracedProcess
recordEIP	pyemu/FlxPyEmu.py	/^	def recordEIP(self, eip):$/;"	m	class:DataflowRecorder
recordEIP	pyemu/flxanalyze.py	/^	def recordEIP(self, eip):$/;"	m	class:DataflowRecorder
recordInstruction	pyemu/FlxPyEmu.py	/^	def recordInstruction(self, emu, EIP):$/;"	m	class:DataflowRecorder
recordInstruction	pyemu/flxanalyze.py	/^	def recordInstruction(self, emu, EIP):$/;"	m	class:DataflowRecorder
recordRead	pyemu/FlxPyEmu.py	/^	def recordRead(self, address):$/;"	m	class:FlowGraph
recordWrite	pyemu/FlxPyEmu.py	/^	def recordWrite(self, address):$/;"	m	class:FlowGraph
regAccess	pyemu/FlxPyEmu.py	/^	def regAccess(self, emu, register, value, operation):$/;"	m	class:DataflowRecorder
regAccess	pyemu/flxanalyze.py	/^	def regAccess(self, emu, register, value, operation):$/;"	m	class:DataflowRecorder
register	PyQEMU.py	/^	def register(self, register):$/;"	m	class:TracedProcess
registerCreateThreadCall	PyQEMU.py	/^	def registerCreateThreadCall(self):$/;"	m	class:TracedProcess
registerFunctionHandler	PyQEMU.py	/^	def registerFunctionHandler(self, dllname, function, callback):$/;"	m	class:TracedProcess
regs	cpu.h	/^    target_ulong regs[CPU_NB_REGS];$/;"	m	struct:CPUX86State
regs	pyemu/FlxPyEmu.py	/^	regs = {$/;"	v
regs	pyemu/flxanalyze.py	/^	regs = {$/;"	v
relocate_image	pefile.py	/^    def relocate_image(self, new_ImageBase):$/;"	m	class:PE
relocation_types	pefile.py	/^relocation_types = [$/;"	v
render_pascal_16	pefile.py	/^    def render_pascal_16(self):$/;"	m	class:UnicodeStringWrapperPostProcessor
render_unicode_16	pefile.py	/^    def render_unicode_16(self):$/;"	m	class:UnicodeStringWrapperPostProcessor
rep	pyemu/PyInstruction.py	/^    def rep(self):$/;"	m	class:PyInstruction
repe	pyemu/PyInstruction.py	/^    def repe(self):$/;"	m	class:PyInstruction
repne	pyemu/PyInstruction.py	/^    def repne(self):$/;"	m	class:PyInstruction
reserved_1	svm.h	/^	uint8_t reserved_1[43];$/;"	m	struct:vmcb_save_area
reserved_1	svm.h	/^	uint8_t reserved_1[44];$/;"	m	struct:vmcb_control_area
reserved_2	svm.h	/^	uint8_t reserved_2[3];$/;"	m	struct:vmcb_control_area
reserved_2	svm.h	/^	uint8_t reserved_2[4];$/;"	m	struct:vmcb_save_area
reserved_3	svm.h	/^	uint8_t reserved_3[112];$/;"	m	struct:vmcb_save_area
reserved_3	svm.h	/^	uint8_t reserved_3[4];$/;"	m	struct:vmcb_control_area
reserved_4	svm.h	/^	uint8_t reserved_4[16];$/;"	m	struct:vmcb_control_area
reserved_4	svm.h	/^	uint8_t reserved_4[88];$/;"	m	struct:vmcb_save_area
reserved_5	svm.h	/^	uint8_t reserved_5[24];$/;"	m	struct:vmcb_save_area
reserved_5	svm.h	/^	uint8_t reserved_5[832];$/;"	m	struct:vmcb_control_area
reserved_6	svm.h	/^	uint8_t reserved_6[32];$/;"	m	struct:vmcb_save_area
reset	Structures.py	/^    def reset( self):$/;"	m	class:LIST_ENTRY
resetRecord	pyemu/FlxPyEmu.py	/^	def resetRecord(self):$/;"	m	class:FlowGraph
resolve	PyQEMU.py	/^	def resolve(self):$/;"	m	class:CalledFunction
resolveToName	PyQEMU.py	/^	def resolveToName(self):$/;"	m	class:CalledFunction
resource_type	pefile.py	/^resource_type = [$/;"	v
retrieve_flags	pefile.py	/^    def retrieve_flags(self, flag_dict, flag_filter):$/;"	m	class:PE
retval	PyQEMU.py	/^	def retval(self):$/;"	m	class:CalledFunction
rex_b	translate.c	/^    int rex_x, rex_b;$/;"	m	struct:DisasContext	file:
rex_x	translate.c	/^    int rex_x, rex_b;$/;"	m	struct:DisasContext	file:
rffs1	ops_sse.h	/^static inline int rffs1(unsigned int val)$/;"	f
rflags	svm.h	/^	uint64_t rflags;$/;"	m	struct:vmcb_save_area
rip	svm.h	/^	uint64_t rip;$/;"	m	struct:vmcb_save_area
rip_offset	translate.c	/^    int rip_offset; \/* only used in x86_64, but left for simplicity *\/$/;"	m	struct:DisasContext	file:
root	Structures.py	/^    root = property( get_vad_root)$/;"	v	class:VadTree
rsp	svm.h	/^	uint64_t rsp;$/;"	m	struct:vmcb_save_area
run	analyze/analyze.py	/^	def run(self):$/;"	m	class:PyQemuDumpAnalyzer
run	analyze/callgraph.py	/^	def run(self):$/;"	m	class:CallGraphAnalyzer
run	pyemu/FlxPyEmu.py	/^	def run(self, registers = {}, function_name = "unknown"):$/;"	m	class:FunctionEmulator
run	pyemu/flxanalyze.py	/^	def run(self, registers = {}):$/;"	m	class:FunctionEmulator
runCallbacks	PyQEMU.py	/^	def runCallbacks(self, function, event_type):$/;"	m	class:TracedProcess
rva2raw	Structures.py	/^    def rva2raw( self, rva):$/;"	m	class:PE
s	pyemu/PyEmu.py	/^                print "[*] Adding import from %s" % entry.dll$/;"	i
sanitize_value	pyemu/PyCPU.py	/^    def sanitize_value(self, value, size):$/;"	m	class:PyCPU
satsb	ops_sse.h	/^static inline int satsb(int x)$/;"	f
satsw	ops_sse.h	/^static inline int satsw(int x)$/;"	f
satub	ops_sse.h	/^static inline int satub(int x)$/;"	f
satuw	ops_sse.h	/^static inline int satuw(int x)$/;"	f
save	svm.h	/^	struct vmcb_save_area save;$/;"	m	struct:vmcb	typeref:struct:vmcb::vmcb_save_area
section_characteristics	pefile.py	/^section_characteristics = [$/;"	v
segs	cpu.h	/^    SegmentCache segs[6]; \/* selector values *\/$/;"	m	struct:CPUX86State
selector	cpu.h	/^    uint32_t selector;$/;"	m	struct:SegmentCache
selector	svm.h	/^	uint16_t selector;$/;"	m	struct:vmcb_seg
set	Structures.py	/^    def set( dummy, name, self, value):$/;"	m	class:StructuredData
set	flx_instrument.h	/^	char set;$/;"	m	struct:__anon13
set_bytes_at_offset	pefile.py	/^    def set_bytes_at_offset(self, offset, data):$/;"	m	class:PE
set_bytes_at_rva	pefile.py	/^    def set_bytes_at_rva(self, rva, data):$/;"	m	class:PE
set_context	pyemu/PyCPU.py	/^    def set_context(self, context):$/;"	m	class:PyCPU
set_data	pefile.py	/^    def set_data(self, data):$/;"	m	class:SectionStructure
set_data	pyemu/PyMemory.py	/^    def set_data(self, data):$/;"	m	class:PyMemoryPage
set_debug	pyemu/PyCPU.py	/^    def set_debug(self, level):$/;"	m	class:PyCPU
set_debug	pyemu/PyMemory.py	/^    def set_debug(self, level):$/;"	m	class:PyMemory
set_debug	pyemu/PyMemory.py	/^    def set_debug(self, level):$/;"	m	class:PyMemoryPage
set_debug	pyemu/PyOS.py	/^    def set_debug(self, level):$/;"	m	class:PyLinux
set_debug	pyemu/PyOS.py	/^    def set_debug(self, level):$/;"	m	class:PyWindows
set_dword_at_offset	pefile.py	/^    def set_dword_at_offset(self, offset, dword):$/;"	m	class:PE
set_dword_at_rva	pefile.py	/^    def set_dword_at_rva(self, rva, dword):$/;"	m	class:PE
set_exception_handler	pyemu/PyEmu.py	/^    def set_exception_handler(self, exception, handler):$/;"	m	class:PyEmu
set_file_offset	pefile.py	/^    def set_file_offset(self, offset):$/;"	m	class:Structure
set_flags	pefile.py	/^    def set_flags(self, obj, flag_field, flags):$/;"	m	class:PE
set_flags	pyemu/PyCPU.py	/^    def set_flags(self, mnemonic, op1, op2, result, size):$/;"	m	class:PyCPU
set_heap_access_handler	pyemu/PyEmu.py	/^    def set_heap_access_handler(self, handler):$/;"	m	class:PyEmu
set_heap_read_handler	pyemu/PyEmu.py	/^    def set_heap_read_handler(self, handler):$/;"	m	class:PyEmu
set_heap_write_handler	pyemu/PyEmu.py	/^    def set_heap_write_handler(self, handler):$/;"	m	class:PyEmu
set_instruction	pyemu/PyInstruction.py	/^    def set_instruction(self, instruction):$/;"	m	class:PyInstruction
set_interrupt_handler	pyemu/PyEmu.py	/^    def set_interrupt_handler(self, interrupt, handler):$/;"	m	class:PyEmu
set_library_handler	pyemu/PyEmu.py	/^    def set_library_handler(self, function, handler):$/;"	m	class:PyEmu
set_memory	pyemu/PyCPU.py	/^    def set_memory(self, address, value, size):$/;"	m	class:PyCPU
set_memory	pyemu/PyEmu.py	/^    def set_memory(self, address, value, size=0):$/;"	m	class:PyEmu
set_memory	pyemu/PyMemory.py	/^    def set_memory(self, address, value, size):$/;"	m	class:PyMemory
set_memory16	pyemu/PyCPU.py	/^    def set_memory16(self, address, value):$/;"	m	class:PyCPU
set_memory32	pyemu/PyCPU.py	/^    def set_memory32(self, address, value):$/;"	m	class:PyCPU
set_memory8	pyemu/PyCPU.py	/^    def set_memory8(self, address, value):$/;"	m	class:PyCPU
set_memory_access_handler	pyemu/PyEmu.py	/^    def set_memory_access_handler(self, handler):$/;"	m	class:PyEmu
set_memory_handler	pyemu/PyEmu.py	/^    def set_memory_handler(self, address, handler):$/;"	m	class:PyEmu
set_memory_read_handler	pyemu/PyEmu.py	/^    def set_memory_read_handler(self, handler):$/;"	m	class:PyEmu
set_memory_write_handler	pyemu/PyEmu.py	/^    def set_memory_write_handler(self, handler):$/;"	m	class:PyEmu
set_mnemonic_handler	pyemu/PyEmu.py	/^    def set_mnemonic_handler(self, mnemonic, handler):$/;"	m	class:PyEmu
set_opcode_handler	pyemu/PyEmu.py	/^    def set_opcode_handler(self, opcode, handler):$/;"	m	class:PyEmu
set_operand	pyemu/PyInstruction.py	/^    def set_operand(self, operand):$/;"	m	class:PyOperand
set_pc_handler	pyemu/PyEmu.py	/^    def set_pc_handler(self, address, handler):$/;"	m	class:PyEmu
set_permissions	pyemu/PyMemory.py	/^    def set_permissions(self, permissions):$/;"	m	class:PyMemoryPage
set_qword_at_offset	pefile.py	/^    def set_qword_at_offset(self, offset, qword):$/;"	m	class:PE
set_qword_at_rva	pefile.py	/^    def set_qword_at_rva(self, rva, qword):$/;"	m	class:PE
set_r	pyemu/PyMemory.py	/^    def set_r(self):$/;"	m	class:PyMemoryPage
set_register	pyemu/PyCPU.py	/^    def set_register(self, register, value, size):$/;"	m	class:PyCPU
set_register	pyemu/PyEmu.py	/^    def set_register(self, register, value, name=""):$/;"	m	class:PyEmu
set_register16	pyemu/PyCPU.py	/^    def set_register16(self, register, value):$/;"	m	class:PyCPU
set_register32	pyemu/PyCPU.py	/^    def set_register32(self, register, value):$/;"	m	class:PyCPU
set_register8	pyemu/PyCPU.py	/^    def set_register8(self, register, value):$/;"	m	class:PyCPU
set_register_handler	pyemu/PyEmu.py	/^    def set_register_handler(self, register, handler):$/;"	m	class:PyEmu
set_rw	pyemu/PyMemory.py	/^    def set_rw(self):$/;"	m	class:PyMemoryPage
set_rwx	pyemu/PyMemory.py	/^    def set_rwx(self):$/;"	m	class:PyMemoryPage
set_rx	pyemu/PyMemory.py	/^    def set_rx(self):$/;"	m	class:PyMemoryPage
set_seg	kvm.c	/^static void set_seg(struct kvm_segment *lhs, const SegmentCache *rhs)$/;"	f	file:
set_selector	pyemu/PyOS.py	/^            def set_selector(self, selector, value):$/;"	m	class:PyWindows.__THREAD.__LDT
set_selector	pyemu/PyOS.py	/^    def set_selector(self, selector, value):$/;"	m	class:PyWindows
set_stack_access_handler	pyemu/PyEmu.py	/^    def set_stack_access_handler(self, handler):$/;"	m	class:PyEmu
set_stack_argument	pyemu/PyEmu.py	/^    def set_stack_argument(self, offset, value, name=""):$/;"	m	class:PyEmu
set_stack_read_handler	pyemu/PyEmu.py	/^    def set_stack_read_handler(self, handler):$/;"	m	class:PyEmu
set_stack_variable	pyemu/PyEmu.py	/^    def set_stack_variable(self, offset, value, size=0, name=""):$/;"	m	class:PyEmu
set_stack_write_handler	pyemu/PyEmu.py	/^    def set_stack_write_handler(self, handler):$/;"	m	class:PyEmu
set_v8086_seg	kvm.c	/^static void set_v8086_seg(struct kvm_segment *lhs, const SegmentCache *rhs)$/;"	f	file:
set_w	pyemu/PyMemory.py	/^    def set_w(self):$/;"	m	class:PyMemoryPage
set_word_at_offset	pefile.py	/^    def set_word_at_offset(self, offset, word):$/;"	m	class:PE
set_word_at_rva	pefile.py	/^    def set_word_at_rva(self, rva, word):$/;"	m	class:PE
set_x	pyemu/PyMemory.py	/^    def set_x(self):$/;"	m	class:PyMemoryPage
setfeatures	cpuid.c	/^static void setfeatures(uint32_t *pval, const char *str,$/;"	f	file:
setscalar	cpuid.c	859;"	d	file:
setup_context	pyemu/PyEmu.py	/^    def setup_context(self):$/;"	m	class:IDAPyEmu
setup_context	pyemu/PyEmu.py	/^    def setup_context(self):$/;"	m	class:PEPyEmu
setup_context	pyemu/PyEmu.py	/^    def setup_context(self):$/;"	m	class:PyDbgPyEmu
setup_os	pyemu/PyEmu.py	/^    def setup_os(self):$/;"	m	class:IDAPyEmu
setup_os	pyemu/PyEmu.py	/^    def setup_os(self):$/;"	m	class:PEPyEmu
sfmask	svm.h	/^	uint64_t sfmask;$/;"	m	struct:vmcb_save_area
sha	pefile.py	/^        import sha$/;"	i
sha1	pefile.py	/^        sha1 = sha.new$/;"	v
sha1	pefile.py	/^    sha1 = hashlib.sha1$/;"	v
sha256	pefile.py	/^    sha256 = hashlib.sha256$/;"	v
sha512	pefile.py	/^    sha512 = hashlib.sha512$/;"	v
show	analyze/graphauswertung.py	/^	def show(self, key, presenter = None):$/;"	m	class:FlxLogAnalyzer
show	analyze/graphauswertung.py	/^	def show(self, keys = None):$/;"	m	class:FlxFunctionAnalysis
showStats	pyemu/flxanalyze.py	/^	def showStats(self):$/;"	m	class:DataflowRecorder
show_warnings	pefile.py	/^    def show_warnings(self):$/;"	m	class:PE
sign_extend	pyemu/PyCPU.py	/^    def sign_extend(self, number, orig_size, dest_size):$/;"	m	class:PyCPU
singlestep_enabled	translate.c	/^    int singlestep_enabled; \/* "hardware" single step enabled *\/$/;"	m	struct:DisasContext	file:
sipi_vector	cpu.h	/^    uint32_t sipi_vector;$/;"	m	struct:CPUX86State
sizeHint	PyQEMU.py	/^	def sizeHint(self, len):$/;"	m	class:Buffer
sizeof	pefile.py	/^    def sizeof(self):$/;"	m	class:Structure
slots	flx_instrument.h	/^	blacklist_slot slots[FLX_BLACKLIST_SIZE];$/;"	m	struct:__anon14
smbase	cpu.h	/^    uint32_t smbase;$/;"	m	struct:CPUX86State
soft_interrupt	cpu.h	/^    uint8_t soft_interrupt;$/;"	m	struct:CPUX86State
sortby	analyze/graphauswertung.py	/^	def sortby(self, d, k):$/;"	m	class:FlxLogAnalyzer
ss	svm.h	/^	struct vmcb_seg ss;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
ss32	translate.c	/^    int ss32;   \/* 32 bit stack segment *\/$/;"	m	struct:DisasContext	file:
ss_override	pyemu/PyInstruction.py	/^    def ss_override(self):$/;"	m	class:PyInstruction
sse_op_helper_s	translate.c	/^struct sse_op_helper_s {$/;"	s	file:
sse_op_table1	translate.c	/^static void *sse_op_table1[256][4] = {$/;"	v	file:
sse_op_table2	translate.c	/^static void *sse_op_table2[3 * 8][2] = {$/;"	v	file:
sse_op_table3	translate.c	/^static void *sse_op_table3[4 * 3] = {$/;"	v	file:
sse_op_table4	translate.c	/^static void *sse_op_table4[8][4] = {$/;"	v	file:
sse_op_table5	translate.c	/^static void *sse_op_table5[256] = {$/;"	v	file:
sse_op_table6	translate.c	/^static struct sse_op_helper_s sse_op_table6[256] = {$/;"	v	typeref:struct:sse_op_helper_s	file:
sse_op_table7	translate.c	/^static struct sse_op_helper_s sse_op_table7[256] = {$/;"	v	typeref:struct:sse_op_helper_s	file:
sse_status	cpu.h	/^    float_status sse_status;$/;"	m	struct:CPUX86State
sstrcmp	cpuid.c	/^static int sstrcmp(const char *s1, const char *e1, const char *s2,$/;"	f	file:
star	cpu.h	/^    uint64_t star;$/;"	m	struct:CPUX86State
star	svm.h	/^	uint64_t star;$/;"	m	struct:vmcb_save_area
startup_time	flx_instrument.c	/^unsigned startup_time = 0;$/;"	v
stepping	cpuid.c	/^    int stepping;$/;"	m	struct:x86_def_t	file:
str	Structures.py	/^    def str( self):$/;"	m	class:UNICODE_STRING
string	event.py	/^import string$/;"	i
string	pefile.py	/^import string$/;"	i
string	pyemu/PyMemory.py	/^import struct, sys, string$/;"	i
string_from_buf	event.py	/^def string_from_buf(buffer, len = None, omit = 0):$/;"	f
struct	PyQEMU.py	/^import struct$/;"	i
struct	Structures.py	/^import struct$/;"	i
struct	fhandle.py	/^import struct$/;"	i
struct	pefile.py	/^import struct$/;"	i
struct	pyemu/PyCPU.py	/^import sys, os, time, struct, re$/;"	i
struct	pyemu/PyEmu.py	/^import sys, os, time, struct, re$/;"	i
struct	pyemu/PyInstruction.py	/^import sys, os, time, struct, re$/;"	i
struct	pyemu/PyMemory.py	/^import struct, sys, string$/;"	i
struct	pyemu/PyOS.py	/^import sys, struct$/;"	i
subgraph	analyze/graphauswertung.py	/^	def subgraph(self, nodes):$/;"	m	class:MyFasterGraph
sublang	pefile.py	/^sublang =  [$/;"	v
subsystem_types	pefile.py	/^subsystem_types = [$/;"	v
svm_check_intercept	exec.h	/^static inline void svm_check_intercept(uint32_t type)$/;"	f
svm_is_rep	translate.c	/^static inline int svm_is_rep(int prefixes)$/;"	f	file:
svm_load_seg	op_helper.c	/^static inline void svm_load_seg(target_phys_addr_t addr, SegmentCache *sc)$/;"	f	file:
svm_load_seg_cache	op_helper.c	/^static inline void svm_load_seg_cache(target_phys_addr_t addr, $/;"	f	file:
svm_save_seg	op_helper.c	/^static inline void svm_save_seg(target_phys_addr_t addr,$/;"	f	file:
swap_bytes	pyemu/PyCPU.py	/^    def swap_bytes(self, value):$/;"	m	class:PyCPU
switch_tss	op_helper.c	/^static void switch_tss(int tss_selector,$/;"	f	file:
sys	PyQEMU.py	/^import sys$/;"	i
sys	analyze/analyze.py	/^import sys$/;"	i
sys	analyze/callgraph.py	/^import sys$/;"	i
sys	analyze/graphauswertung.py	/^import sys$/;"	i
sys	analyze/viewgraph.py	/^import sys$/;"	i
sys	fhandle.py	/^import sys$/;"	i
sys	flxstats.py	/^import sys$/;"	i
sys	pyemu/FlxPyEmu.py	/^import os, sys$/;"	i
sys	pyemu/PyCPU.py	/^import sys, os, time, struct, re$/;"	i
sys	pyemu/PyEmu.py	/^import sys, os, time, struct, re$/;"	i
sys	pyemu/PyInstruction.py	/^import sys, os, time, struct, re$/;"	i
sys	pyemu/PyMemory.py	/^import struct, sys, string$/;"	i
sys	pyemu/PyOS.py	/^import sys, struct$/;"	i
sys	pyemu/flxanalyze.py	/^import os, sys$/;"	i
sys	test/pygcc-test.py	/^import sys$/;"	i
sys	test/windecl.py	/^import sys$/;"	i
syscall_table	syscalls.py	/^syscall_table = {$/;"	v
syscalls	PyQEMU.py	/^import syscalls$/;"	i
syscalls	event.py	/^import syscalls$/;"	i
syscalls	fhandle.py	/^import syscalls$/;"	i
sysenter_cs	cpu.h	/^    uint32_t sysenter_cs;$/;"	m	struct:CPUX86State
sysenter_cs	svm.h	/^	uint64_t sysenter_cs;$/;"	m	struct:vmcb_save_area
sysenter_eip	cpu.h	/^    target_ulong sysenter_eip;$/;"	m	struct:CPUX86State
sysenter_eip	svm.h	/^	uint64_t sysenter_eip;$/;"	m	struct:vmcb_save_area
sysenter_esp	cpu.h	/^    target_ulong sysenter_esp;$/;"	m	struct:CPUX86State
sysenter_esp	svm.h	/^	uint64_t sysenter_esp;$/;"	m	struct:vmcb_save_area
system_time_msr	cpu.h	/^    uint64_t system_time_msr;$/;"	m	struct:CPUX86State
t_regex	flxstats.py	/^	t_regex = re.compile("Thread: ([0-9]+)")$/;"	v	class:FlxLogParser
tb	translate.c	/^    struct TranslationBlock *tb;$/;"	m	struct:DisasContext	typeref:struct:DisasContext::TranslationBlock	file:
tcg_gen_lshift	translate.c	/^static inline void tcg_gen_lshift(TCGv ret, TCGv arg1, target_long arg2)$/;"	f	file:
terminate	PyQEMU.py	/^	def terminate(self):$/;"	m	class:TracedProcess
tf	translate.c	/^    int tf;     \/* TF cpu flag *\/$/;"	m	struct:DisasContext	file:
this_module_dir_path	test/pygcc-test.py	/^this_module_dir_path = os.path.abspath ( os.path.dirname( sys.modules[__name__].__file__) )$/;"	v
thread	PyQEMU.py	/^	thread = property(getThread)$/;"	v	class:TracedProcess
threading	PyQEMU.py	/^import threading$/;"	i
threading	fhandle.py	/^import threading$/;"	i
time	PyQEMU.py	/^import time$/;"	i
time	analyze/viewgraph.py	/^import time$/;"	i
time	pefile.py	/^import time$/;"	i
time	pyemu/PyCPU.py	/^import sys, os, time, struct, re$/;"	i
time	pyemu/PyEmu.py	/^import sys, os, time, struct, re$/;"	i
time	pyemu/PyInstruction.py	/^import sys, os, time, struct, re$/;"	i
tlb_ctl	svm.h	/^	uint8_t tlb_ctl;$/;"	m	struct:vmcb_control_area
tlb_fill	op_helper.c	/^void tlb_fill(target_ulong addr, int is_write, int mmu_idx, void *retaddr)$/;"	f
to_regex	flxstats.py	/^	to_regex   = re.compile("-> \\\\((.*)\\\\)")$/;"	v	class:FlxLogParser
top	PyQEMU.py	/^	def top(self):$/;"	m	class:CalledFunction
top	PyQEMU.py	/^	def top(self):$/;"	m	class:Stack
tr	cpu.h	/^    SegmentCache tr;$/;"	m	struct:CPUX86State
tr	svm.h	/^	struct vmcb_seg tr;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
trace_processes	PyQEMU.py	/^trace_processes = {$/;"	v
traceback	PyQEMU.py	/^import traceback$/;"	i
traceback	fhandle.py	/^import traceback$/;"	i
trigger	PyQEMU.py	/^	def trigger(self):$/;"	m	class:Breakpoint
try_get_cpuid	kvm.c	/^static struct kvm_cpuid2 *try_get_cpuid(KVMState *s, int max)$/;"	f	file:
tsc	cpu.h	/^    uint64_t tsc;$/;"	m	struct:CPUX86State
tsc_aux	cpu.h	/^    uint64_t tsc_aux;$/;"	m	struct:CPUX86State
tsc_offset	cpu.h	/^    uint64_t tsc_offset;$/;"	m	struct:CPUX86State
tsc_offset	svm.h	/^	uint64_t tsc_offset;$/;"	m	struct:vmcb_control_area
tss_load_seg	op_helper.c	/^static void tss_load_seg(int seg_reg, int selector)$/;"	f	file:
type	kvm.c	/^    int type;$/;"	m	struct:__anon15	file:
type_converter	test/memobj.py	/^type_converter = {$/;"	v
unavailable_host_feature	cpuid.c	/^static int unavailable_host_feature(struct model_features_t *f, uint32_t mask)$/;"	f	file:
unregisterCreateThreadCall	PyQEMU.py	/^	def unregisterCreateThreadCall(self):$/;"	m	class:TracedProcess
update	PyQEMU.py	/^	def update(self):$/;"	m	class:Buffer
update	PyQEMU.py	/^	def update(self):$/;"	m	class:StackMemoryTracer
update	processinfo.py	/^    def update( self):$/;"	m	class:Image
update	processinfo.py	/^    def update( self):$/;"	m	class:Process
update	pyemu/FlxPyEmu.py	/^	def update(self, address, operation):$/;"	m	class:FlowGraph
update_all_section_data	pefile.py	/^    def update_all_section_data(self):$/;"	m	class:PE
update_fp_status	op_helper.c	/^static void update_fp_status(void)$/;"	f	file:
update_images	processinfo.py	/^    def update_images( self):$/;"	m	class:Process
update_pending	processinfo.py	/^    update_pending = property( check_update_pending)$/;"	v	class:Process
update_section_data	pefile.py	/^    def update_section_data(self, section):$/;"	m	class:PE
upper	exec.h	/^        int32_t upper;$/;"	m	struct:__anon9::__anon10
upper	exec.h	/^        int32_t upper;$/;"	m	struct:__anon9::__anon11
upper	exec.h	/^        unsigned short upper;$/;"	m	struct:__anon7::__anon8
usage	analyze/callgraph.py	/^def usage():$/;"	f
usage	analyze/graphauswertung.py	/^def usage():$/;"	f
usage	flxstats.py	/^def usage():$/;"	f
userspace	Helpers.py	/^def userspace(addr):$/;"	f
v_tpr	cpu.h	/^    uint8_t v_tpr;$/;"	m	struct:CPUX86State
validate_seg	op_helper.c	/^static inline void validate_seg(int seg_reg, int cpl)$/;"	f	file:
vendor1	cpuid.c	/^    uint32_t vendor1, vendor2, vendor3;$/;"	m	struct:x86_def_t	file:
vendor2	cpuid.c	/^    uint32_t vendor1, vendor2, vendor3;$/;"	m	struct:x86_def_t	file:
vendor3	cpuid.c	/^    uint32_t vendor1, vendor2, vendor3;$/;"	m	struct:x86_def_t	file:
vendor_override	cpuid.c	/^    int vendor_override;$/;"	m	struct:x86_def_t	file:
verify_checksum	pefile.py	/^    def verify_checksum(self):$/;"	m	class:PE
version_is_5	machine.c	/^static bool version_is_5(void *opaque, int version_id)$/;"	f	file:
vm86	translate.c	/^    int vm86;   \/* vm86 mode *\/$/;"	m	struct:DisasContext	file:
vm_hsave	cpu.h	/^    uint64_t vm_hsave;$/;"	m	struct:CPUX86State
vm_vmcb	cpu.h	/^    uint64_t vm_vmcb;$/;"	m	struct:CPUX86State
vmcb	svm.h	/^struct __attribute__ ((__packed__)) vmcb {$/;"	s
vmcb_control_area	svm.h	/^struct __attribute__ ((__packed__)) vmcb_control_area {$/;"	s
vmcb_save_area	svm.h	/^struct __attribute__ ((__packed__)) vmcb_save_area {$/;"	s
vmcb_seg	svm.h	/^struct __attribute__ ((__packed__)) vmcb_seg {$/;"	s
vmstate_cpu	machine.c	/^static const VMStateDescription vmstate_cpu = {$/;"	v	file:
vmstate_fpreg	machine.c	/^const VMStateInfo vmstate_fpreg = {$/;"	v
vmstate_fpreg	machine.c	/^static const VMStateInfo vmstate_fpreg = {$/;"	v	file:
vmstate_fpreg_0_mmx	machine.c	/^const VMStateInfo vmstate_fpreg_0_mmx = {$/;"	v
vmstate_fpreg_0_no_mmx	machine.c	/^const VMStateInfo vmstate_fpreg_0_no_mmx = {$/;"	v
vmstate_fpreg_1_mmx	machine.c	/^static const VMStateInfo vmstate_fpreg_1_mmx = {$/;"	v	file:
vmstate_fpreg_1_no_mmx	machine.c	/^static const VMStateInfo vmstate_fpreg_1_no_mmx = {$/;"	v	file:
vmstate_hack_uint64_as_uint32	machine.c	/^static const VMStateInfo vmstate_hack_uint64_as_uint32 = {$/;"	v	file:
vmstate_mtrr_var	machine.c	/^static const VMStateDescription vmstate_mtrr_var = {$/;"	v	file:
vmstate_segment	machine.c	/^static const VMStateDescription vmstate_segment = {$/;"	v	file:
vmstate_xmm_reg	machine.c	/^static const VMStateDescription vmstate_xmm_reg = {$/;"	v	file:
vmstate_ymmh_reg	machine.c	/^static const VMStateDescription vmstate_ymmh_reg = {$/;"	v	file:
wall_clock_msr	cpu.h	/^    uint64_t wall_clock_msr;$/;"	m	struct:CPUX86State
win_sp2	test/test.h	/^namespace win_sp2 {$/;"	n
write	Structures.py	/^    def write( self, offset, replacement):$/;"	m	class:Backend
write	Structures.py	/^    def write( self, offset, replacement):$/;"	m	class:CopyingStringBackend
write	Structures.py	/^    def write( self, offset, replacement):$/;"	m	class:ObjectBackend
write	Structures.py	/^    def write( self, offset, replacement):$/;"	m	class:VMemBackend
write	pefile.py	/^    def write(self, filename=None):$/;"	m	class:PE
x86_64_hregs	translate.c	/^static int x86_64_hregs;$/;"	v	file:
x86_cpu_list	cpuid.c	/^void x86_cpu_list (FILE *f, int (*cpu_fprintf)(FILE *f, const char *fmt, ...),$/;"	f
x86_cpudef_setup	cpuid.c	/^void x86_cpudef_setup(void)$/;"	f
x86_def_t	cpuid.c	/^typedef struct x86_def_t {$/;"	s	file:
x86_def_t	cpuid.c	/^} x86_def_t;$/;"	t	typeref:struct:x86_def_t	file:
x86_defs	cpuid.c	/^static x86_def_t *x86_defs = {NULL};$/;"	v	file:
x86_longdouble	machine.c	/^union x86_longdouble {$/;"	u	file:
xcr0	cpu.h	/^    uint64_t xcr0;$/;"	m	struct:CPUX86State
xlevel	cpuid.c	/^    uint32_t xlevel;$/;"	m	struct:x86_def_t	file:
xmm_regs	cpu.h	/^    XMMReg xmm_regs[CPU_NB_REGS];$/;"	m	struct:CPUX86State
xmm_t0	cpu.h	/^    XMMReg xmm_t0;$/;"	m	struct:CPUX86State
xstate_bv	cpu.h	/^    uint64_t xstate_bv;$/;"	m	struct:CPUX86State
ymmh_regs	cpu.h	/^    XMMReg ymmh_regs[CPU_NB_REGS];$/;"	m	struct:CPUX86State
